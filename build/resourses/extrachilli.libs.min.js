/*! jQuery v3.5.1 | (c) JS Foundation and other contributors | jquery.org/license */
!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(C,e){"use strict";var t=[],r=Object.getPrototypeOf,s=t.slice,g=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},u=t.push,i=t.indexOf,n={},o=n.toString,v=n.hasOwnProperty,a=v.toString,l=a.call(Object),y={},m=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},x=function(e){return null!=e&&e===e.window},E=C.document,c={type:!0,src:!0,nonce:!0,noModule:!0};function b(e,t,n){var r,i,o=(n=n||E).createElement("script");if(o.text=e,t)for(r in c)(i=t[r]||t.getAttribute&&t.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function w(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?n[o.call(e)]||"object":typeof e}var f="3.5.1",S=function(e,t){return new S.fn.init(e,t)};function p(e){var t=!!e&&"length"in e&&e.length,n=w(e);return!m(e)&&!x(e)&&("array"===n||0===t||"number"==typeof t&&0<t&&t-1 in e)}S.fn=S.prototype={jquery:f,constructor:S,length:0,toArray:function(){return s.call(this)},get:function(e){return null==e?s.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=S.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return S.each(this,e)},map:function(n){return this.pushStack(S.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(S.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(S.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:u,sort:t.sort,splice:t.splice},S.extend=S.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for("boolean"==typeof a&&(l=a,a=arguments[s]||{},s++),"object"==typeof a||m(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(e=arguments[s]))for(t in e)r=e[t],"__proto__"!==t&&a!==r&&(l&&r&&(S.isPlainObject(r)||(i=Array.isArray(r)))?(n=a[t],o=i&&!Array.isArray(n)?[]:i||S.isPlainObject(n)?n:{},i=!1,a[t]=S.extend(l,o,r)):void 0!==r&&(a[t]=r));return a},S.extend({expando:"jQuery"+(f+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==o.call(e))&&(!(t=r(e))||"function"==typeof(n=v.call(t,"constructor")&&t.constructor)&&a.call(n)===l)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,n){b(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,r=0;if(p(e)){for(n=e.length;r<n;r++)if(!1===t.call(e[r],r,e[r]))break}else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},makeArray:function(e,t){var n=t||[];return null!=e&&(p(Object(e))?S.merge(n,"string"==typeof e?[e]:e):u.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:i.call(t,e,n)},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;r<n;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r=[],i=0,o=e.length,a=!n;i<o;i++)!t(e[i],i)!==a&&r.push(e[i]);return r},map:function(e,t,n){var r,i,o=0,a=[];if(p(e))for(r=e.length;o<r;o++)null!=(i=t(e[o],o,n))&&a.push(i);else for(o in e)null!=(i=t(e[o],o,n))&&a.push(i);return g(a)},guid:1,support:y}),"function"==typeof Symbol&&(S.fn[Symbol.iterator]=t[Symbol.iterator]),S.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){n["[object "+t+"]"]=t.toLowerCase()});var d=function(n){var e,d,b,o,i,h,f,g,w,u,l,T,C,a,E,v,s,c,y,S="sizzle"+1*new Date,p=n.document,k=0,r=0,m=ue(),x=ue(),A=ue(),N=ue(),D=function(e,t){return e===t&&(l=!0),0},j={}.hasOwnProperty,t=[],q=t.pop,L=t.push,H=t.push,O=t.slice,P=function(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1},R="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",I="(?:\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",W="\\["+M+"*("+I+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+I+"))|)"+M+"*\\]",F=":("+I+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+W+")*)|.*)\\)|)",B=new RegExp(M+"+","g"),$=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),_=new RegExp("^"+M+"*,"+M+"*"),z=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),U=new RegExp(M+"|>"),X=new RegExp(F),V=new RegExp("^"+I+"$"),G={ID:new RegExp("^#("+I+")"),CLASS:new RegExp("^\\.("+I+")"),TAG:new RegExp("^("+I+"|[*])"),ATTR:new RegExp("^"+W),PSEUDO:new RegExp("^"+F),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+R+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},Y=/HTML$/i,Q=/^(?:input|select|textarea|button)$/i,J=/^h\d$/i,K=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=new RegExp("\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\([^\\r\\n\\f])","g"),ne=function(e,t){var n="0x"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},re=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ie=function(e,t){return t?"\0"===e?"\ufffd":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},oe=function(){T()},ae=be(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{H.apply(t=O.call(p.childNodes),p.childNodes),t[p.childNodes.length].nodeType}catch(e){H={apply:t.length?function(e,t){L.apply(e,O.call(t))}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1}}}function se(t,e,n,r){var i,o,a,s,u,l,c,f=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!r&&(T(e),e=e||C,E)){if(11!==p&&(u=Z.exec(t)))if(i=u[1]){if(9===p){if(!(a=e.getElementById(i)))return n;if(a.id===i)return n.push(a),n}else if(f&&(a=f.getElementById(i))&&y(e,a)&&a.id===i)return n.push(a),n}else{if(u[2])return H.apply(n,e.getElementsByTagName(t)),n;if((i=u[3])&&d.getElementsByClassName&&e.getElementsByClassName)return H.apply(n,e.getElementsByClassName(i)),n}if(d.qsa&&!N[t+" "]&&(!v||!v.test(t))&&(1!==p||"object"!==e.nodeName.toLowerCase())){if(c=t,f=e,1===p&&(U.test(t)||z.test(t))){(f=ee.test(t)&&ye(e.parentNode)||e)===e&&d.scope||((s=e.getAttribute("id"))?s=s.replace(re,ie):e.setAttribute("id",s=S)),o=(l=h(t)).length;while(o--)l[o]=(s?"#"+s:":scope")+" "+xe(l[o]);c=l.join(",")}try{return H.apply(n,f.querySelectorAll(c)),n}catch(e){N(t,!0)}finally{s===S&&e.removeAttribute("id")}}}return g(t.replace($,"$1"),e,n,r)}function ue(){var r=[];return function e(t,n){return r.push(t+" ")>b.cacheLength&&delete e[r.shift()],e[t+" "]=n}}function le(e){return e[S]=!0,e}function ce(e){var t=C.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function fe(e,t){var n=e.split("|"),r=n.length;while(r--)b.attrHandle[n[r]]=t}function pe(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function de(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function he(n){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===n}}function ge(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&ae(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function ve(a){return le(function(o){return o=+o,le(function(e,t){var n,r=a([],e.length,o),i=r.length;while(i--)e[n=r[i]]&&(e[n]=!(t[n]=e[n]))})})}function ye(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}for(e in d=se.support={},i=se.isXML=function(e){var t=e.namespaceURI,n=(e.ownerDocument||e).documentElement;return!Y.test(t||n&&n.nodeName||"HTML")},T=se.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:p;return r!=C&&9===r.nodeType&&r.documentElement&&(a=(C=r).documentElement,E=!i(C),p!=C&&(n=C.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",oe,!1):n.attachEvent&&n.attachEvent("onunload",oe)),d.scope=ce(function(e){return a.appendChild(e).appendChild(C.createElement("div")),"undefined"!=typeof e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),d.attributes=ce(function(e){return e.className="i",!e.getAttribute("className")}),d.getElementsByTagName=ce(function(e){return e.appendChild(C.createComment("")),!e.getElementsByTagName("*").length}),d.getElementsByClassName=K.test(C.getElementsByClassName),d.getById=ce(function(e){return a.appendChild(e).id=S,!C.getElementsByName||!C.getElementsByName(S).length}),d.getById?(b.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute("id")===t}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&E){var n=t.getElementById(e);return n?[n]:[]}}):(b.filter.ID=function(e){var n=e.replace(te,ne);return function(e){var t="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===n}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&E){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode("id"))&&n.value===e)return[o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode("id"))&&n.value===e)return[o]}return[]}}),b.find.TAG=d.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):d.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},b.find.CLASS=d.getElementsByClassName&&function(e,t){if("undefined"!=typeof t.getElementsByClassName&&E)return t.getElementsByClassName(e)},s=[],v=[],(d.qsa=K.test(C.querySelectorAll))&&(ce(function(e){var t;a.appendChild(e).innerHTML="<a id='"+S+"'></a><select id='"+S+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&v.push("[*^$]="+M+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||v.push("\\["+M+"*(?:value|"+R+")"),e.querySelectorAll("[id~="+S+"-]").length||v.push("~="),(t=C.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||v.push("\\["+M+"*name"+M+"*="+M+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||v.push(":checked"),e.querySelectorAll("a#"+S+"+*").length||v.push(".#.+[+~]"),e.querySelectorAll("\\\f"),v.push("[\\r\\n\\f]")}),ce(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=C.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&v.push("name"+M+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&v.push(":enabled",":disabled"),a.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&v.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),v.push(",.*:")})),(d.matchesSelector=K.test(c=a.matches||a.webkitMatchesSelector||a.mozMatchesSelector||a.oMatchesSelector||a.msMatchesSelector))&&ce(function(e){d.disconnectedMatch=c.call(e,"*"),c.call(e,"[s!='']:x"),s.push("!=",F)}),v=v.length&&new RegExp(v.join("|")),s=s.length&&new RegExp(s.join("|")),t=K.test(a.compareDocumentPosition),y=t||K.test(a.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},D=t?function(e,t){if(e===t)return l=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!d.sortDetached&&t.compareDocumentPosition(e)===n?e==C||e.ownerDocument==p&&y(p,e)?-1:t==C||t.ownerDocument==p&&y(p,t)?1:u?P(u,e)-P(u,t):0:4&n?-1:1)}:function(e,t){if(e===t)return l=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,a=[e],s=[t];if(!i||!o)return e==C?-1:t==C?1:i?-1:o?1:u?P(u,e)-P(u,t):0;if(i===o)return pe(e,t);n=e;while(n=n.parentNode)a.unshift(n);n=t;while(n=n.parentNode)s.unshift(n);while(a[r]===s[r])r++;return r?pe(a[r],s[r]):a[r]==p?-1:s[r]==p?1:0}),C},se.matches=function(e,t){return se(e,null,null,t)},se.matchesSelector=function(e,t){if(T(e),d.matchesSelector&&E&&!N[t+" "]&&(!s||!s.test(t))&&(!v||!v.test(t)))try{var n=c.call(e,t);if(n||d.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){N(t,!0)}return 0<se(t,C,null,[e]).length},se.contains=function(e,t){return(e.ownerDocument||e)!=C&&T(e),y(e,t)},se.attr=function(e,t){(e.ownerDocument||e)!=C&&T(e);var n=b.attrHandle[t.toLowerCase()],r=n&&j.call(b.attrHandle,t.toLowerCase())?n(e,t,!E):void 0;return void 0!==r?r:d.attributes||!E?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},se.escape=function(e){return(e+"").replace(re,ie)},se.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},se.uniqueSort=function(e){var t,n=[],r=0,i=0;if(l=!d.detectDuplicates,u=!d.sortStable&&e.slice(0),e.sort(D),l){while(t=e[i++])t===e[i]&&(r=n.push(i));while(r--)e.splice(n[r],1)}return u=null,e},o=se.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else while(t=e[r++])n+=o(t);return n},(b=se.selectors={cacheLength:50,createPseudo:le,match:G,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||"").replace(te,ne),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||se.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&se.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return G.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&X.test(n)&&(t=h(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=m[e+" "];return t||(t=new RegExp("(^|"+M+")"+e+"("+M+"|$)"))&&m(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(n,r,i){return function(e){var t=se.attr(e,n);return null==t?"!="===r:!r||(t+="","="===r?t===i:"!="===r?t!==i:"^="===r?i&&0===t.indexOf(i):"*="===r?i&&-1<t.indexOf(i):"$="===r?i&&t.slice(-i.length)===i:"~="===r?-1<(" "+t.replace(B," ")+" ").indexOf(i):"|="===r&&(t===i||t.slice(0,i.length+1)===i+"-"))}},CHILD:function(h,e,t,g,v){var y="nth"!==h.slice(0,3),m="last"!==h.slice(-4),x="of-type"===e;return 1===g&&0===v?function(e){return!!e.parentNode}:function(e,t,n){var r,i,o,a,s,u,l=y!==m?"nextSibling":"previousSibling",c=e.parentNode,f=x&&e.nodeName.toLowerCase(),p=!n&&!x,d=!1;if(c){if(y){while(l){a=e;while(a=a[l])if(x?a.nodeName.toLowerCase()===f:1===a.nodeType)return!1;u=l="only"===h&&!u&&"nextSibling"}return!0}if(u=[m?c.firstChild:c.lastChild],m&&p){d=(s=(r=(i=(o=(a=c)[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===k&&r[1])&&r[2],a=s&&c.childNodes[s];while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if(1===a.nodeType&&++d&&a===e){i[h]=[k,s,d];break}}else if(p&&(d=s=(r=(i=(o=(a=e)[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===k&&r[1]),!1===d)while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if((x?a.nodeName.toLowerCase()===f:1===a.nodeType)&&++d&&(p&&((i=(o=a[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]=[k,d]),a===e))break;return(d-=v)===g||d%g==0&&0<=d/g}}},PSEUDO:function(e,o){var t,a=b.pseudos[e]||b.setFilters[e.toLowerCase()]||se.error("unsupported pseudo: "+e);return a[S]?a(o):1<a.length?(t=[e,e,"",o],b.setFilters.hasOwnProperty(e.toLowerCase())?le(function(e,t){var n,r=a(e,o),i=r.length;while(i--)e[n=P(e,r[i])]=!(t[n]=r[i])}):function(e){return a(e,0,t)}):a}},pseudos:{not:le(function(e){var r=[],i=[],s=f(e.replace($,"$1"));return s[S]?le(function(e,t,n,r){var i,o=s(e,null,r,[]),a=e.length;while(a--)(i=o[a])&&(e[a]=!(t[a]=i))}):function(e,t,n){return r[0]=e,s(r,null,n,i),r[0]=null,!i.pop()}}),has:le(function(t){return function(e){return 0<se(t,e).length}}),contains:le(function(t){return t=t.replace(te,ne),function(e){return-1<(e.textContent||o(e)).indexOf(t)}}),lang:le(function(n){return V.test(n||"")||se.error("unsupported lang: "+n),n=n.replace(te,ne).toLowerCase(),function(e){var t;do{if(t=E?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=n.location&&n.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===a},focus:function(e){return e===C.activeElement&&(!C.hasFocus||C.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:ge(!1),disabled:ge(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Q.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ve(function(){return[0]}),last:ve(function(e,t){return[t-1]}),eq:ve(function(e,t,n){return[n<0?n+t:n]}),even:ve(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:ve(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:ve(function(e,t,n){for(var r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:ve(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=de(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=he(e);function me(){}function xe(e){for(var t=0,n=e.length,r="";t<n;t++)r+=e[t].value;return r}function be(s,e,t){var u=e.dir,l=e.next,c=l||u,f=t&&"parentNode"===c,p=r++;return e.first?function(e,t,n){while(e=e[u])if(1===e.nodeType||f)return s(e,t,n);return!1}:function(e,t,n){var r,i,o,a=[k,p];if(n){while(e=e[u])if((1===e.nodeType||f)&&s(e,t,n))return!0}else while(e=e[u])if(1===e.nodeType||f)if(i=(o=e[S]||(e[S]={}))[e.uniqueID]||(o[e.uniqueID]={}),l&&l===e.nodeName.toLowerCase())e=e[u]||e;else{if((r=i[c])&&r[0]===k&&r[1]===p)return a[2]=r[2];if((i[c]=a)[2]=s(e,t,n))return!0}return!1}}function we(i){return 1<i.length?function(e,t,n){var r=i.length;while(r--)if(!i[r](e,t,n))return!1;return!0}:i[0]}function Te(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;s<u;s++)(o=e[s])&&(n&&!n(o,r,i)||(a.push(o),l&&t.push(s)));return a}function Ce(d,h,g,v,y,e){return v&&!v[S]&&(v=Ce(v)),y&&!y[S]&&(y=Ce(y,e)),le(function(e,t,n,r){var i,o,a,s=[],u=[],l=t.length,c=e||function(e,t,n){for(var r=0,i=t.length;r<i;r++)se(e,t[r],n);return n}(h||"*",n.nodeType?[n]:n,[]),f=!d||!e&&h?c:Te(c,s,d,n,r),p=g?y||(e?d:l||v)?[]:t:f;if(g&&g(f,p,n,r),v){i=Te(p,u),v(i,[],n,r),o=i.length;while(o--)(a=i[o])&&(p[u[o]]=!(f[u[o]]=a))}if(e){if(y||d){if(y){i=[],o=p.length;while(o--)(a=p[o])&&i.push(f[o]=a);y(null,p=[],i,r)}o=p.length;while(o--)(a=p[o])&&-1<(i=y?P(e,a):s[o])&&(e[i]=!(t[i]=a))}}else p=Te(p===t?p.splice(l,p.length):p),y?y(null,t,p,r):H.apply(t,p)})}function Ee(e){for(var i,t,n,r=e.length,o=b.relative[e[0].type],a=o||b.relative[" "],s=o?1:0,u=be(function(e){return e===i},a,!0),l=be(function(e){return-1<P(i,e)},a,!0),c=[function(e,t,n){var r=!o&&(n||t!==w)||((i=t).nodeType?u(e,t,n):l(e,t,n));return i=null,r}];s<r;s++)if(t=b.relative[e[s].type])c=[be(we(c),t)];else{if((t=b.filter[e[s].type].apply(null,e[s].matches))[S]){for(n=++s;n<r;n++)if(b.relative[e[n].type])break;return Ce(1<s&&we(c),1<s&&xe(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace($,"$1"),t,s<n&&Ee(e.slice(s,n)),n<r&&Ee(e=e.slice(n)),n<r&&xe(e))}c.push(t)}return we(c)}return me.prototype=b.filters=b.pseudos,b.setFilters=new me,h=se.tokenize=function(e,t){var n,r,i,o,a,s,u,l=x[e+" "];if(l)return t?0:l.slice(0);a=e,s=[],u=b.preFilter;while(a){for(o in n&&!(r=_.exec(a))||(r&&(a=a.slice(r[0].length)||a),s.push(i=[])),n=!1,(r=z.exec(a))&&(n=r.shift(),i.push({value:n,type:r[0].replace($," ")}),a=a.slice(n.length)),b.filter)!(r=G[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),i.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?se.error(e):x(e,s).slice(0)},f=se.compile=function(e,t){var n,v,y,m,x,r,i=[],o=[],a=A[e+" "];if(!a){t||(t=h(e)),n=t.length;while(n--)(a=Ee(t[n]))[S]?i.push(a):o.push(a);(a=A(e,(v=o,m=0<(y=i).length,x=0<v.length,r=function(e,t,n,r,i){var o,a,s,u=0,l="0",c=e&&[],f=[],p=w,d=e||x&&b.find.TAG("*",i),h=k+=null==p?1:Math.random()||.1,g=d.length;for(i&&(w=t==C||t||i);l!==g&&null!=(o=d[l]);l++){if(x&&o){a=0,t||o.ownerDocument==C||(T(o),n=!E);while(s=v[a++])if(s(o,t||C,n)){r.push(o);break}i&&(k=h)}m&&((o=!s&&o)&&u--,e&&c.push(o))}if(u+=l,m&&l!==u){a=0;while(s=y[a++])s(c,f,t,n);if(e){if(0<u)while(l--)c[l]||f[l]||(f[l]=q.call(r));f=Te(f)}H.apply(r,f),i&&!e&&0<f.length&&1<u+y.length&&se.uniqueSort(r)}return i&&(k=h,w=p),c},m?le(r):r))).selector=e}return a},g=se.select=function(e,t,n,r){var i,o,a,s,u,l="function"==typeof e&&e,c=!r&&h(e=l.selector||e);if(n=n||[],1===c.length){if(2<(o=c[0]=c[0].slice(0)).length&&"ID"===(a=o[0]).type&&9===t.nodeType&&E&&b.relative[o[1].type]){if(!(t=(b.find.ID(a.matches[0].replace(te,ne),t)||[])[0]))return n;l&&(t=t.parentNode),e=e.slice(o.shift().value.length)}i=G.needsContext.test(e)?0:o.length;while(i--){if(a=o[i],b.relative[s=a.type])break;if((u=b.find[s])&&(r=u(a.matches[0].replace(te,ne),ee.test(o[0].type)&&ye(t.parentNode)||t))){if(o.splice(i,1),!(e=r.length&&xe(o)))return H.apply(n,r),n;break}}}return(l||f(e,c))(r,t,!E,n,!t||ee.test(e)&&ye(t.parentNode)||t),n},d.sortStable=S.split("").sort(D).join("")===S,d.detectDuplicates=!!l,T(),d.sortDetached=ce(function(e){return 1&e.compareDocumentPosition(C.createElement("fieldset"))}),ce(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||fe("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),d.attributes&&ce(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||fe("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ce(function(e){return null==e.getAttribute("disabled")})||fe(R,function(e,t,n){var r;if(!n)return!0===e[t]?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null}),se}(C);S.find=d,S.expr=d.selectors,S.expr[":"]=S.expr.pseudos,S.uniqueSort=S.unique=d.uniqueSort,S.text=d.getText,S.isXMLDoc=d.isXML,S.contains=d.contains,S.escapeSelector=d.escape;var h=function(e,t,n){var r=[],i=void 0!==n;while((e=e[t])&&9!==e.nodeType)if(1===e.nodeType){if(i&&S(e).is(n))break;r.push(e)}return r},T=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},k=S.expr.match.needsContext;function A(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var N=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function D(e,n,r){return m(n)?S.grep(e,function(e,t){return!!n.call(e,t,e)!==r}):n.nodeType?S.grep(e,function(e){return e===n!==r}):"string"!=typeof n?S.grep(e,function(e){return-1<i.call(n,e)!==r}):S.filter(n,e,r)}S.filter=function(e,t,n){var r=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===r.nodeType?S.find.matchesSelector(r,e)?[r]:[]:S.find.matches(e,S.grep(t,function(e){return 1===e.nodeType}))},S.fn.extend({find:function(e){var t,n,r=this.length,i=this;if("string"!=typeof e)return this.pushStack(S(e).filter(function(){for(t=0;t<r;t++)if(S.contains(i[t],this))return!0}));for(n=this.pushStack([]),t=0;t<r;t++)S.find(e,i[t],n);return 1<r?S.uniqueSort(n):n},filter:function(e){return this.pushStack(D(this,e||[],!1))},not:function(e){return this.pushStack(D(this,e||[],!0))},is:function(e){return!!D(this,"string"==typeof e&&k.test(e)?S(e):e||[],!1).length}});var j,q=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(S.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||j,"string"==typeof e){if(!(r="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:q.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof S?t[0]:t,S.merge(this,S.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:E,!0)),N.test(r[1])&&S.isPlainObject(t))for(r in t)m(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(i=E.getElementById(r[2]))&&(this[0]=i,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):m(e)?void 0!==n.ready?n.ready(e):e(S):S.makeArray(e,this)}).prototype=S.fn,j=S(E);var L=/^(?:parents|prev(?:Until|All))/,H={children:!0,contents:!0,next:!0,prev:!0};function O(e,t){while((e=e[t])&&1!==e.nodeType);return e}S.fn.extend({has:function(e){var t=S(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(S.contains(this,t[e]))return!0})},closest:function(e,t){var n,r=0,i=this.length,o=[],a="string"!=typeof e&&S(e);if(!k.test(e))for(;r<i;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?-1<a.index(n):1===n.nodeType&&S.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(1<o.length?S.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?i.call(S(e),this[0]):i.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),S.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return h(e,"parentNode")},parentsUntil:function(e,t,n){return h(e,"parentNode",n)},next:function(e){return O(e,"nextSibling")},prev:function(e){return O(e,"previousSibling")},nextAll:function(e){return h(e,"nextSibling")},prevAll:function(e){return h(e,"previousSibling")},nextUntil:function(e,t,n){return h(e,"nextSibling",n)},prevUntil:function(e,t,n){return h(e,"previousSibling",n)},siblings:function(e){return T((e.parentNode||{}).firstChild,e)},children:function(e){return T(e.firstChild)},contents:function(e){return null!=e.contentDocument&&r(e.contentDocument)?e.contentDocument:(A(e,"template")&&(e=e.content||e),S.merge([],e.childNodes))}},function(r,i){S.fn[r]=function(e,t){var n=S.map(this,i,e);return"Until"!==r.slice(-5)&&(t=e),t&&"string"==typeof t&&(n=S.filter(t,n)),1<this.length&&(H[r]||S.uniqueSort(n),L.test(r)&&n.reverse()),this.pushStack(n)}});var P=/[^\x20\t\r\n\f]+/g;function R(e){return e}function M(e){throw e}function I(e,t,n,r){var i;try{e&&m(i=e.promise)?i.call(e).done(t).fail(n):e&&m(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(r))}catch(e){n.apply(void 0,[e])}}S.Callbacks=function(r){var e,n;r="string"==typeof r?(e=r,n={},S.each(e.match(P)||[],function(e,t){n[t]=!0}),n):S.extend({},r);var i,t,o,a,s=[],u=[],l=-1,c=function(){for(a=a||r.once,o=i=!0;u.length;l=-1){t=u.shift();while(++l<s.length)!1===s[l].apply(t[0],t[1])&&r.stopOnFalse&&(l=s.length,t=!1)}r.memory||(t=!1),i=!1,a&&(s=t?[]:"")},f={add:function(){return s&&(t&&!i&&(l=s.length-1,u.push(t)),function n(e){S.each(e,function(e,t){m(t)?r.unique&&f.has(t)||s.push(t):t&&t.length&&"string"!==w(t)&&n(t)})}(arguments),t&&!i&&c()),this},remove:function(){return S.each(arguments,function(e,t){var n;while(-1<(n=S.inArray(t,s,n)))s.splice(n,1),n<=l&&l--}),this},has:function(e){return e?-1<S.inArray(e,s):0<s.length},empty:function(){return s&&(s=[]),this},disable:function(){return a=u=[],s=t="",this},disabled:function(){return!s},lock:function(){return a=u=[],t||i||(s=t=""),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],u.push(t),i||c()),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!o}};return f},S.extend({Deferred:function(e){var o=[["notify","progress",S.Callbacks("memory"),S.Callbacks("memory"),2],["resolve","done",S.Callbacks("once memory"),S.Callbacks("once memory"),0,"resolved"],["reject","fail",S.Callbacks("once memory"),S.Callbacks("once memory"),1,"rejected"]],i="pending",a={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},"catch":function(e){return a.then(null,e)},pipe:function(){var i=arguments;return S.Deferred(function(r){S.each(o,function(e,t){var n=m(i[t[4]])&&i[t[4]];s[t[1]](function(){var e=n&&n.apply(this,arguments);e&&m(e.promise)?e.promise().progress(r.notify).done(r.resolve).fail(r.reject):r[t[0]+"With"](this,n?[e]:arguments)})}),i=null}).promise()},then:function(t,n,r){var u=0;function l(i,o,a,s){return function(){var n=this,r=arguments,e=function(){var e,t;if(!(i<u)){if((e=a.apply(n,r))===o.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,m(t)?s?t.call(e,l(u,o,R,s),l(u,o,M,s)):(u++,t.call(e,l(u,o,R,s),l(u,o,M,s),l(u,o,R,o.notifyWith))):(a!==R&&(n=void 0,r=[e]),(s||o.resolveWith)(n,r))}},t=s?e:function(){try{e()}catch(e){S.Deferred.exceptionHook&&S.Deferred.exceptionHook(e,t.stackTrace),u<=i+1&&(a!==M&&(n=void 0,r=[e]),o.rejectWith(n,r))}};i?t():(S.Deferred.getStackHook&&(t.stackTrace=S.Deferred.getStackHook()),C.setTimeout(t))}}return S.Deferred(function(e){o[0][3].add(l(0,e,m(r)?r:R,e.notifyWith)),o[1][3].add(l(0,e,m(t)?t:R)),o[2][3].add(l(0,e,m(n)?n:M))}).promise()},promise:function(e){return null!=e?S.extend(e,a):a}},s={};return S.each(o,function(e,t){var n=t[2],r=t[5];a[t[1]]=n.add,r&&n.add(function(){i=r},o[3-e][2].disable,o[3-e][3].disable,o[0][2].lock,o[0][3].lock),n.add(t[3].fire),s[t[0]]=function(){return s[t[0]+"With"](this===s?void 0:this,arguments),this},s[t[0]+"With"]=n.fireWith}),a.promise(s),e&&e.call(s,s),s},when:function(e){var n=arguments.length,t=n,r=Array(t),i=s.call(arguments),o=S.Deferred(),a=function(t){return function(e){r[t]=this,i[t]=1<arguments.length?s.call(arguments):e,--n||o.resolveWith(r,i)}};if(n<=1&&(I(e,o.done(a(t)).resolve,o.reject,!n),"pending"===o.state()||m(i[t]&&i[t].then)))return o.then();while(t--)I(i[t],a(t),o.reject);return o.promise()}});var W=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;S.Deferred.exceptionHook=function(e,t){C.console&&C.console.warn&&e&&W.test(e.name)&&C.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},S.readyException=function(e){C.setTimeout(function(){throw e})};var F=S.Deferred();function B(){E.removeEventListener("DOMContentLoaded",B),C.removeEventListener("load",B),S.ready()}S.fn.ready=function(e){return F.then(e)["catch"](function(e){S.readyException(e)}),this},S.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--S.readyWait:S.isReady)||(S.isReady=!0)!==e&&0<--S.readyWait||F.resolveWith(E,[S])}}),S.ready.then=F.then,"complete"===E.readyState||"loading"!==E.readyState&&!E.documentElement.doScroll?C.setTimeout(S.ready):(E.addEventListener("DOMContentLoaded",B),C.addEventListener("load",B));var $=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if("object"===w(n))for(s in i=!0,n)$(e,t,s,n[s],!0,o,a);else if(void 0!==r&&(i=!0,m(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(S(e),n)})),t))for(;s<u;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},_=/^-ms-/,z=/-([a-z])/g;function U(e,t){return t.toUpperCase()}function X(e){return e.replace(_,"ms-").replace(z,U)}var V=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function G(){this.expando=S.expando+G.uid++}G.uid=1,G.prototype={cache:function(e){var t=e[this.expando];return t||(t={},V(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if("string"==typeof t)i[X(t)]=n;else for(r in t)i[X(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][X(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(X):(t=X(t))in r?[t]:t.match(P)||[]).length;while(n--)delete r[t[n]]}(void 0===t||S.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!S.isEmptyObject(t)}};var Y=new G,Q=new G,J=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,K=/[A-Z]/g;function Z(e,t,n){var r,i;if(void 0===n&&1===e.nodeType)if(r="data-"+t.replace(K,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(r))){try{n="true"===(i=n)||"false"!==i&&("null"===i?null:i===+i+""?+i:J.test(i)?JSON.parse(i):i)}catch(e){}Q.set(e,t,n)}else n=void 0;return n}S.extend({hasData:function(e){return Q.hasData(e)||Y.hasData(e)},data:function(e,t,n){return Q.access(e,t,n)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,n){return Y.access(e,t,n)},_removeData:function(e,t){Y.remove(e,t)}}),S.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=Q.get(o),1===o.nodeType&&!Y.get(o,"hasDataAttrs"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf("data-")&&(r=X(r.slice(5)),Z(o,r,i[r]));Y.set(o,"hasDataAttrs",!0)}return i}return"object"==typeof n?this.each(function(){Q.set(this,n)}):$(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.get(o,n))?t:void 0!==(t=Z(o,n))?t:void 0;this.each(function(){Q.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),S.extend({queue:function(e,t,n){var r;if(e)return t=(t||"fx")+"queue",r=Y.get(e,t),n&&(!r||Array.isArray(n)?r=Y.access(e,t,S.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||"fx";var n=S.queue(e,t),r=n.length,i=n.shift(),o=S._queueHooks(e,t);"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,function(){S.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return Y.get(e,n)||Y.access(e,n,{empty:S.Callbacks("once memory").add(function(){Y.remove(e,[t+"queue",n])})})}}),S.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?S.queue(this[0],t):void 0===n?this:this.each(function(){var e=S.queue(this,t,n);S._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&S.dequeue(this,t)})},dequeue:function(e){return this.each(function(){S.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,r=1,i=S.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};"string"!=typeof e&&(t=e,e=void 0),e=e||"fx";while(a--)(n=Y.get(o[a],e+"queueHooks"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var ee=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,te=new RegExp("^(?:([+-])=|)("+ee+")([a-z%]*)$","i"),ne=["Top","Right","Bottom","Left"],re=E.documentElement,ie=function(e){return S.contains(e.ownerDocument,e)},oe={composed:!0};re.getRootNode&&(ie=function(e){return S.contains(e.ownerDocument,e)||e.getRootNode(oe)===e.ownerDocument});var ae=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&ie(e)&&"none"===S.css(e,"display")};function se(e,t,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return S.css(e,t,"")},u=s(),l=n&&n[3]||(S.cssNumber[t]?"":"px"),c=e.nodeType&&(S.cssNumber[t]||"px"!==l&&+u)&&te.exec(S.css(e,t));if(c&&c[3]!==l){u/=2,l=l||c[3],c=+u||1;while(a--)S.style(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,S.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ue={};function le(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?("none"===n&&(l[c]=Y.get(r,"display")||null,l[c]||(r.style.display="")),""===r.style.display&&ae(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ue[s])||(o=a.body.appendChild(a.createElement(s)),u=S.css(o,"display"),o.parentNode.removeChild(o),"none"===u&&(u="block"),ue[s]=u)))):"none"!==n&&(l[c]="none",Y.set(r,"display",n)));for(c=0;c<f;c++)null!=l[c]&&(e[c].style.display=l[c]);return e}S.fn.extend({show:function(){return le(this,!0)},hide:function(){return le(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){ae(this)?S(this).show():S(this).hide()})}});var ce,fe,pe=/^(?:checkbox|radio)$/i,de=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,he=/^$|^module$|\/(?:java|ecma)script/i;ce=E.createDocumentFragment().appendChild(E.createElement("div")),(fe=E.createElement("input")).setAttribute("type","radio"),fe.setAttribute("checked","checked"),fe.setAttribute("name","t"),ce.appendChild(fe),y.checkClone=ce.cloneNode(!0).cloneNode(!0).lastChild.checked,ce.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!ce.cloneNode(!0).lastChild.defaultValue,ce.innerHTML="<option></option>",y.option=!!ce.lastChild;var ge={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ve(e,t){var n;return n="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&A(e,t)?S.merge([e],n):n}function ye(e,t){for(var n=0,r=e.length;n<r;n++)Y.set(e[n],"globalEval",!t||Y.get(t[n],"globalEval"))}ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td,y.option||(ge.optgroup=ge.option=[1,"<select multiple='multiple'>","</select>"]);var me=/<|&#?\w+;/;function xe(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o)if("object"===w(o))S.merge(p,o.nodeType?[o]:o);else if(me.test(o)){a=a||f.appendChild(t.createElement("div")),s=(de.exec(o)||["",""])[1].toLowerCase(),u=ge[s]||ge._default,a.innerHTML=u[1]+S.htmlPrefilter(o)+u[2],c=u[0];while(c--)a=a.lastChild;S.merge(p,a.childNodes),(a=f.firstChild).textContent=""}else p.push(t.createTextNode(o));f.textContent="",d=0;while(o=p[d++])if(r&&-1<S.inArray(o,r))i&&i.push(o);else if(l=ie(o),a=ve(f.appendChild(o),"script"),l&&ye(a),n){c=0;while(o=a[c++])he.test(o.type||"")&&n.push(o)}return f}var be=/^key/,we=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Te=/^([^.]*)(?:\.(.+)|)/;function Ce(){return!0}function Ee(){return!1}function Se(e,t){return e===function(){try{return E.activeElement}catch(e){}}()==("focus"===t)}function ke(e,t,n,r,i,o){var a,s;if("object"==typeof t){for(s in"string"!=typeof n&&(r=r||n,n=void 0),t)ke(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&("string"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=Ee;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return S().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=S.guid++)),e.each(function(){S.event.add(this,t,i,r,n)})}function Ae(e,i,o){o?(Y.set(e,i,!1),S.event.add(e,i,{namespace:!1,handler:function(e){var t,n,r=Y.get(this,i);if(1&e.isTrigger&&this[i]){if(r.length)(S.event.special[i]||{}).delegateType&&e.stopPropagation();else if(r=s.call(arguments),Y.set(this,i,r),t=o(this,i),this[i](),r!==(n=Y.get(this,i))||t?Y.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n.value}else r.length&&(Y.set(this,i,{value:S.event.trigger(S.extend(r[0],S.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,i)&&S.event.add(e,i,Ce)}S.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.get(t);if(V(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&S.find.matchesSelector(re,i),n.guid||(n.guid=S.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){return"undefined"!=typeof S&&S.event.triggered!==e.type?S.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||"").match(P)||[""]).length;while(l--)d=g=(s=Te.exec(e[l])||[])[1],h=(s[2]||"").split(".").sort(),d&&(f=S.event.special[d]||{},d=(i?f.delegateType:f.bindType)||d,f=S.event.special[d]||{},c=S.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&S.expr.match.needsContext.test(i),namespace:h.join(".")},o),(p=u[d])||((p=u[d]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),S.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.hasData(e)&&Y.get(e);if(v&&(u=v.events)){l=(t=(t||"").match(P)||[""]).length;while(l--)if(d=g=(s=Te.exec(t[l])||[])[1],h=(s[2]||"").split(".").sort(),d){f=S.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=p.length;while(o--)c=p[o],!i&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&("**"!==r||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,f.remove&&f.remove.call(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||S.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)S.event.remove(e,d+t[l],n,r,!0);S.isEmptyObject(u)&&Y.remove(e,"handle events")}},dispatch:function(e){var t,n,r,i,o,a,s=new Array(arguments.length),u=S.event.fix(e),l=(Y.get(this,"events")||Object.create(null))[u.type]||[],c=S.event.special[u.type]||{};for(s[0]=u,t=1;t<arguments.length;t++)s[t]=arguments[t];if(u.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,u)){a=S.event.handlers.call(this,u,l),t=0;while((i=a[t++])&&!u.isPropagationStopped()){u.currentTarget=i.elem,n=0;while((o=i.handlers[n++])&&!u.isImmediatePropagationStopped())u.rnamespace&&!1!==o.namespace&&!u.rnamespace.test(o.namespace)||(u.handleObj=o,u.data=o.data,void 0!==(r=((S.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s))&&!1===(u.result=r)&&(u.preventDefault(),u.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,u),u.result}},handlers:function(e,t){var n,r,i,o,a,s=[],u=t.delegateCount,l=e.target;if(u&&l.nodeType&&!("click"===e.type&&1<=e.button))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&("click"!==e.type||!0!==l.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=t[n]).selector+" "]&&(a[i]=r.needsContext?-1<S(i,this).index(l):S.find(i,this,null,[l]).length),a[i]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return l=this,u<t.length&&s.push({elem:l,handlers:t.slice(u)}),s},addProp:function(t,e){Object.defineProperty(S.Event.prototype,t,{enumerable:!0,configurable:!0,get:m(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[S.expando]?e:new S.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,"input")&&Ae(t,"click",Ce),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,"input")&&Ae(t,"click"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&A(t,"input")&&Y.get(t,"click")||A(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},S.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},S.Event=function(e,t){if(!(this instanceof S.Event))return new S.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Ce:Ee,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&S.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[S.expando]=!0},S.Event.prototype={constructor:S.Event,isDefaultPrevented:Ee,isPropagationStopped:Ee,isImmediatePropagationStopped:Ee,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Ce,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Ce,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Ce,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},S.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&be.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&we.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},S.event.addProp),S.each({focus:"focusin",blur:"focusout"},function(e,t){S.event.special[e]={setup:function(){return Ae(this,e,Se),!1},trigger:function(){return Ae(this,e),!0},delegateType:t}}),S.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,i){S.event.special[e]={delegateType:i,bindType:i,handle:function(e){var t,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||S.contains(this,n))||(e.type=r.origType,t=r.handler.apply(this,arguments),e.type=i),t}}}),S.fn.extend({on:function(e,t,n,r){return ke(this,e,t,n,r)},one:function(e,t,n,r){return ke(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,S(e.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=Ee),this.each(function(){S.event.remove(this,e,n,t)})}});var Ne=/<script|<style|<link/i,De=/checked\s*(?:[^=]|=\s*.checked.)/i,je=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function qe(e,t){return A(e,"table")&&A(11!==t.nodeType?t:t.firstChild,"tr")&&S(e).children("tbody")[0]||e}function Le(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function He(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Oe(e,t){var n,r,i,o,a,s;if(1===t.nodeType){if(Y.hasData(e)&&(s=Y.get(e).events))for(i in Y.remove(t,"handle events"),s)for(n=0,r=s[i].length;n<r;n++)S.event.add(t,i,s[i][n]);Q.hasData(e)&&(o=Q.access(e),a=S.extend({},o),Q.set(t,a))}}function Pe(n,r,i,o){r=g(r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=m(d);if(h||1<f&&"string"==typeof d&&!y.checkClone&&De.test(d))return n.each(function(e){var t=n.eq(e);h&&(r[0]=d.call(this,e,t.html())),Pe(t,r,i,o)});if(f&&(t=(e=xe(r,n[0].ownerDocument,!1,n,o)).firstChild,1===e.childNodes.length&&(e=t),t||o)){for(s=(a=S.map(ve(e,"script"),Le)).length;c<f;c++)u=e,c!==p&&(u=S.clone(u,!0,!0),s&&S.merge(a,ve(u,"script"))),i.call(n[c],u,c);if(s)for(l=a[a.length-1].ownerDocument,S.map(a,He),c=0;c<s;c++)u=a[c],he.test(u.type||"")&&!Y.access(u,"globalEval")&&S.contains(l,u)&&(u.src&&"module"!==(u.type||"").toLowerCase()?S._evalUrl&&!u.noModule&&S._evalUrl(u.src,{nonce:u.nonce||u.getAttribute("nonce")},l):b(u.textContent.replace(je,""),u,l))}return n}function Re(e,t,n){for(var r,i=t?S.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||S.cleanData(ve(r)),r.parentNode&&(n&&ie(r)&&ye(ve(r,"script")),r.parentNode.removeChild(r));return e}S.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var r,i,o,a,s,u,l,c=e.cloneNode(!0),f=ie(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||S.isXMLDoc(e)))for(a=ve(c),r=0,i=(o=ve(e)).length;r<i;r++)s=o[r],u=a[r],void 0,"input"===(l=u.nodeName.toLowerCase())&&pe.test(s.type)?u.checked=s.checked:"input"!==l&&"textarea"!==l||(u.defaultValue=s.defaultValue);if(t)if(n)for(o=o||ve(e),a=a||ve(c),r=0,i=o.length;r<i;r++)Oe(o[r],a[r]);else Oe(e,c);return 0<(a=ve(c,"script")).length&&ye(a,!f&&ve(e,"script")),c},cleanData:function(e){for(var t,n,r,i=S.event.special,o=0;void 0!==(n=e[o]);o++)if(V(n)){if(t=n[Y.expando]){if(t.events)for(r in t.events)i[r]?S.event.remove(n,r):S.removeEvent(n,r,t.handle);n[Y.expando]=void 0}n[Q.expando]&&(n[Q.expando]=void 0)}}}),S.fn.extend({detach:function(e){return Re(this,e,!0)},remove:function(e){return Re(this,e)},text:function(e){return $(this,function(e){return void 0===e?S.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Pe(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||qe(this,e).appendChild(e)})},prepend:function(){return Pe(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=qe(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return Pe(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Pe(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(S.cleanData(ve(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return S.clone(this,e,t)})},html:function(e){return $(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Ne.test(e)&&!ge[(de.exec(e)||["",""])[1].toLowerCase()]){e=S.htmlPrefilter(e);try{for(;n<r;n++)1===(t=this[n]||{}).nodeType&&(S.cleanData(ve(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return Pe(this,arguments,function(e){var t=this.parentNode;S.inArray(this,n)<0&&(S.cleanData(ve(this)),t&&t.replaceChild(e,this))},n)}}),S.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,a){S.fn[e]=function(e){for(var t,n=[],r=S(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),S(r[o])[a](t),u.apply(n,t.get());return this.pushStack(n)}});var Me=new RegExp("^("+ee+")(?!px)[a-z%]+$","i"),Ie=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=C),t.getComputedStyle(e)},We=function(e,t,n){var r,i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in r=n.call(e),t)e.style[i]=o[i];return r},Fe=new RegExp(ne.join("|"),"i");function Be(e,t,n){var r,i,o,a,s=e.style;return(n=n||Ie(e))&&(""!==(a=n.getPropertyValue(t)||n[t])||ie(e)||(a=S.style(e,t)),!y.pixelBoxStyles()&&Me.test(a)&&Fe.test(t)&&(r=s.width,i=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=r,s.minWidth=i,s.maxWidth=o)),void 0!==a?a+"":a}function $e(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(l){u.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",l.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",re.appendChild(u).appendChild(l);var e=C.getComputedStyle(l);n="1%"!==e.top,s=12===t(e.marginLeft),l.style.right="60%",o=36===t(e.right),r=36===t(e.width),l.style.position="absolute",i=12===t(l.offsetWidth/3),re.removeChild(u),l=null}}function t(e){return Math.round(parseFloat(e))}var n,r,i,o,a,s,u=E.createElement("div"),l=E.createElement("div");l.style&&(l.style.backgroundClip="content-box",l.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===l.style.backgroundClip,S.extend(y,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),o},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),s},scrollboxSize:function(){return e(),i},reliableTrDimensions:function(){var e,t,n,r;return null==a&&(e=E.createElement("table"),t=E.createElement("tr"),n=E.createElement("div"),e.style.cssText="position:absolute;left:-11111px",t.style.height="1px",n.style.height="9px",re.appendChild(e).appendChild(t).appendChild(n),r=C.getComputedStyle(t),a=3<parseInt(r.height),re.removeChild(e)),a}}))}();var _e=["Webkit","Moz","ms"],ze=E.createElement("div").style,Ue={};function Xe(e){var t=S.cssProps[e]||Ue[e];return t||(e in ze?e:Ue[e]=function(e){var t=e[0].toUpperCase()+e.slice(1),n=_e.length;while(n--)if((e=_e[n]+t)in ze)return e}(e)||e)}var Ve=/^(none|table(?!-c[ea]).+)/,Ge=/^--/,Ye={position:"absolute",visibility:"hidden",display:"block"},Qe={letterSpacing:"0",fontWeight:"400"};function Je(e,t,n){var r=te.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||"px"):t}function Ke(e,t,n,r,i,o){var a="width"===t?1:0,s=0,u=0;if(n===(r?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(u+=S.css(e,n+ne[a],!0,i)),r?("content"===n&&(u-=S.css(e,"padding"+ne[a],!0,i)),"margin"!==n&&(u-=S.css(e,"border"+ne[a]+"Width",!0,i))):(u+=S.css(e,"padding"+ne[a],!0,i),"padding"!==n?u+=S.css(e,"border"+ne[a]+"Width",!0,i):s+=S.css(e,"border"+ne[a]+"Width",!0,i));return!r&&0<=o&&(u+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-o-u-s-.5))||0),u}function Ze(e,t,n){var r=Ie(e),i=(!y.boxSizingReliable()||n)&&"border-box"===S.css(e,"boxSizing",!1,r),o=i,a=Be(e,t,r),s="offset"+t[0].toUpperCase()+t.slice(1);if(Me.test(a)){if(!n)return a;a="auto"}return(!y.boxSizingReliable()&&i||!y.reliableTrDimensions()&&A(e,"tr")||"auto"===a||!parseFloat(a)&&"inline"===S.css(e,"display",!1,r))&&e.getClientRects().length&&(i="border-box"===S.css(e,"boxSizing",!1,r),(o=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+Ke(e,t,n||(i?"border":"content"),o,r,a)+"px"}function et(e,t,n,r,i){return new et.prototype.init(e,t,n,r,i)}S.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Be(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=X(t),u=Ge.test(t),l=e.style;if(u||(t=Xe(s)),a=S.cssHooks[t]||S.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];"string"===(o=typeof n)&&(i=te.exec(n))&&i[1]&&(n=se(e,t,i),o="number"),null!=n&&n==n&&("number"!==o||u||(n+=i&&i[3]||(S.cssNumber[s]?"":"px")),y.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),a&&"set"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=X(t);return Ge.test(t)||(t=Xe(s)),(a=S.cssHooks[t]||S.cssHooks[s])&&"get"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=Be(e,t,r)),"normal"===i&&t in Qe&&(i=Qe[t]),""===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),S.each(["height","width"],function(e,u){S.cssHooks[u]={get:function(e,t,n){if(t)return!Ve.test(S.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?Ze(e,u,n):We(e,Ye,function(){return Ze(e,u,n)})},set:function(e,t,n){var r,i=Ie(e),o=!y.scrollboxSize()&&"absolute"===i.position,a=(o||n)&&"border-box"===S.css(e,"boxSizing",!1,i),s=n?Ke(e,u,n,a,i):0;return a&&o&&(s-=Math.ceil(e["offset"+u[0].toUpperCase()+u.slice(1)]-parseFloat(i[u])-Ke(e,u,"border",!1,i)-.5)),s&&(r=te.exec(t))&&"px"!==(r[3]||"px")&&(e.style[u]=t,t=S.css(e,u)),Je(0,t,s)}}}),S.cssHooks.marginLeft=$e(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Be(e,"marginLeft"))||e.getBoundingClientRect().left-We(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),S.each({margin:"",padding:"",border:"Width"},function(i,o){S.cssHooks[i+o]={expand:function(e){for(var t=0,n={},r="string"==typeof e?e.split(" "):[e];t<4;t++)n[i+ne[t]+o]=r[t]||r[t-2]||r[0];return n}},"margin"!==i&&(S.cssHooks[i+o].set=Je)}),S.fn.extend({css:function(e,t){return $(this,function(e,t,n){var r,i,o={},a=0;if(Array.isArray(t)){for(r=Ie(e),i=t.length;a<i;a++)o[t[a]]=S.css(e,t[a],!1,r);return o}return void 0!==n?S.style(e,t,n):S.css(e,t)},e,t,1<arguments.length)}}),((S.Tween=et).prototype={constructor:et,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(S.cssNumber[n]?"":"px")},cur:function(){var e=et.propHooks[this.prop];return e&&e.get?e.get(this):et.propHooks._default.get(this)},run:function(e){var t,n=et.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):et.propHooks._default.set(this),this}}).init.prototype=et.prototype,(et.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=S.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){S.fx.step[e.prop]?S.fx.step[e.prop](e):1!==e.elem.nodeType||!S.cssHooks[e.prop]&&null==e.elem.style[Xe(e.prop)]?e.elem[e.prop]=e.now:S.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=et.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},S.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},S.fx=et.prototype.init,S.fx.step={};var tt,nt,rt,it,ot=/^(?:toggle|show|hide)$/,at=/queueHooks$/;function st(){nt&&(!1===E.hidden&&C.requestAnimationFrame?C.requestAnimationFrame(st):C.setTimeout(st,S.fx.interval),S.fx.tick())}function ut(){return C.setTimeout(function(){tt=void 0}),tt=Date.now()}function lt(e,t){var n,r=0,i={height:e};for(t=t?1:0;r<4;r+=2-t)i["margin"+(n=ne[r])]=i["padding"+n]=e;return t&&(i.opacity=i.width=e),i}function ct(e,t,n){for(var r,i=(ft.tweeners[t]||[]).concat(ft.tweeners["*"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,t,e))return r}function ft(o,e,t){var n,a,r=0,i=ft.prefilters.length,s=S.Deferred().always(function(){delete u.elem}),u=function(){if(a)return!1;for(var e=tt||ut(),t=Math.max(0,l.startTime+l.duration-e),n=1-(t/l.duration||0),r=0,i=l.tweens.length;r<i;r++)l.tweens[r].run(n);return s.notifyWith(o,[l,n,t]),n<1&&i?t:(i||s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l]),!1)},l=s.promise({elem:o,props:S.extend({},e),opts:S.extend(!0,{specialEasing:{},easing:S.easing._default},t),originalProperties:e,originalOptions:t,startTime:tt||ut(),duration:t.duration,tweens:[],createTween:function(e,t){var n=S.Tween(o,l.opts,e,t,l.opts.specialEasing[e]||l.opts.easing);return l.tweens.push(n),n},stop:function(e){var t=0,n=e?l.tweens.length:0;if(a)return this;for(a=!0;t<n;t++)l.tweens[t].run(1);return e?(s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l,e])):s.rejectWith(o,[l,e]),this}}),c=l.props;for(!function(e,t){var n,r,i,o,a;for(n in e)if(i=t[r=X(n)],o=e[n],Array.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),(a=S.cssHooks[r])&&"expand"in a)for(n in o=a.expand(o),delete e[r],o)n in e||(e[n]=o[n],t[n]=i);else t[r]=i}(c,l.opts.specialEasing);r<i;r++)if(n=ft.prefilters[r].call(l,o,c,l.opts))return m(n.stop)&&(S._queueHooks(l.elem,l.opts.queue).stop=n.stop.bind(n)),n;return S.map(c,ct,l),m(l.opts.start)&&l.opts.start.call(o,l),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always),S.fx.timer(S.extend(u,{elem:o,anim:l,queue:l.opts.queue})),l}S.Animation=S.extend(ft,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return se(n.elem,e,te.exec(t),n),n}]},tweener:function(e,t){m(e)?(t=e,e=["*"]):e=e.match(P);for(var n,r=0,i=e.length;r<i;r++)n=e[r],ft.tweeners[n]=ft.tweeners[n]||[],ft.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f="width"in t||"height"in t,p=this,d={},h=e.style,g=e.nodeType&&ae(e),v=Y.get(e,"fxshow");for(r in n.queue||(null==(a=S._queueHooks(e,"fx")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,S.queue(e,"fx").length||a.empty.fire()})})),t)if(i=t[r],ot.test(i)){if(delete t[r],o=o||"toggle"===i,i===(g?"hide":"show")){if("show"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||S.style(e,r)}if((u=!S.isEmptyObject(t))||!S.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=Y.get(e,"display")),"none"===(c=S.css(e,"display"))&&(l?c=l:(le([e],!0),l=e.style.display||l,c=S.css(e,"display"),le([e]))),("inline"===c||"inline-block"===c&&null!=l)&&"none"===S.css(e,"float")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l="none"===c?"":c)),h.display="inline-block")),n.overflow&&(h.overflow="hidden",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),u=!1,d)u||(v?"hidden"in v&&(g=v.hidden):v=Y.access(e,"fxshow",{display:l}),o&&(v.hidden=!g),g&&le([e],!0),p.done(function(){for(r in g||le([e]),Y.remove(e,"fxshow"),d)S.style(e,r,d[r])})),u=ct(g?v[r]:0,r,p),r in v||(v[r]=u.start,g&&(u.end=u.start,u.start=0))}],prefilter:function(e,t){t?ft.prefilters.unshift(e):ft.prefilters.push(e)}}),S.speed=function(e,t,n){var r=e&&"object"==typeof e?S.extend({},e):{complete:n||!n&&t||m(e)&&e,duration:e,easing:n&&t||t&&!m(t)&&t};return S.fx.off?r.duration=0:"number"!=typeof r.duration&&(r.duration in S.fx.speeds?r.duration=S.fx.speeds[r.duration]:r.duration=S.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue="fx"),r.old=r.complete,r.complete=function(){m(r.old)&&r.old.call(this),r.queue&&S.dequeue(this,r.queue)},r},S.fn.extend({fadeTo:function(e,t,n,r){return this.filter(ae).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=S.isEmptyObject(t),o=S.speed(e,n,r),a=function(){var e=ft(this,S.extend({},t),o);(i||Y.get(this,"finish"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return"string"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||"fx",[]),this.each(function(){var e=!0,t=null!=i&&i+"queueHooks",n=S.timers,r=Y.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&at.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||S.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||"fx"),this.each(function(){var e,t=Y.get(this),n=t[a+"queue"],r=t[a+"queueHooks"],i=S.timers,o=n?n.length:0;for(t.finish=!0,S.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),S.each(["toggle","show","hide"],function(e,r){var i=S.fn[r];S.fn[r]=function(e,t,n){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(lt(r,!0),e,t,n)}}),S.each({slideDown:lt("show"),slideUp:lt("hide"),slideToggle:lt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,r){S.fn[e]=function(e,t,n){return this.animate(r,e,t,n)}}),S.timers=[],S.fx.tick=function(){var e,t=0,n=S.timers;for(tt=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||S.fx.stop(),tt=void 0},S.fx.timer=function(e){S.timers.push(e),S.fx.start()},S.fx.interval=13,S.fx.start=function(){nt||(nt=!0,st())},S.fx.stop=function(){nt=null},S.fx.speeds={slow:600,fast:200,_default:400},S.fn.delay=function(r,e){return r=S.fx&&S.fx.speeds[r]||r,e=e||"fx",this.queue(e,function(e,t){var n=C.setTimeout(e,r);t.stop=function(){C.clearTimeout(n)}})},rt=E.createElement("input"),it=E.createElement("select").appendChild(E.createElement("option")),rt.type="checkbox",y.checkOn=""!==rt.value,y.optSelected=it.selected,(rt=E.createElement("input")).value="t",rt.type="radio",y.radioValue="t"===rt.value;var pt,dt=S.expr.attrHandle;S.fn.extend({attr:function(e,t){return $(this,S.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){S.removeAttr(this,e)})}}),S.extend({attr:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof e.getAttribute?S.prop(e,t,n):(1===o&&S.isXMLDoc(e)||(i=S.attrHooks[t.toLowerCase()]||(S.expr.match.bool.test(t)?pt:void 0)),void 0!==n?null===n?void S.removeAttr(e,t):i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+""),n):i&&"get"in i&&null!==(r=i.get(e,t))?r:null==(r=S.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&A(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(P);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)}}),pt={set:function(e,t,n){return!1===t?S.removeAttr(e,n):e.setAttribute(n,n),n}},S.each(S.expr.match.bool.source.match(/\w+/g),function(e,t){var a=dt[t]||S.find.attr;dt[t]=function(e,t,n){var r,i,o=t.toLowerCase();return n||(i=dt[o],dt[o]=r,r=null!=a(e,t,n)?o:null,dt[o]=i),r}});var ht=/^(?:input|select|textarea|button)$/i,gt=/^(?:a|area)$/i;function vt(e){return(e.match(P)||[]).join(" ")}function yt(e){return e.getAttribute&&e.getAttribute("class")||""}function mt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(P)||[]}S.fn.extend({prop:function(e,t){return $(this,S.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[S.propFix[e]||e]})}}),S.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&S.isXMLDoc(e)||(t=S.propFix[t]||t,i=S.propHooks[t]),void 0!==n?i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&"get"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=S.find.attr(e,"tabindex");return t?parseInt(t,10):ht.test(e.nodeName)||gt.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),y.optSelected||(S.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),S.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){S.propFix[this.toLowerCase()]=this}),S.fn.extend({addClass:function(t){var e,n,r,i,o,a,s,u=0;if(m(t))return this.each(function(e){S(this).addClass(t.call(this,e,yt(this)))});if((e=mt(t)).length)while(n=this[u++])if(i=yt(n),r=1===n.nodeType&&" "+vt(i)+" "){a=0;while(o=e[a++])r.indexOf(" "+o+" ")<0&&(r+=o+" ");i!==(s=vt(r))&&n.setAttribute("class",s)}return this},removeClass:function(t){var e,n,r,i,o,a,s,u=0;if(m(t))return this.each(function(e){S(this).removeClass(t.call(this,e,yt(this)))});if(!arguments.length)return this.attr("class","");if((e=mt(t)).length)while(n=this[u++])if(i=yt(n),r=1===n.nodeType&&" "+vt(i)+" "){a=0;while(o=e[a++])while(-1<r.indexOf(" "+o+" "))r=r.replace(" "+o+" "," ");i!==(s=vt(r))&&n.setAttribute("class",s)}return this},toggleClass:function(i,t){var o=typeof i,a="string"===o||Array.isArray(i);return"boolean"==typeof t&&a?t?this.addClass(i):this.removeClass(i):m(i)?this.each(function(e){S(this).toggleClass(i.call(this,e,yt(this),t),t)}):this.each(function(){var e,t,n,r;if(a){t=0,n=S(this),r=mt(i);while(e=r[t++])n.hasClass(e)?n.removeClass(e):n.addClass(e)}else void 0!==i&&"boolean"!==o||((e=yt(this))&&Y.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===i?"":Y.get(this,"__className__")||""))})},hasClass:function(e){var t,n,r=0;t=" "+e+" ";while(n=this[r++])if(1===n.nodeType&&-1<(" "+vt(yt(n))+" ").indexOf(t))return!0;return!1}});var xt=/\r/g;S.fn.extend({val:function(n){var r,e,i,t=this[0];return arguments.length?(i=m(n),this.each(function(e){var t;1===this.nodeType&&(null==(t=i?n.call(this,e,S(this).val()):n)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=S.map(t,function(e){return null==e?"":e+""})),(r=S.valHooks[this.type]||S.valHooks[this.nodeName.toLowerCase()])&&"set"in r&&void 0!==r.set(this,t,"value")||(this.value=t))})):t?(r=S.valHooks[t.type]||S.valHooks[t.nodeName.toLowerCase()])&&"get"in r&&void 0!==(e=r.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(xt,""):null==e?"":e:void 0}}),S.extend({valHooks:{option:{get:function(e){var t=S.find.attr(e,"value");return null!=t?t:vt(S.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a="select-one"===e.type,s=a?null:[],u=a?o+1:i.length;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!A(n.parentNode,"optgroup"))){if(t=S(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=S.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=-1<S.inArray(S.valHooks.option.get(r),o))&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),S.each(["radio","checkbox"],function(){S.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<S.inArray(S(e).val(),t)}},y.checkOn||(S.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in C;var bt=/^(?:focusinfocus|focusoutblur)$/,wt=function(e){e.stopPropagation()};S.extend(S.event,{trigger:function(e,t,n,r){var i,o,a,s,u,l,c,f,p=[n||E],d=v.call(e,"type")?e.type:e,h=v.call(e,"namespace")?e.namespace.split("."):[];if(o=f=a=n=n||E,3!==n.nodeType&&8!==n.nodeType&&!bt.test(d+S.event.triggered)&&(-1<d.indexOf(".")&&(d=(h=d.split(".")).shift(),h.sort()),u=d.indexOf(":")<0&&"on"+d,(e=e[S.expando]?e:new S.Event(d,"object"==typeof e&&e)).isTrigger=r?2:3,e.namespace=h.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:S.makeArray(t,[e]),c=S.event.special[d]||{},r||!c.trigger||!1!==c.trigger.apply(n,t))){if(!r&&!c.noBubble&&!x(n)){for(s=c.delegateType||d,bt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||E)&&p.push(a.defaultView||a.parentWindow||C)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(Y.get(o,"events")||Object.create(null))[e.type]&&Y.get(o,"handle"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&V(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!V(n)||u&&m(n[d])&&!x(n)&&((a=n[u])&&(n[u]=null),S.event.triggered=d,e.isPropagationStopped()&&f.addEventListener(d,wt),n[d](),e.isPropagationStopped()&&f.removeEventListener(d,wt),S.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(e,t,n){var r=S.extend(new S.Event,n,{type:e,isSimulated:!0});S.event.trigger(r,null,t)}}),S.fn.extend({trigger:function(e,t){return this.each(function(){S.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return S.event.trigger(e,t,n,!0)}}),y.focusin||S.each({focus:"focusin",blur:"focusout"},function(n,r){var i=function(e){S.event.simulate(r,e.target,S.event.fix(e))};S.event.special[r]={setup:function(){var e=this.ownerDocument||this.document||this,t=Y.access(e,r);t||e.addEventListener(n,i,!0),Y.access(e,r,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=Y.access(e,r)-1;t?Y.access(e,r,t):(e.removeEventListener(n,i,!0),Y.remove(e,r))}}});var Tt=C.location,Ct={guid:Date.now()},Et=/\?/;S.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new C.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||S.error("Invalid XML: "+e),t};var St=/\[\]$/,kt=/\r?\n/g,At=/^(?:submit|button|image|reset|file)$/i,Nt=/^(?:input|select|textarea|keygen)/i;function Dt(n,e,r,i){var t;if(Array.isArray(e))S.each(e,function(e,t){r||St.test(n)?i(n,t):Dt(n+"["+("object"==typeof t&&null!=t?e:"")+"]",t,r,i)});else if(r||"object"!==w(e))i(n,e);else for(t in e)Dt(n+"["+t+"]",e[t],r,i)}S.param=function(e,t){var n,r=[],i=function(e,t){var n=m(t)?t():t;r[r.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(null==e)return"";if(Array.isArray(e)||e.jquery&&!S.isPlainObject(e))S.each(e,function(){i(this.name,this.value)});else for(n in e)Dt(n,e[n],t,i);return r.join("&")},S.fn.extend({serialize:function(){return S.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=S.prop(this,"elements");return e?S.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!S(this).is(":disabled")&&Nt.test(this.nodeName)&&!At.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var n=S(this).val();return null==n?null:Array.isArray(n)?S.map(n,function(e){return{name:t.name,value:e.replace(kt,"\r\n")}}):{name:t.name,value:n.replace(kt,"\r\n")}}).get()}});var jt=/%20/g,qt=/#.*$/,Lt=/([?&])_=[^&]*/,Ht=/^(.*?):[ \t]*([^\r\n]*)$/gm,Ot=/^(?:GET|HEAD)$/,Pt=/^\/\//,Rt={},Mt={},It="*/".concat("*"),Wt=E.createElement("a");function Ft(o){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,r=0,i=e.toLowerCase().match(P)||[];if(m(t))while(n=i[r++])"+"===n[0]?(n=n.slice(1)||"*",(o[n]=o[n]||[]).unshift(t)):(o[n]=o[n]||[]).push(t)}}function Bt(t,i,o,a){var s={},u=t===Mt;function l(e){var r;return s[e]=!0,S.each(t[e]||[],function(e,t){var n=t(i,o,a);return"string"!=typeof n||u||s[n]?u?!(r=n):void 0:(i.dataTypes.unshift(n),l(n),!1)}),r}return l(i.dataTypes[0])||!s["*"]&&l("*")}function $t(e,t){var n,r,i=S.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&S.extend(!0,e,r),e}Wt.href=Tt.href,S.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Tt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Tt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":It,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":S.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?$t($t(e,S.ajaxSettings),t):$t(S.ajaxSettings,e)},ajaxPrefilter:Ft(Rt),ajaxTransport:Ft(Mt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var c,f,p,n,d,r,h,g,i,o,v=S.ajaxSetup({},t),y=v.context||v,m=v.context&&(y.nodeType||y.jquery)?S(y):S.event,x=S.Deferred(),b=S.Callbacks("once memory"),w=v.statusCode||{},a={},s={},u="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(h){if(!n){n={};while(t=Ht.exec(p))n[t[1].toLowerCase()+" "]=(n[t[1].toLowerCase()+" "]||[]).concat(t[2])}t=n[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return h?p:null},setRequestHeader:function(e,t){return null==h&&(e=s[e.toLowerCase()]=s[e.toLowerCase()]||e,a[e]=t),this},overrideMimeType:function(e){return null==h&&(v.mimeType=e),this},statusCode:function(e){var t;if(e)if(h)T.always(e[T.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||u;return c&&c.abort(t),l(0,t),this}};if(x.promise(T),v.url=((e||v.url||Tt.href)+"").replace(Pt,Tt.protocol+"//"),v.type=t.method||t.type||v.method||v.type,v.dataTypes=(v.dataType||"*").toLowerCase().match(P)||[""],null==v.crossDomain){r=E.createElement("a");try{r.href=v.url,r.href=r.href,v.crossDomain=Wt.protocol+"//"+Wt.host!=r.protocol+"//"+r.host}catch(e){v.crossDomain=!0}}if(v.data&&v.processData&&"string"!=typeof v.data&&(v.data=S.param(v.data,v.traditional)),Bt(Rt,v,t,T),h)return T;for(i in(g=S.event&&v.global)&&0==S.active++&&S.event.trigger("ajaxStart"),v.type=v.type.toUpperCase(),v.hasContent=!Ot.test(v.type),f=v.url.replace(qt,""),v.hasContent?v.data&&v.processData&&0===(v.contentType||"").indexOf("application/x-www-form-urlencoded")&&(v.data=v.data.replace(jt,"+")):(o=v.url.slice(f.length),v.data&&(v.processData||"string"==typeof v.data)&&(f+=(Et.test(f)?"&":"?")+v.data,delete v.data),!1===v.cache&&(f=f.replace(Lt,"$1"),o=(Et.test(f)?"&":"?")+"_="+Ct.guid+++o),v.url=f+o),v.ifModified&&(S.lastModified[f]&&T.setRequestHeader("If-Modified-Since",S.lastModified[f]),S.etag[f]&&T.setRequestHeader("If-None-Match",S.etag[f])),(v.data&&v.hasContent&&!1!==v.contentType||t.contentType)&&T.setRequestHeader("Content-Type",v.contentType),T.setRequestHeader("Accept",v.dataTypes[0]&&v.accepts[v.dataTypes[0]]?v.accepts[v.dataTypes[0]]+("*"!==v.dataTypes[0]?", "+It+"; q=0.01":""):v.accepts["*"]),v.headers)T.setRequestHeader(i,v.headers[i]);if(v.beforeSend&&(!1===v.beforeSend.call(y,T,v)||h))return T.abort();if(u="abort",b.add(v.complete),T.done(v.success),T.fail(v.error),c=Bt(Mt,v,t,T)){if(T.readyState=1,g&&m.trigger("ajaxSend",[T,v]),h)return T;v.async&&0<v.timeout&&(d=C.setTimeout(function(){T.abort("timeout")},v.timeout));try{h=!1,c.send(a,l)}catch(e){if(h)throw e;l(-1,e)}}else l(-1,"No Transport");function l(e,t,n,r){var i,o,a,s,u,l=t;h||(h=!0,d&&C.clearTimeout(d),c=void 0,p=r||"",T.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){var r,i,o,a,s=e.contents,u=e.dataTypes;while("*"===u[0])u.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader("Content-Type"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||e.converters[i+" "+u[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==u[0]&&u.unshift(o),n[o]}(v,T,n)),!i&&-1<S.inArray("script",v.dataTypes)&&(v.converters["text script"]=function(){}),s=function(e,t,n,r){var i,o,a,s,u,l={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)l[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if("*"===o)o=u;else if("*"!==u&&u!==o){if(!(a=l[u+" "+o]||l["* "+o]))for(i in l)if((s=i.split(" "))[1]===o&&(a=l[u+" "+s[0]]||l["* "+s[0]])){!0===a?a=l[i]:!0!==l[i]&&(o=s[0],c.unshift(s[1]));break}if(!0!==a)if(a&&e["throws"])t=a(t);else try{t=a(t)}catch(e){return{state:"parsererror",error:a?e:"No conversion from "+u+" to "+o}}}return{state:"success",data:t}}(v,s,T,i),i?(v.ifModified&&((u=T.getResponseHeader("Last-Modified"))&&(S.lastModified[f]=u),(u=T.getResponseHeader("etag"))&&(S.etag[f]=u)),204===e||"HEAD"===v.type?l="nocontent":304===e?l="notmodified":(l=s.state,o=s.data,i=!(a=s.error))):(a=l,!e&&l||(l="error",e<0&&(e=0))),T.status=e,T.statusText=(t||l)+"",i?x.resolveWith(y,[o,l,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?"ajaxSuccess":"ajaxError",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger("ajaxComplete",[T,v]),--S.active||S.event.trigger("ajaxStop")))}return T},getJSON:function(e,t,n){return S.get(e,t,n,"json")},getScript:function(e,t){return S.get(e,void 0,t,"script")}}),S.each(["get","post"],function(e,i){S[i]=function(e,t,n,r){return m(t)&&(r=r||n,n=t,t=void 0),S.ajax(S.extend({url:e,type:i,dataType:r,data:t,success:n},S.isPlainObject(e)&&e))}}),S.ajaxPrefilter(function(e){var t;for(t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),S._evalUrl=function(e,t,n){return S.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){S.globalEval(e,t,n)}})},S.fn.extend({wrapAll:function(e){var t;return this[0]&&(m(e)&&(e=e.call(this[0])),t=S(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstElementChild)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return m(n)?this.each(function(e){S(this).wrapInner(n.call(this,e))}):this.each(function(){var e=S(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=m(t);return this.each(function(e){S(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){S(this).replaceWith(this.childNodes)}),this}}),S.expr.pseudos.hidden=function(e){return!S.expr.pseudos.visible(e)},S.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},S.ajaxSettings.xhr=function(){try{return new C.XMLHttpRequest}catch(e){}};var _t={0:200,1223:204},zt=S.ajaxSettings.xhr();y.cors=!!zt&&"withCredentials"in zt,y.ajax=zt=!!zt,S.ajaxTransport(function(i){var o,a;if(y.cors||zt&&!i.crossDomain)return{send:function(e,t){var n,r=i.xhr();if(r.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)r[n]=i.xhrFields[n];for(n in i.mimeType&&r.overrideMimeType&&r.overrideMimeType(i.mimeType),i.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)r.setRequestHeader(n,e[n]);o=function(e){return function(){o&&(o=a=r.onload=r.onerror=r.onabort=r.ontimeout=r.onreadystatechange=null,"abort"===e?r.abort():"error"===e?"number"!=typeof r.status?t(0,"error"):t(r.status,r.statusText):t(_t[r.status]||r.status,r.statusText,"text"!==(r.responseType||"text")||"string"!=typeof r.responseText?{binary:r.response}:{text:r.responseText},r.getAllResponseHeaders()))}},r.onload=o(),a=r.onerror=r.ontimeout=o("error"),void 0!==r.onabort?r.onabort=a:r.onreadystatechange=function(){4===r.readyState&&C.setTimeout(function(){o&&a()})},o=o("abort");try{r.send(i.hasContent&&i.data||null)}catch(e){if(o)throw e}},abort:function(){o&&o()}}}),S.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),S.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return S.globalEval(e),e}}}),S.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),S.ajaxTransport("script",function(n){var r,i;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){r=S("<script>").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on("load error",i=function(e){r.remove(),i=null,e&&t("error"===e.type?404:200,e.type)}),E.head.appendChild(r[0])},abort:function(){i&&i()}}});var Ut,Xt=[],Vt=/(=)\?(?=&|$)|\?\?/;S.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Xt.pop()||S.expando+"_"+Ct.guid++;return this[e]=!0,e}}),S.ajaxPrefilter("json jsonp",function(e,t,n){var r,i,o,a=!1!==e.jsonp&&(Vt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Vt.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=m(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Vt,"$1"+r):!1!==e.jsonp&&(e.url+=(Et.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return o||S.error(r+" was not called"),o[0]},e.dataTypes[0]="json",i=C[r],C[r]=function(){o=arguments},n.always(function(){void 0===i?S(C).removeProp(r):C[r]=i,e[r]&&(e.jsonpCallback=t.jsonpCallback,Xt.push(r)),o&&m(i)&&i(o[0]),o=i=void 0}),"script"}),y.createHTMLDocument=((Ut=E.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Ut.childNodes.length),S.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(y.createHTMLDocument?((r=(t=E.implementation.createHTMLDocument("")).createElement("base")).href=E.location.href,t.head.appendChild(r)):t=E),o=!n&&[],(i=N.exec(e))?[t.createElement(i[1])]:(i=xe([e],t,o),o&&o.length&&S(o).remove(),S.merge([],i.childNodes)));var r,i,o},S.fn.load=function(e,t,n){var r,i,o,a=this,s=e.indexOf(" ");return-1<s&&(r=vt(e.slice(s)),e=e.slice(0,s)),m(t)?(n=t,t=void 0):t&&"object"==typeof t&&(i="POST"),0<a.length&&S.ajax({url:e,type:i||"GET",dataType:"html",data:t}).done(function(e){o=arguments,a.html(r?S("<div>").append(S.parseHTML(e)).find(r):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},S.expr.pseudos.animated=function(t){return S.grep(S.timers,function(e){return t===e.elem}).length},S.offset={setOffset:function(e,t,n){var r,i,o,a,s,u,l=S.css(e,"position"),c=S(e),f={};"static"===l&&(e.style.position="relative"),s=c.offset(),o=S.css(e,"top"),u=S.css(e,"left"),("absolute"===l||"fixed"===l)&&-1<(o+u).indexOf("auto")?(a=(r=c.position()).top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),m(t)&&(t=t.call(e,n,S.extend({},s))),null!=t.top&&(f.top=t.top-s.top+a),null!=t.left&&(f.left=t.left-s.left+i),"using"in t?t.using.call(e,f):("number"==typeof f.top&&(f.top+="px"),"number"==typeof f.left&&(f.left+="px"),c.css(f))}},S.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){S.offset.setOffset(this,t,e)});var e,n,r=this[0];return r?r.getClientRects().length?(e=r.getBoundingClientRect(),n=r.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,r=this[0],i={top:0,left:0};if("fixed"===S.css(r,"position"))t=r.getBoundingClientRect();else{t=this.offset(),n=r.ownerDocument,e=r.offsetParent||n.documentElement;while(e&&(e===n.body||e===n.documentElement)&&"static"===S.css(e,"position"))e=e.parentNode;e&&e!==r&&1===e.nodeType&&((i=S(e).offset()).top+=S.css(e,"borderTopWidth",!0),i.left+=S.css(e,"borderLeftWidth",!0))}return{top:t.top-i.top-S.css(r,"marginTop",!0),left:t.left-i.left-S.css(r,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent;while(e&&"static"===S.css(e,"position"))e=e.offsetParent;return e||re})}}),S.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,i){var o="pageYOffset"===i;S.fn[t]=function(e){return $(this,function(e,t,n){var r;if(x(e)?r=e:9===e.nodeType&&(r=e.defaultView),void 0===n)return r?r[i]:e[t];r?r.scrollTo(o?r.pageXOffset:n,o?n:r.pageYOffset):e[t]=n},t,e,arguments.length)}}),S.each(["top","left"],function(e,n){S.cssHooks[n]=$e(y.pixelPosition,function(e,t){if(t)return t=Be(e,n),Me.test(t)?S(e).position()[n]+"px":t})}),S.each({Height:"height",Width:"width"},function(a,s){S.each({padding:"inner"+a,content:s,"":"outer"+a},function(r,o){S.fn[o]=function(e,t){var n=arguments.length&&(r||"boolean"!=typeof e),i=r||(!0===e||!0===t?"margin":"border");return $(this,function(e,t,n){var r;return x(e)?0===o.indexOf("outer")?e["inner"+a]:e.document.documentElement["client"+a]:9===e.nodeType?(r=e.documentElement,Math.max(e.body["scroll"+a],r["scroll"+a],e.body["offset"+a],r["offset"+a],r["client"+a])):void 0===n?S.css(e,t,i):S.style(e,t,n,i)},s,n?e:void 0,n)}})}),S.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){S.fn[t]=function(e){return this.on(t,e)}}),S.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),S.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,n){S.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}});var Gt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;S.proxy=function(e,t){var n,r,i;if("string"==typeof t&&(n=e[t],t=e,e=n),m(e))return r=s.call(arguments,2),(i=function(){return e.apply(t||this,r.concat(s.call(arguments)))}).guid=e.guid=e.guid||S.guid++,i},S.holdReady=function(e){e?S.readyWait++:S.ready(!0)},S.isArray=Array.isArray,S.parseJSON=JSON.parse,S.nodeName=A,S.isFunction=m,S.isWindow=x,S.camelCase=X,S.type=w,S.now=Date.now,S.isNumeric=function(e){var t=S.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},S.trim=function(e){return null==e?"":(e+"").replace(Gt,"")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return S});var Yt=C.jQuery,Qt=C.$;return S.noConflict=function(e){return C.$===S&&(C.$=Qt),e&&C.jQuery===S&&(C.jQuery=Yt),S},"undefined"==typeof e&&(C.jQuery=C.$=S),S});var btg$=$.noConflict(true);

/*!
 * Amplify Core 1.1.2
 *
 * Copyright 2011 - 2013 appendTo LLC. (http://appendto.com/team)
 * Dual licensed under the MIT or GPL licenses.
 * http://appendto.com/open-source-licenses
 *
 * http://amplifyjs.com
 */
(function(e,t){var n=[].slice,r={},i=e.amplify={publish:function(e){if(typeof e!="string")throw new Error("You must provide a valid topic to publish.");var t=n.call(arguments,1),i,s,o,u=0,a;if(!r[e])return!0;i=r[e].slice();for(o=i.length;u<o;u++){s=i[u],a=s.callback.apply(s.context,t);if(a===!1)break}return a!==!1},subscribe:function(e,t,n,i){if(typeof e!="string")throw new Error("You must provide a valid topic to create a subscription.");arguments.length===3&&typeof n=="number"&&(i=n,n=t,t=null),arguments.length===2&&(n=t,t=null),i=i||10;var s=0,o=e.split(/\s/),u=o.length,a;for(;s<u;s++){e=o[s],a=!1,r[e]||(r[e]=[]);var f=r[e].length-1,l={callback:n,context:t,priority:i};for(;f>=0;f--)if(r[e][f].priority<=i){r[e].splice(f+1,0,l),a=!0;break}a||r[e].unshift(l)}return n},unsubscribe:function(e,t,n){if(typeof e!="string")throw new Error("You must provide a valid topic to remove a subscription.");arguments.length===2&&(n=t,t=null);if(!r[e])return;var i=r[e].length,s=0;for(;s<i;s++)r[e][s].callback===n&&(!t||r[e][s].context===t)&&(r[e].splice(s,1),s--,i--)}}})(this)
/*! howler.js v2.2.1 | (c) 2013-2020, James Simpson of GoldFire Studios | MIT License | howlerjs.com */
!function(){"use strict";var e=function(){this.init()};e.prototype={init:function(){var e=this||n;return e._counter=1e3,e._html5AudioPool=[],e.html5PoolSize=10,e._codecs={},e._howls=[],e._muted=!1,e._volume=1,e._canPlayEvent="canplaythrough",e._navigator="undefined"!=typeof window&&window.navigator?window.navigator:null,e.masterGain=null,e.noAudio=!1,e.usingWebAudio=!0,e.autoSuspend=!0,e.ctx=null,e.autoUnlock=!0,e._setup(),e},volume:function(e){var o=this||n;if(e=parseFloat(e),o.ctx||_(),void 0!==e&&e>=0&&e<=1){if(o._volume=e,o._muted)return o;o.usingWebAudio&&o.masterGain.gain.setValueAtTime(e,n.ctx.currentTime);for(var t=0;t<o._howls.length;t++)if(!o._howls[t]._webAudio)for(var r=o._howls[t]._getSoundIds(),a=0;a<r.length;a++){var u=o._howls[t]._soundById(r[a]);u&&u._node&&(u._node.volume=u._volume*e)}return o}return o._volume},mute:function(e){var o=this||n;o.ctx||_(),o._muted=e,o.usingWebAudio&&o.masterGain.gain.setValueAtTime(e?0:o._volume,n.ctx.currentTime);for(var t=0;t<o._howls.length;t++)if(!o._howls[t]._webAudio)for(var r=o._howls[t]._getSoundIds(),a=0;a<r.length;a++){var u=o._howls[t]._soundById(r[a]);u&&u._node&&(u._node.muted=!!e||u._muted)}return o},stop:function(){for(var e=this||n,o=0;o<e._howls.length;o++)e._howls[o].stop();return e},unload:function(){for(var e=this||n,o=e._howls.length-1;o>=0;o--)e._howls[o].unload();return e.usingWebAudio&&e.ctx&&void 0!==e.ctx.close&&(e.ctx.close(),e.ctx=null,_()),e},codecs:function(e){return(this||n)._codecs[e.replace(/^x-/,"")]},_setup:function(){var e=this||n;if(e.state=e.ctx?e.ctx.state||"suspended":"suspended",e._autoSuspend(),!e.usingWebAudio)if("undefined"!=typeof Audio)try{var o=new Audio;void 0===o.oncanplaythrough&&(e._canPlayEvent="canplay")}catch(n){e.noAudio=!0}else e.noAudio=!0;try{var o=new Audio;o.muted&&(e.noAudio=!0)}catch(e){}return e.noAudio||e._setupCodecs(),e},_setupCodecs:function(){var e=this||n,o=null;try{o="undefined"!=typeof Audio?new Audio:null}catch(n){return e}if(!o||"function"!=typeof o.canPlayType)return e;var t=o.canPlayType("audio/mpeg;").replace(/^no$/,""),r=e._navigator&&e._navigator.userAgent.match(/OPR\/([0-6].)/g),a=r&&parseInt(r[0].split("/")[1],10)<33;return e._codecs={mp3:!(a||!t&&!o.canPlayType("audio/mp3;").replace(/^no$/,"")),mpeg:!!t,opus:!!o.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/,""),ogg:!!o.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),oga:!!o.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),wav:!!(o.canPlayType('audio/wav; codecs="1"')||o.canPlayType("audio/wav")).replace(/^no$/,""),aac:!!o.canPlayType("audio/aac;").replace(/^no$/,""),caf:!!o.canPlayType("audio/x-caf;").replace(/^no$/,""),m4a:!!(o.canPlayType("audio/x-m4a;")||o.canPlayType("audio/m4a;")||o.canPlayType("audio/aac;")).replace(/^no$/,""),m4b:!!(o.canPlayType("audio/x-m4b;")||o.canPlayType("audio/m4b;")||o.canPlayType("audio/aac;")).replace(/^no$/,""),mp4:!!(o.canPlayType("audio/x-mp4;")||o.canPlayType("audio/mp4;")||o.canPlayType("audio/aac;")).replace(/^no$/,""),weba:!!o.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/,""),webm:!!o.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/,""),dolby:!!o.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/,""),flac:!!(o.canPlayType("audio/x-flac;")||o.canPlayType("audio/flac;")).replace(/^no$/,"")},e},_unlockAudio:function(){var e=this||n;if(!e._audioUnlocked&&e.ctx){e._audioUnlocked=!1,e.autoUnlock=!1,e._mobileUnloaded||44100===e.ctx.sampleRate||(e._mobileUnloaded=!0,e.unload()),e._scratchBuffer=e.ctx.createBuffer(1,1,22050);var o=function(n){for(;e._html5AudioPool.length<e.html5PoolSize;)try{var t=new Audio;t._unlocked=!0,e._releaseHtml5Audio(t)}catch(n){e.noAudio=!0;break}for(var r=0;r<e._howls.length;r++)if(!e._howls[r]._webAudio)for(var a=e._howls[r]._getSoundIds(),u=0;u<a.length;u++){var d=e._howls[r]._soundById(a[u]);d&&d._node&&!d._node._unlocked&&(d._node._unlocked=!0,d._node.load())}e._autoResume();var i=e.ctx.createBufferSource();i.buffer=e._scratchBuffer,i.connect(e.ctx.destination),void 0===i.start?i.noteOn(0):i.start(0),"function"==typeof e.ctx.resume&&e.ctx.resume(),i.onended=function(){i.disconnect(0),e._audioUnlocked=!0,document.removeEventListener("touchstart",o,!0),document.removeEventListener("touchend",o,!0),document.removeEventListener("click",o,!0);for(var n=0;n<e._howls.length;n++)e._howls[n]._emit("unlock")}};return document.addEventListener("touchstart",o,!0),document.addEventListener("touchend",o,!0),document.addEventListener("click",o,!0),e}},_obtainHtml5Audio:function(){var e=this||n;if(e._html5AudioPool.length)return e._html5AudioPool.pop();var o=(new Audio).play();return o&&"undefined"!=typeof Promise&&(o instanceof Promise||"function"==typeof o.then)&&o.catch(function(){console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.")}),new Audio},_releaseHtml5Audio:function(e){var o=this||n;return e._unlocked&&o._html5AudioPool.push(e),o},_autoSuspend:function(){var e=this;if(e.autoSuspend&&e.ctx&&void 0!==e.ctx.suspend&&n.usingWebAudio){for(var o=0;o<e._howls.length;o++)if(e._howls[o]._webAudio)for(var t=0;t<e._howls[o]._sounds.length;t++)if(!e._howls[o]._sounds[t]._paused)return e;return e._suspendTimer&&clearTimeout(e._suspendTimer),e._suspendTimer=setTimeout(function(){if(e.autoSuspend){e._suspendTimer=null,e.state="suspending";var n=function(){e.state="suspended",e._resumeAfterSuspend&&(delete e._resumeAfterSuspend,e._autoResume())};e.ctx.suspend().then(n,n)}},3e4),e}},_autoResume:function(){var e=this;if(e.ctx&&void 0!==e.ctx.resume&&n.usingWebAudio)return"running"===e.state&&"interrupted"!==e.ctx.state&&e._suspendTimer?(clearTimeout(e._suspendTimer),e._suspendTimer=null):"suspended"===e.state||"running"===e.state&&"interrupted"===e.ctx.state?(e.ctx.resume().then(function(){e.state="running";for(var n=0;n<e._howls.length;n++)e._howls[n]._emit("resume")}),e._suspendTimer&&(clearTimeout(e._suspendTimer),e._suspendTimer=null)):"suspending"===e.state&&(e._resumeAfterSuspend=!0),e}};var n=new e,o=function(e){var n=this;if(!e.src||0===e.src.length)return void console.error("An array of source files must be passed with any new Howl.");n.init(e)};o.prototype={init:function(e){var o=this;return n.ctx||_(),o._autoplay=e.autoplay||!1,o._format="string"!=typeof e.format?e.format:[e.format],o._html5=e.html5||!1,o._muted=e.mute||!1,o._loop=e.loop||!1,o._pool=e.pool||5,o._preload="boolean"!=typeof e.preload&&"metadata"!==e.preload||e.preload,o._rate=e.rate||1,o._sprite=e.sprite||{},o._src="string"!=typeof e.src?e.src:[e.src],o._volume=void 0!==e.volume?e.volume:1,o._xhr={method:e.xhr&&e.xhr.method?e.xhr.method:"GET",headers:e.xhr&&e.xhr.headers?e.xhr.headers:null,withCredentials:!(!e.xhr||!e.xhr.withCredentials)&&e.xhr.withCredentials},o._duration=0,o._state="unloaded",o._sounds=[],o._endTimers={},o._queue=[],o._playLock=!1,o._onend=e.onend?[{fn:e.onend}]:[],o._onfade=e.onfade?[{fn:e.onfade}]:[],o._onload=e.onload?[{fn:e.onload}]:[],o._onloaderror=e.onloaderror?[{fn:e.onloaderror}]:[],o._onplayerror=e.onplayerror?[{fn:e.onplayerror}]:[],o._onpause=e.onpause?[{fn:e.onpause}]:[],o._onplay=e.onplay?[{fn:e.onplay}]:[],o._onstop=e.onstop?[{fn:e.onstop}]:[],o._onmute=e.onmute?[{fn:e.onmute}]:[],o._onvolume=e.onvolume?[{fn:e.onvolume}]:[],o._onrate=e.onrate?[{fn:e.onrate}]:[],o._onseek=e.onseek?[{fn:e.onseek}]:[],o._onunlock=e.onunlock?[{fn:e.onunlock}]:[],o._onresume=[],o._webAudio=n.usingWebAudio&&!o._html5,void 0!==n.ctx&&n.ctx&&n.autoUnlock&&n._unlockAudio(),n._howls.push(o),o._autoplay&&o._queue.push({event:"play",action:function(){o.play()}}),o._preload&&"none"!==o._preload&&o.load(),o},load:function(){var e=this,o=null;if(n.noAudio)return void e._emit("loaderror",null,"No audio support.");"string"==typeof e._src&&(e._src=[e._src]);for(var r=0;r<e._src.length;r++){var u,d;if(e._format&&e._format[r])u=e._format[r];else{if("string"!=typeof(d=e._src[r])){e._emit("loaderror",null,"Non-string found in selected audio sources - ignoring.");continue}u=/^data:audio\/([^;,]+);/i.exec(d),u||(u=/\.([^.]+)$/.exec(d.split("?",1)[0])),u&&(u=u[1].toLowerCase())}if(u||console.warn('No file extension was found. Consider using the "format" property or specify an extension.'),u&&n.codecs(u)){o=e._src[r];break}}return o?(e._src=o,e._state="loading","https:"===window.location.protocol&&"http:"===o.slice(0,5)&&(e._html5=!0,e._webAudio=!1),new t(e),e._webAudio&&a(e),e):void e._emit("loaderror",null,"No codec support for selected audio sources.")},play:function(e,o){var t=this,r=null;if("number"==typeof e)r=e,e=null;else{if("string"==typeof e&&"loaded"===t._state&&!t._sprite[e])return null;if(void 0===e&&(e="__default",!t._playLock)){for(var a=0,u=0;u<t._sounds.length;u++)t._sounds[u]._paused&&!t._sounds[u]._ended&&(a++,r=t._sounds[u]._id);1===a?e=null:r=null}}var d=r?t._soundById(r):t._inactiveSound();if(!d)return null;if(r&&!e&&(e=d._sprite||"__default"),"loaded"!==t._state){d._sprite=e,d._ended=!1;var i=d._id;return t._queue.push({event:"play",action:function(){t.play(i)}}),i}if(r&&!d._paused)return o||t._loadQueue("play"),d._id;t._webAudio&&n._autoResume();var _=Math.max(0,d._seek>0?d._seek:t._sprite[e][0]/1e3),s=Math.max(0,(t._sprite[e][0]+t._sprite[e][1])/1e3-_),l=1e3*s/Math.abs(d._rate),c=t._sprite[e][0]/1e3,f=(t._sprite[e][0]+t._sprite[e][1])/1e3;d._sprite=e,d._ended=!1;var p=function(){d._paused=!1,d._seek=_,d._start=c,d._stop=f,d._loop=!(!d._loop&&!t._sprite[e][2])};if(_>=f)return void t._ended(d);var m=d._node;if(t._webAudio){var v=function(){t._playLock=!1,p(),t._refreshBuffer(d);var e=d._muted||t._muted?0:d._volume;m.gain.setValueAtTime(e,n.ctx.currentTime),d._playStart=n.ctx.currentTime,void 0===m.bufferSource.start?d._loop?m.bufferSource.noteGrainOn(0,_,86400):m.bufferSource.noteGrainOn(0,_,s):d._loop?m.bufferSource.start(0,_,86400):m.bufferSource.start(0,_,s),l!==1/0&&(t._endTimers[d._id]=setTimeout(t._ended.bind(t,d),l)),o||setTimeout(function(){t._emit("play",d._id),t._loadQueue()},0)};"running"===n.state&&"interrupted"!==n.ctx.state?v():(t._playLock=!0,t.once("resume",v),t._clearTimer(d._id))}else{var h=function(){m.currentTime=_,m.muted=d._muted||t._muted||n._muted||m.muted,m.volume=d._volume*n.volume(),m.playbackRate=d._rate;try{var r=m.play();if(r&&"undefined"!=typeof Promise&&(r instanceof Promise||"function"==typeof r.then)?(t._playLock=!0,p(),r.then(function(){t._playLock=!1,m._unlocked=!0,o||(t._emit("play",d._id),t._loadQueue())}).catch(function(){t._playLock=!1,t._emit("playerror",d._id,"Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction."),d._ended=!0,d._paused=!0})):o||(t._playLock=!1,p(),t._emit("play",d._id),t._loadQueue()),m.playbackRate=d._rate,m.paused)return void t._emit("playerror",d._id,"Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");"__default"!==e||d._loop?t._endTimers[d._id]=setTimeout(t._ended.bind(t,d),l):(t._endTimers[d._id]=function(){t._ended(d),m.removeEventListener("ended",t._endTimers[d._id],!1)},m.addEventListener("ended",t._endTimers[d._id],!1))}catch(e){t._emit("playerror",d._id,e)}};"data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA"===m.src&&(m.src=t._src,m.load());var y=window&&window.ejecta||!m.readyState&&n._navigator.isCocoonJS;if(m.readyState>=3||y)h();else{t._playLock=!0;var g=function(){h(),m.removeEventListener(n._canPlayEvent,g,!1)};m.addEventListener(n._canPlayEvent,g,!1),t._clearTimer(d._id)}}return d._id},pause:function(e){var n=this;if("loaded"!==n._state||n._playLock)return n._queue.push({event:"pause",action:function(){n.pause(e)}}),n;for(var o=n._getSoundIds(e),t=0;t<o.length;t++){n._clearTimer(o[t]);var r=n._soundById(o[t]);if(r&&!r._paused&&(r._seek=n.seek(o[t]),r._rateSeek=0,r._paused=!0,n._stopFade(o[t]),r._node))if(n._webAudio){if(!r._node.bufferSource)continue;void 0===r._node.bufferSource.stop?r._node.bufferSource.noteOff(0):r._node.bufferSource.stop(0),n._cleanBuffer(r._node)}else isNaN(r._node.duration)&&r._node.duration!==1/0||r._node.pause();arguments[1]||n._emit("pause",r?r._id:null)}return n},stop:function(e,n){var o=this;if("loaded"!==o._state||o._playLock)return o._queue.push({event:"stop",action:function(){o.stop(e)}}),o;for(var t=o._getSoundIds(e),r=0;r<t.length;r++){o._clearTimer(t[r]);var a=o._soundById(t[r]);a&&(a._seek=a._start||0,a._rateSeek=0,a._paused=!0,a._ended=!0,o._stopFade(t[r]),a._node&&(o._webAudio?a._node.bufferSource&&(void 0===a._node.bufferSource.stop?a._node.bufferSource.noteOff(0):a._node.bufferSource.stop(0),o._cleanBuffer(a._node)):isNaN(a._node.duration)&&a._node.duration!==1/0||(a._node.currentTime=a._start||0,a._node.pause(),a._node.duration===1/0&&o._clearSound(a._node))),n||o._emit("stop",a._id))}return o},mute:function(e,o){var t=this;if("loaded"!==t._state||t._playLock)return t._queue.push({event:"mute",action:function(){t.mute(e,o)}}),t;if(void 0===o){if("boolean"!=typeof e)return t._muted;t._muted=e}for(var r=t._getSoundIds(o),a=0;a<r.length;a++){var u=t._soundById(r[a]);u&&(u._muted=e,u._interval&&t._stopFade(u._id),t._webAudio&&u._node?u._node.gain.setValueAtTime(e?0:u._volume,n.ctx.currentTime):u._node&&(u._node.muted=!!n._muted||e),t._emit("mute",u._id))}return t},volume:function(){var e,o,t=this,r=arguments;if(0===r.length)return t._volume;if(1===r.length||2===r.length&&void 0===r[1]){t._getSoundIds().indexOf(r[0])>=0?o=parseInt(r[0],10):e=parseFloat(r[0])}else r.length>=2&&(e=parseFloat(r[0]),o=parseInt(r[1],10));var a;if(!(void 0!==e&&e>=0&&e<=1))return a=o?t._soundById(o):t._sounds[0],a?a._volume:0;if("loaded"!==t._state||t._playLock)return t._queue.push({event:"volume",action:function(){t.volume.apply(t,r)}}),t;void 0===o&&(t._volume=e),o=t._getSoundIds(o);for(var u=0;u<o.length;u++)(a=t._soundById(o[u]))&&(a._volume=e,r[2]||t._stopFade(o[u]),t._webAudio&&a._node&&!a._muted?a._node.gain.setValueAtTime(e,n.ctx.currentTime):a._node&&!a._muted&&(a._node.volume=e*n.volume()),t._emit("volume",a._id));return t},fade:function(e,o,t,r){var a=this;if("loaded"!==a._state||a._playLock)return a._queue.push({event:"fade",action:function(){a.fade(e,o,t,r)}}),a;e=Math.min(Math.max(0,parseFloat(e)),1),o=Math.min(Math.max(0,parseFloat(o)),1),t=parseFloat(t),a.volume(e,r);for(var u=a._getSoundIds(r),d=0;d<u.length;d++){var i=a._soundById(u[d]);if(i){if(r||a._stopFade(u[d]),a._webAudio&&!i._muted){var _=n.ctx.currentTime,s=_+t/1e3;i._volume=e,i._node.gain.setValueAtTime(e,_),i._node.gain.linearRampToValueAtTime(o,s)}a._startFadeInterval(i,e,o,t,u[d],void 0===r)}}return a},_startFadeInterval:function(e,n,o,t,r,a){var u=this,d=n,i=o-n,_=Math.abs(i/.01),s=Math.max(4,_>0?t/_:t),l=Date.now();e._fadeTo=o,e._interval=setInterval(function(){var r=(Date.now()-l)/t;l=Date.now(),d+=i*r,d=Math.round(100*d)/100,d=i<0?Math.max(o,d):Math.min(o,d),u._webAudio?e._volume=d:u.volume(d,e._id,!0),a&&(u._volume=d),(o<n&&d<=o||o>n&&d>=o)&&(clearInterval(e._interval),e._interval=null,e._fadeTo=null,u.volume(o,e._id),u._emit("fade",e._id))},s)},_stopFade:function(e){var o=this,t=o._soundById(e);return t&&t._interval&&(o._webAudio&&t._node.gain.cancelScheduledValues(n.ctx.currentTime),clearInterval(t._interval),t._interval=null,o.volume(t._fadeTo,e),t._fadeTo=null,o._emit("fade",e)),o},loop:function(){var e,n,o,t=this,r=arguments;if(0===r.length)return t._loop;if(1===r.length){if("boolean"!=typeof r[0])return!!(o=t._soundById(parseInt(r[0],10)))&&o._loop;e=r[0],t._loop=e}else 2===r.length&&(e=r[0],n=parseInt(r[1],10));for(var a=t._getSoundIds(n),u=0;u<a.length;u++)(o=t._soundById(a[u]))&&(o._loop=e,t._webAudio&&o._node&&o._node.bufferSource&&(o._node.bufferSource.loop=e,e&&(o._node.bufferSource.loopStart=o._start||0,o._node.bufferSource.loopEnd=o._stop)));return t},rate:function(){var e,o,t=this,r=arguments;if(0===r.length)o=t._sounds[0]._id;else if(1===r.length){var a=t._getSoundIds(),u=a.indexOf(r[0]);u>=0?o=parseInt(r[0],10):e=parseFloat(r[0])}else 2===r.length&&(e=parseFloat(r[0]),o=parseInt(r[1],10));var d;if("number"!=typeof e)return d=t._soundById(o),d?d._rate:t._rate;if("loaded"!==t._state||t._playLock)return t._queue.push({event:"rate",action:function(){t.rate.apply(t,r)}}),t;void 0===o&&(t._rate=e),o=t._getSoundIds(o);for(var i=0;i<o.length;i++)if(d=t._soundById(o[i])){t.playing(o[i])&&(d._rateSeek=t.seek(o[i]),d._playStart=t._webAudio?n.ctx.currentTime:d._playStart),d._rate=e,t._webAudio&&d._node&&d._node.bufferSource?d._node.bufferSource.playbackRate.setValueAtTime(e,n.ctx.currentTime):d._node&&(d._node.playbackRate=e);var _=t.seek(o[i]),s=(t._sprite[d._sprite][0]+t._sprite[d._sprite][1])/1e3-_,l=1e3*s/Math.abs(d._rate);!t._endTimers[o[i]]&&d._paused||(t._clearTimer(o[i]),t._endTimers[o[i]]=setTimeout(t._ended.bind(t,d),l)),t._emit("rate",d._id)}return t},seek:function(){var e,o,t=this,r=arguments;if(0===r.length)o=t._sounds[0]._id;else if(1===r.length){var a=t._getSoundIds(),u=a.indexOf(r[0]);u>=0?o=parseInt(r[0],10):t._sounds.length&&(o=t._sounds[0]._id,e=parseFloat(r[0]))}else 2===r.length&&(e=parseFloat(r[0]),o=parseInt(r[1],10));if(void 0===o)return t;if("number"==typeof e&&("loaded"!==t._state||t._playLock))return t._queue.push({event:"seek",action:function(){t.seek.apply(t,r)}}),t;var d=t._soundById(o);if(d){if(!("number"==typeof e&&e>=0)){if(t._webAudio){var i=t.playing(o)?n.ctx.currentTime-d._playStart:0,_=d._rateSeek?d._rateSeek-d._seek:0;return d._seek+(_+i*Math.abs(d._rate))}return d._node.currentTime}var s=t.playing(o);s&&t.pause(o,!0),d._seek=e,d._ended=!1,t._clearTimer(o),t._webAudio||!d._node||isNaN(d._node.duration)||(d._node.currentTime=e);var l=function(){t._emit("seek",o),s&&t.play(o,!0)};if(s&&!t._webAudio){var c=function(){t._playLock?setTimeout(c,0):l()};setTimeout(c,0)}else l()}return t},playing:function(e){var n=this;if("number"==typeof e){var o=n._soundById(e);return!!o&&!o._paused}for(var t=0;t<n._sounds.length;t++)if(!n._sounds[t]._paused)return!0;return!1},duration:function(e){var n=this,o=n._duration,t=n._soundById(e);return t&&(o=n._sprite[t._sprite][1]/1e3),o},state:function(){return this._state},unload:function(){for(var e=this,o=e._sounds,t=0;t<o.length;t++)o[t]._paused||e.stop(o[t]._id),e._webAudio||(e._clearSound(o[t]._node),o[t]._node.removeEventListener("error",o[t]._errorFn,!1),o[t]._node.removeEventListener(n._canPlayEvent,o[t]._loadFn,!1),o[t]._node.removeEventListener("ended",o[t]._endFn,!1),n._releaseHtml5Audio(o[t]._node)),delete o[t]._node,e._clearTimer(o[t]._id);var a=n._howls.indexOf(e);a>=0&&n._howls.splice(a,1);var u=!0;for(t=0;t<n._howls.length;t++)if(n._howls[t]._src===e._src||e._src.indexOf(n._howls[t]._src)>=0){u=!1;break}return r&&u&&delete r[e._src],n.noAudio=!1,e._state="unloaded",e._sounds=[],e=null,null},on:function(e,n,o,t){var r=this,a=r["_on"+e];return"function"==typeof n&&a.push(t?{id:o,fn:n,once:t}:{id:o,fn:n}),r},off:function(e,n,o){var t=this,r=t["_on"+e],a=0;if("number"==typeof n&&(o=n,n=null),n||o)for(a=0;a<r.length;a++){var u=o===r[a].id;if(n===r[a].fn&&u||!n&&u){r.splice(a,1);break}}else if(e)t["_on"+e]=[];else{var d=Object.keys(t);for(a=0;a<d.length;a++)0===d[a].indexOf("_on")&&Array.isArray(t[d[a]])&&(t[d[a]]=[])}return t},once:function(e,n,o){var t=this;return t.on(e,n,o,1),t},_emit:function(e,n,o){for(var t=this,r=t["_on"+e],a=r.length-1;a>=0;a--)r[a].id&&r[a].id!==n&&"load"!==e||(setTimeout(function(e){e.call(this,n,o)}.bind(t,r[a].fn),0),r[a].once&&t.off(e,r[a].fn,r[a].id));return t._loadQueue(e),t},_loadQueue:function(e){var n=this;if(n._queue.length>0){var o=n._queue[0];o.event===e&&(n._queue.shift(),n._loadQueue()),e||o.action()}return n},_ended:function(e){var o=this,t=e._sprite;if(!o._webAudio&&e._node&&!e._node.paused&&!e._node.ended&&e._node.currentTime<e._stop)return setTimeout(o._ended.bind(o,e),100),o;var r=!(!e._loop&&!o._sprite[t][2]);if(o._emit("end",e._id),!o._webAudio&&r&&o.stop(e._id,!0).play(e._id),o._webAudio&&r){o._emit("play",e._id),e._seek=e._start||0,e._rateSeek=0,e._playStart=n.ctx.currentTime;var a=1e3*(e._stop-e._start)/Math.abs(e._rate);o._endTimers[e._id]=setTimeout(o._ended.bind(o,e),a)}return o._webAudio&&!r&&(e._paused=!0,e._ended=!0,e._seek=e._start||0,e._rateSeek=0,o._clearTimer(e._id),o._cleanBuffer(e._node),n._autoSuspend()),o._webAudio||r||o.stop(e._id,!0),o},_clearTimer:function(e){var n=this;if(n._endTimers[e]){if("function"!=typeof n._endTimers[e])clearTimeout(n._endTimers[e]);else{var o=n._soundById(e);o&&o._node&&o._node.removeEventListener("ended",n._endTimers[e],!1)}delete n._endTimers[e]}return n},_soundById:function(e){for(var n=this,o=0;o<n._sounds.length;o++)if(e===n._sounds[o]._id)return n._sounds[o];return null},_inactiveSound:function(){var e=this;e._drain();for(var n=0;n<e._sounds.length;n++)if(e._sounds[n]._ended)return e._sounds[n].reset();return new t(e)},_drain:function(){var e=this,n=e._pool,o=0,t=0;if(!(e._sounds.length<n)){for(t=0;t<e._sounds.length;t++)e._sounds[t]._ended&&o++;for(t=e._sounds.length-1;t>=0;t--){if(o<=n)return;e._sounds[t]._ended&&(e._webAudio&&e._sounds[t]._node&&e._sounds[t]._node.disconnect(0),e._sounds.splice(t,1),o--)}}},_getSoundIds:function(e){var n=this;if(void 0===e){for(var o=[],t=0;t<n._sounds.length;t++)o.push(n._sounds[t]._id);return o}return[e]},_refreshBuffer:function(e){var o=this;return e._node.bufferSource=n.ctx.createBufferSource(),e._node.bufferSource.buffer=r[o._src],e._panner?e._node.bufferSource.connect(e._panner):e._node.bufferSource.connect(e._node),e._node.bufferSource.loop=e._loop,e._loop&&(e._node.bufferSource.loopStart=e._start||0,e._node.bufferSource.loopEnd=e._stop||0),e._node.bufferSource.playbackRate.setValueAtTime(e._rate,n.ctx.currentTime),o},_cleanBuffer:function(e){var o=this,t=n._navigator&&n._navigator.vendor.indexOf("Apple")>=0;if(n._scratchBuffer&&e.bufferSource&&(e.bufferSource.onended=null,e.bufferSource.disconnect(0),t))try{e.bufferSource.buffer=n._scratchBuffer}catch(e){}return e.bufferSource=null,o},_clearSound:function(e){/MSIE |Trident\//.test(n._navigator&&n._navigator.userAgent)||(e.src="data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA")}};var t=function(e){this._parent=e,this.init()};t.prototype={init:function(){var e=this,o=e._parent;return e._muted=o._muted,e._loop=o._loop,e._volume=o._volume,e._rate=o._rate,e._seek=0,e._paused=!0,e._ended=!0,e._sprite="__default",e._id=++n._counter,o._sounds.push(e),e.create(),e},create:function(){var e=this,o=e._parent,t=n._muted||e._muted||e._parent._muted?0:e._volume;return o._webAudio?(e._node=void 0===n.ctx.createGain?n.ctx.createGainNode():n.ctx.createGain(),e._node.gain.setValueAtTime(t,n.ctx.currentTime),e._node.paused=!0,e._node.connect(n.masterGain)):n.noAudio||(e._node=n._obtainHtml5Audio(),e._errorFn=e._errorListener.bind(e),e._node.addEventListener("error",e._errorFn,!1),e._loadFn=e._loadListener.bind(e),e._node.addEventListener(n._canPlayEvent,e._loadFn,!1),e._endFn=e._endListener.bind(e),e._node.addEventListener("ended",e._endFn,!1),e._node.src=o._src,e._node.preload=!0===o._preload?"auto":o._preload,e._node.volume=t*n.volume(),e._node.load()),e},reset:function(){var e=this,o=e._parent;return e._muted=o._muted,e._loop=o._loop,e._volume=o._volume,e._rate=o._rate,e._seek=0,e._rateSeek=0,e._paused=!0,e._ended=!0,e._sprite="__default",e._id=++n._counter,e},_errorListener:function(){var e=this;e._parent._emit("loaderror",e._id,e._node.error?e._node.error.code:0),e._node.removeEventListener("error",e._errorFn,!1)},_loadListener:function(){var e=this,o=e._parent;o._duration=Math.ceil(10*e._node.duration)/10,0===Object.keys(o._sprite).length&&(o._sprite={__default:[0,1e3*o._duration]}),"loaded"!==o._state&&(o._state="loaded",o._emit("load"),o._loadQueue()),e._node.removeEventListener(n._canPlayEvent,e._loadFn,!1)},_endListener:function(){var e=this,n=e._parent;n._duration===1/0&&(n._duration=Math.ceil(10*e._node.duration)/10,n._sprite.__default[1]===1/0&&(n._sprite.__default[1]=1e3*n._duration),n._ended(e)),e._node.removeEventListener("ended",e._endFn,!1)}};var r={},a=function(e){var n=e._src;if(r[n])return e._duration=r[n].duration,void i(e);if(/^data:[^;]+;base64,/.test(n)){for(var o=atob(n.split(",")[1]),t=new Uint8Array(o.length),a=0;a<o.length;++a)t[a]=o.charCodeAt(a);d(t.buffer,e)}else{var _=new XMLHttpRequest;_.open(e._xhr.method,n,!0),_.withCredentials=e._xhr.withCredentials,_.responseType="arraybuffer",e._xhr.headers&&Object.keys(e._xhr.headers).forEach(function(n){_.setRequestHeader(n,e._xhr.headers[n])}),_.onload=function(){var n=(_.status+"")[0];if("0"!==n&&"2"!==n&&"3"!==n)return void e._emit("loaderror",null,"Failed loading audio file with status: "+_.status+".");d(_.response,e)},_.onerror=function(){e._webAudio&&(e._html5=!0,e._webAudio=!1,e._sounds=[],delete r[n],e.load())},u(_)}},u=function(e){try{e.send()}catch(n){e.onerror()}},d=function(e,o){var t=function(){o._emit("loaderror",null,"Decoding audio data failed.")},a=function(e){e&&o._sounds.length>0?(r[o._src]=e,i(o,e)):t()};"undefined"!=typeof Promise&&1===n.ctx.decodeAudioData.length?n.ctx.decodeAudioData(e).then(a).catch(t):n.ctx.decodeAudioData(e,a,t)},i=function(e,n){n&&!e._duration&&(e._duration=n.duration),0===Object.keys(e._sprite).length&&(e._sprite={__default:[0,1e3*e._duration]}),"loaded"!==e._state&&(e._state="loaded",e._emit("load"),e._loadQueue())},_=function(){if(n.usingWebAudio){try{"undefined"!=typeof AudioContext?n.ctx=new AudioContext:"undefined"!=typeof webkitAudioContext?n.ctx=new webkitAudioContext:n.usingWebAudio=!1}catch(e){n.usingWebAudio=!1}n.ctx||(n.usingWebAudio=!1);var e=/iP(hone|od|ad)/.test(n._navigator&&n._navigator.platform),o=n._navigator&&n._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/),t=o?parseInt(o[1],10):null;if(e&&t&&t<9){var r=/safari/.test(n._navigator&&n._navigator.userAgent.toLowerCase());n._navigator&&!r&&(n.usingWebAudio=!1)}n.usingWebAudio&&(n.masterGain=void 0===n.ctx.createGain?n.ctx.createGainNode():n.ctx.createGain(),n.masterGain.gain.setValueAtTime(n._muted?0:n._volume,n.ctx.currentTime),n.masterGain.connect(n.ctx.destination)),n._setup()}};"function"==typeof define&&define.amd&&define([],function(){return{Howler:n,Howl:o}}),"undefined"!=typeof exports&&(exports.Howler=n,exports.Howl=o),"undefined"!=typeof global?(global.HowlerGlobal=e,global.Howler=n,global.Howl=o,global.Sound=t):"undefined"!=typeof window&&(window.HowlerGlobal=e,window.Howler=n,window.Howl=o,window.Sound=t)}();
/*!
 * pixi.js-legacy - v5.3.8
 * Compiled Sat, 20 Feb 2021 22:31:43 UTC
 *
 * pixi.js-legacy is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
var PIXI=function(t){"use strict";var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function r(t,e){return t(e={exports:{}},e.exports),e.exports}var i=r(function(t,r){!function(t){var e=t.Promise,i=e&&"resolve"in e&&"reject"in e&&"all"in e&&"race"in e&&function(){var t;return new e(function(e){t=e}),"function"==typeof t}();r?(r.Promise=i?e:T,r.Polyfill=T):i||(t.Promise=T);var n="pending",o="sealed",s="fulfilled",a="rejected",h=function(){};function u(t){return"[object Array]"===Object.prototype.toString.call(t)}var l,c="undefined"!=typeof setImmediate?setImmediate:setTimeout,d=[];function p(){for(var t=0;t<d.length;t++)d[t][0](d[t][1]);d=[],l=!1}function f(t,e){d.push([t,e]),l||(l=!0,c(p,0))}function m(t){var e=t.owner,r=e.state_,i=e.data_,n=t[r],o=t.then;if("function"==typeof n){r=s;try{i=n(i)}catch(t){_(o,t)}}v(o,i)||(r===s&&g(o,i),r===a&&_(o,i))}function v(t,e){var r;try{if(t===e)throw new TypeError("A promises callback cannot return that same promise.");if(e&&("function"==typeof e||"object"==typeof e)){var i=e.then;if("function"==typeof i)return i.call(e,function(i){r||(r=!0,e!==i?g(t,i):y(t,i))},function(e){r||(r=!0,_(t,e))}),!0}}catch(e){return r||_(t,e),!0}return!1}function g(t,e){t!==e&&v(t,e)||y(t,e)}function y(t,e){t.state_===n&&(t.state_=o,t.data_=e,f(b,t))}function _(t,e){t.state_===n&&(t.state_=o,t.data_=e,f(E,t))}function x(t){var e=t.then_;t.then_=void 0;for(var r=0;r<e.length;r++)m(e[r])}function b(t){t.state_=s,x(t)}function E(t){t.state_=a,x(t)}function T(t){if("function"!=typeof t)throw new TypeError("Promise constructor takes a function argument");if(this instanceof T==!1)throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");this.then_=[],function(t,e){function r(t){_(e,t)}try{t(function(t){g(e,t)},r)}catch(t){r(t)}}(t,this)}T.prototype={constructor:T,state_:n,then_:null,data_:void 0,then:function(t,e){var r={owner:this,then:new this.constructor(h),fulfilled:t,rejected:e};return this.state_===s||this.state_===a?f(m,r):this.then_.push(r),r.then},catch:function(t){return this.then(null,t)}},T.all=function(t){if(!u(t))throw new TypeError("You must pass an array to Promise.all().");return new this(function(e,r){var i=[],n=0;function o(t){return n++,function(r){i[t]=r,--n||e(i)}}for(var s,a=0;a<t.length;a++)(s=t[a])&&"function"==typeof s.then?s.then(o(a),r):i[a]=s;n||e(i)})},T.race=function(t){if(!u(t))throw new TypeError("You must pass an array to Promise.race().");return new this(function(e,r){for(var i,n=0;n<t.length;n++)(i=t[n])&&"function"==typeof i.then?i.then(e,r):e(i)})},T.resolve=function(t){return t&&"object"==typeof t&&t.constructor===this?t:new this(function(e){e(t)})},T.reject=function(t){return new this(function(e,r){r(t)})}}("undefined"!=typeof window?window:void 0!==e?e:"undefined"!=typeof self?self:e)}),n=(i.Promise,i.Polyfill),o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;var h=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},r=0;r<10;r++)e["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(e).map(function(t){return e[t]}).join(""))return!1;var i={};return"abcdefghijklmnopqrst".split("").forEach(function(t){i[t]=t}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},i)).join("")}catch(t){return!1}}()?Object.assign:function(t,e){for(var r,i,n=arguments,h=function(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}(t),u=1;u<arguments.length;u++){for(var l in r=Object(n[u]))s.call(r,l)&&(h[l]=r[l]);if(o){i=o(r);for(var c=0;c<i.length;c++)a.call(r,i[c])&&(h[i[c]]=r[i[c]])}}return h};window.Promise||(window.Promise=n),Object.assign||(Object.assign=h);if(Date.now&&Date.prototype.getTime||(Date.now=function(){return(new Date).getTime()}),!window.performance||!window.performance.now){var u=Date.now();window.performance||(window.performance={}),window.performance.now=function(){return Date.now()-u}}for(var l=Date.now(),c=["ms","moz","webkit","o"],d=0;d<c.length&&!window.requestAnimationFrame;++d){var p=c[d];window.requestAnimationFrame=window[p+"RequestAnimationFrame"],window.cancelAnimationFrame=window[p+"CancelAnimationFrame"]||window[p+"CancelRequestAnimationFrame"]}window.requestAnimationFrame||(window.requestAnimationFrame=function(t){if("function"!=typeof t)throw new TypeError(t+"is not a function");var e=Date.now(),r=16+l-e;return r<0&&(r=0),l=e,window.setTimeout(function(){l=Date.now(),t(performance.now())},r)}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(t){return clearTimeout(t)}),Math.sign||(Math.sign=function(t){return 0===(t=Number(t))||isNaN(t)?t:t>0?1:-1}),Number.isInteger||(Number.isInteger=function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t}),window.ArrayBuffer||(window.ArrayBuffer=Array),window.Float32Array||(window.Float32Array=Array),window.Uint32Array||(window.Uint32Array=Array),window.Uint16Array||(window.Uint16Array=Array),window.Uint8Array||(window.Uint8Array=Array),window.Int32Array||(window.Int32Array=Array);var f=/iPhone/i,m=/iPod/i,v=/iPad/i,g=/\biOS-universal(?:.+)Mac\b/i,y=/\bAndroid(?:.+)Mobile\b/i,_=/Android/i,x=/(?:SD4930UR|\bSilk(?:.+)Mobile\b)/i,b=/Silk/i,E=/Windows Phone/i,T=/\bWindows(?:.+)ARM\b/i,S=/BlackBerry/i,w=/BB10/i,P=/Opera Mini/i,I=/\b(CriOS|Chrome)(?:.+)Mobile/i,A=/Mobile(?:.+)Firefox\b/i,O=function(t){return void 0!==t&&"MacIntel"===t.platform&&"number"==typeof t.maxTouchPoints&&t.maxTouchPoints>1&&"undefined"==typeof MSStream};var M=function(t){var e={userAgent:"",platform:"",maxTouchPoints:0};t||"undefined"==typeof navigator?"string"==typeof t?e.userAgent=t:t&&t.userAgent&&(e={userAgent:t.userAgent,platform:t.platform,maxTouchPoints:t.maxTouchPoints||0}):e={userAgent:navigator.userAgent,platform:navigator.platform,maxTouchPoints:navigator.maxTouchPoints||0};var r=e.userAgent,i=r.split("[FBAN");void 0!==i[1]&&(r=i[0]),void 0!==(i=r.split("Twitter"))[1]&&(r=i[0]);var n=function(t){return function(e){return e.test(t)}}(r),o={apple:{phone:n(f)&&!n(E),ipod:n(m),tablet:!n(f)&&(n(v)||O(e))&&!n(E),universal:n(g),device:(n(f)||n(m)||n(v)||n(g)||O(e))&&!n(E)},amazon:{phone:n(x),tablet:!n(x)&&n(b),device:n(x)||n(b)},android:{phone:!n(E)&&n(x)||!n(E)&&n(y),tablet:!n(E)&&!n(x)&&!n(y)&&(n(b)||n(_)),device:!n(E)&&(n(x)||n(b)||n(y)||n(_))||n(/\bokhttp\b/i)},windows:{phone:n(E),tablet:n(T),device:n(E)||n(T)},other:{blackberry:n(S),blackberry10:n(w),opera:n(P),firefox:n(A),chrome:n(I),device:n(S)||n(w)||n(P)||n(A)||n(I)},any:!1,phone:!1,tablet:!1};return o.any=o.apple.device||o.android.device||o.windows.device||o.other.device,o.phone=o.apple.phone||o.android.phone||o.windows.phone,o.tablet=o.apple.tablet||o.android.tablet||o.windows.tablet,o}(window.navigator);var D={MIPMAP_TEXTURES:1,ANISOTROPIC_LEVEL:0,RESOLUTION:1,FILTER_RESOLUTION:1,SPRITE_MAX_TEXTURES:function(t){var e=!0;if(M.tablet||M.phone){var r;M.apple.device&&(r=navigator.userAgent.match(/OS (\d+)_(\d+)?/))&&parseInt(r[1],10)<11&&(e=!1),M.android.device&&(r=navigator.userAgent.match(/Android\s([0-9.]*)/))&&parseInt(r[1],10)<7&&(e=!1)}return e?t:4}(32),SPRITE_BATCH_SIZE:4096,RENDER_OPTIONS:{view:null,antialias:!1,autoDensity:!1,transparent:!1,backgroundColor:0,clearBeforeRender:!0,preserveDrawingBuffer:!1,width:800,height:600,legacy:!1},GC_MODE:0,GC_MAX_IDLE:3600,GC_MAX_CHECK_COUNT:600,WRAP_MODE:33071,SCALE_MODE:1,PRECISION_VERTEX:"highp",PRECISION_FRAGMENT:M.apple.device?"highp":"mediump",CAN_UPLOAD_SAME_BUFFER:!M.apple.device,CREATE_IMAGE_BITMAP:!1,ROUND_PIXELS:!1},C=r(function(t){var e=Object.prototype.hasOwnProperty,r="~";function i(){}function n(t,e,r){this.fn=t,this.context=e,this.once=r||!1}function o(t,e,i,o,s){if("function"!=typeof i)throw new TypeError("The listener must be a function");var a=new n(i,o||t,s),h=r?r+e:e;return t._events[h]?t._events[h].fn?t._events[h]=[t._events[h],a]:t._events[h].push(a):(t._events[h]=a,t._eventsCount++),t}function s(t,e){0==--t._eventsCount?t._events=new i:delete t._events[e]}function a(){this._events=new i,this._eventsCount=0}Object.create&&(i.prototype=Object.create(null),(new i).__proto__||(r=!1)),a.prototype.eventNames=function(){var t,i,n=[];if(0===this._eventsCount)return n;for(i in t=this._events)e.call(t,i)&&n.push(r?i.slice(1):i);return Object.getOwnPropertySymbols?n.concat(Object.getOwnPropertySymbols(t)):n},a.prototype.listeners=function(t){var e=r?r+t:t,i=this._events[e];if(!i)return[];if(i.fn)return[i.fn];for(var n=0,o=i.length,s=new Array(o);n<o;n++)s[n]=i[n].fn;return s},a.prototype.listenerCount=function(t){var e=r?r+t:t,i=this._events[e];return i?i.fn?1:i.length:0},a.prototype.emit=function(t,e,i,n,o,s){var a=arguments,h=r?r+t:t;if(!this._events[h])return!1;var u,l,c=this._events[h],d=arguments.length;if(c.fn){switch(c.once&&this.removeListener(t,c.fn,void 0,!0),d){case 1:return c.fn.call(c.context),!0;case 2:return c.fn.call(c.context,e),!0;case 3:return c.fn.call(c.context,e,i),!0;case 4:return c.fn.call(c.context,e,i,n),!0;case 5:return c.fn.call(c.context,e,i,n,o),!0;case 6:return c.fn.call(c.context,e,i,n,o,s),!0}for(l=1,u=new Array(d-1);l<d;l++)u[l-1]=a[l];c.fn.apply(c.context,u)}else{var p,f=c.length;for(l=0;l<f;l++)switch(c[l].once&&this.removeListener(t,c[l].fn,void 0,!0),d){case 1:c[l].fn.call(c[l].context);break;case 2:c[l].fn.call(c[l].context,e);break;case 3:c[l].fn.call(c[l].context,e,i);break;case 4:c[l].fn.call(c[l].context,e,i,n);break;default:if(!u)for(p=1,u=new Array(d-1);p<d;p++)u[p-1]=a[p];c[l].fn.apply(c[l].context,u)}}return!0},a.prototype.on=function(t,e,r){return o(this,t,e,r,!1)},a.prototype.once=function(t,e,r){return o(this,t,e,r,!0)},a.prototype.removeListener=function(t,e,i,n){var o=r?r+t:t;if(!this._events[o])return this;if(!e)return s(this,o),this;var a=this._events[o];if(a.fn)a.fn!==e||n&&!a.once||i&&a.context!==i||s(this,o);else{for(var h=0,u=[],l=a.length;h<l;h++)(a[h].fn!==e||n&&!a[h].once||i&&a[h].context!==i)&&u.push(a[h]);u.length?this._events[o]=1===u.length?u[0]:u:s(this,o)}return this},a.prototype.removeAllListeners=function(t){var e;return t?(e=r?r+t:t,this._events[e]&&s(this,e)):(this._events=new i,this._eventsCount=0),this},a.prototype.off=a.prototype.removeListener,a.prototype.addListener=a.prototype.on,a.prefixed=r,a.EventEmitter=a,t.exports=a}),R=N,L=N;function N(t,e,r){r=r||2;var i,n,o,s,a,h,u,l=e&&e.length,c=l?e[0]*r:t.length,d=F(t,0,c,r,!0),p=[];if(!d||d.next===d.prev)return p;if(l&&(d=function(t,e,r,i){var n,o,s,a,h,u=[];for(n=0,o=e.length;n<o;n++)s=e[n]*i,a=n<o-1?e[n+1]*i:t.length,(h=F(t,s,a,i,!1))===h.next&&(h.steiner=!0),u.push(W(h));for(u.sort(G),n=0;n<u.length;n++)Y(u[n],r),r=B(r,r.next);return r}(t,e,d,r)),t.length>80*r){i=o=t[0],n=s=t[1];for(var f=r;f<c;f+=r)(a=t[f])<i&&(i=a),(h=t[f+1])<n&&(n=h),a>o&&(o=a),h>s&&(s=h);u=0!==(u=Math.max(o-i,s-n))?1/u:0}return U(d,p,r,i,n,u),p}function F(t,e,r,i,n){var o,s;if(n===st(t,e,r,i)>0)for(o=e;o<r;o+=i)s=it(o,t[o],t[o+1],s);else for(o=r-i;o>=e;o-=i)s=it(o,t[o],t[o+1],s);return s&&J(s,s.next)&&(nt(s),s=s.next),s}function B(t,e){if(!t)return t;e||(e=t);var r,i=t;do{if(r=!1,i.steiner||!J(i,i.next)&&0!==Z(i.prev,i,i.next))i=i.next;else{if(nt(i),(i=e=i.prev)===i.next)break;r=!0}}while(r||i!==e);return e}function U(t,e,r,i,n,o,s){if(t){!s&&o&&function(t,e,r,i){var n=t;do{null===n.z&&(n.z=V(n.x,n.y,e,r,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next}while(n!==t);n.prevZ.nextZ=null,n.prevZ=null,function(t){var e,r,i,n,o,s,a,h,u=1;do{for(r=t,t=null,o=null,s=0;r;){for(s++,i=r,a=0,e=0;e<u&&(a++,i=i.nextZ);e++);for(h=u;a>0||h>0&&i;)0!==a&&(0===h||!i||r.z<=i.z)?(n=r,r=r.nextZ,a--):(n=i,i=i.nextZ,h--),o?o.nextZ=n:t=n,n.prevZ=o,o=n;r=i}o.nextZ=null,u*=2}while(s>1)}(n)}(t,i,n,o);for(var a,h,u=t;t.prev!==t.next;)if(a=t.prev,h=t.next,o?X(t,i,n,o):k(t))e.push(a.i/r),e.push(t.i/r),e.push(h.i/r),nt(t),t=h.next,u=h.next;else if((t=h)===u){s?1===s?U(t=j(B(t),e,r),e,r,i,n,o,2):2===s&&H(t,e,r,i,n,o):U(B(t),e,r,i,n,o,1);break}}}function k(t){var e=t.prev,r=t,i=t.next;if(Z(e,r,i)>=0)return!1;for(var n=t.next.next;n!==t.prev;){if(q(e.x,e.y,r.x,r.y,i.x,i.y,n.x,n.y)&&Z(n.prev,n,n.next)>=0)return!1;n=n.next}return!0}function X(t,e,r,i){var n=t.prev,o=t,s=t.next;if(Z(n,o,s)>=0)return!1;for(var a=n.x<o.x?n.x<s.x?n.x:s.x:o.x<s.x?o.x:s.x,h=n.y<o.y?n.y<s.y?n.y:s.y:o.y<s.y?o.y:s.y,u=n.x>o.x?n.x>s.x?n.x:s.x:o.x>s.x?o.x:s.x,l=n.y>o.y?n.y>s.y?n.y:s.y:o.y>s.y?o.y:s.y,c=V(a,h,e,r,i),d=V(u,l,e,r,i),p=t.prevZ,f=t.nextZ;p&&p.z>=c&&f&&f.z<=d;){if(p!==t.prev&&p!==t.next&&q(n.x,n.y,o.x,o.y,s.x,s.y,p.x,p.y)&&Z(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==t.prev&&f!==t.next&&q(n.x,n.y,o.x,o.y,s.x,s.y,f.x,f.y)&&Z(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;p&&p.z>=c;){if(p!==t.prev&&p!==t.next&&q(n.x,n.y,o.x,o.y,s.x,s.y,p.x,p.y)&&Z(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==t.prev&&f!==t.next&&q(n.x,n.y,o.x,o.y,s.x,s.y,f.x,f.y)&&Z(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function j(t,e,r){var i=t;do{var n=i.prev,o=i.next.next;!J(n,o)&&Q(n,i,i.next,o)&&et(n,o)&&et(o,n)&&(e.push(n.i/r),e.push(i.i/r),e.push(o.i/r),nt(i),nt(i.next),i=t=o),i=i.next}while(i!==t);return B(i)}function H(t,e,r,i,n,o){var s=t;do{for(var a=s.next.next;a!==s.prev;){if(s.i!==a.i&&K(s,a)){var h=rt(s,a);return s=B(s,s.next),h=B(h,h.next),U(s,e,r,i,n,o),void U(h,e,r,i,n,o)}a=a.next}s=s.next}while(s!==t)}function G(t,e){return t.x-e.x}function Y(t,e){if(e=function(t,e){var r,i=e,n=t.x,o=t.y,s=-1/0;do{if(o<=i.y&&o>=i.next.y&&i.next.y!==i.y){var a=i.x+(o-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(a<=n&&a>s){if(s=a,a===n){if(o===i.y)return i;if(o===i.next.y)return i.next}r=i.x<i.next.x?i:i.next}}i=i.next}while(i!==e);if(!r)return null;if(n===s)return r;var h,u=r,l=r.x,c=r.y,d=1/0;i=r;do{n>=i.x&&i.x>=l&&n!==i.x&&q(o<c?n:s,o,l,c,o<c?s:n,o,i.x,i.y)&&(h=Math.abs(o-i.y)/(n-i.x),et(i,t)&&(h<d||h===d&&(i.x>r.x||i.x===r.x&&z(r,i)))&&(r=i,d=h)),i=i.next}while(i!==u);return r}(t,e)){var r=rt(e,t);B(e,e.next),B(r,r.next)}}function z(t,e){return Z(t.prev,t,e.prev)<0&&Z(e.next,t,t.next)<0}function V(t,e,r,i,n){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*n)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*n)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function W(t){var e=t,r=t;do{(e.x<r.x||e.x===r.x&&e.y<r.y)&&(r=e),e=e.next}while(e!==t);return r}function q(t,e,r,i,n,o,s,a){return(n-s)*(e-a)-(t-s)*(o-a)>=0&&(t-s)*(i-a)-(r-s)*(e-a)>=0&&(r-s)*(o-a)-(n-s)*(i-a)>=0}function K(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){var r=t;do{if(r.i!==t.i&&r.next.i!==t.i&&r.i!==e.i&&r.next.i!==e.i&&Q(r,r.next,t,e))return!0;r=r.next}while(r!==t);return!1}(t,e)&&(et(t,e)&&et(e,t)&&function(t,e){var r=t,i=!1,n=(t.x+e.x)/2,o=(t.y+e.y)/2;do{r.y>o!=r.next.y>o&&r.next.y!==r.y&&n<(r.next.x-r.x)*(o-r.y)/(r.next.y-r.y)+r.x&&(i=!i),r=r.next}while(r!==t);return i}(t,e)&&(Z(t.prev,t,e.prev)||Z(t,e.prev,e))||J(t,e)&&Z(t.prev,t,t.next)>0&&Z(e.prev,e,e.next)>0)}function Z(t,e,r){return(e.y-t.y)*(r.x-e.x)-(e.x-t.x)*(r.y-e.y)}function J(t,e){return t.x===e.x&&t.y===e.y}function Q(t,e,r,i){var n=tt(Z(t,e,r)),o=tt(Z(t,e,i)),s=tt(Z(r,i,t)),a=tt(Z(r,i,e));return n!==o&&s!==a||(!(0!==n||!$(t,r,e))||(!(0!==o||!$(t,i,e))||(!(0!==s||!$(r,t,i))||!(0!==a||!$(r,e,i)))))}function $(t,e,r){return e.x<=Math.max(t.x,r.x)&&e.x>=Math.min(t.x,r.x)&&e.y<=Math.max(t.y,r.y)&&e.y>=Math.min(t.y,r.y)}function tt(t){return t>0?1:t<0?-1:0}function et(t,e){return Z(t.prev,t,t.next)<0?Z(t,e,t.next)>=0&&Z(t,t.prev,e)>=0:Z(t,e,t.prev)<0||Z(t,t.next,e)<0}function rt(t,e){var r=new ot(t.i,t.x,t.y),i=new ot(e.i,e.x,e.y),n=t.next,o=e.prev;return t.next=e,e.prev=t,r.next=n,n.prev=r,i.next=r,r.prev=i,o.next=i,i.prev=o,i}function it(t,e,r,i){var n=new ot(t,e,r);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function nt(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function ot(t,e,r){this.i=t,this.x=e,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function st(t,e,r,i){for(var n=0,o=e,s=r-i;o<r;o+=i)n+=(t[s]-t[o])*(t[o+1]+t[s+1]),s=o;return n}N.deviation=function(t,e,r,i){var n=e&&e.length,o=n?e[0]*r:t.length,s=Math.abs(st(t,0,o,r));if(n)for(var a=0,h=e.length;a<h;a++){var u=e[a]*r,l=a<h-1?e[a+1]*r:t.length;s-=Math.abs(st(t,u,l,r))}var c=0;for(a=0;a<i.length;a+=3){var d=i[a]*r,p=i[a+1]*r,f=i[a+2]*r;c+=Math.abs((t[d]-t[f])*(t[p+1]-t[d+1])-(t[d]-t[p])*(t[f+1]-t[d+1]))}return 0===s&&0===c?0:Math.abs((c-s)/s)},N.flatten=function(t){for(var e=t[0][0].length,r={vertices:[],holes:[],dimensions:e},i=0,n=0;n<t.length;n++){for(var o=0;o<t[n].length;o++)for(var s=0;s<e;s++)r.vertices.push(t[n][o][s]);n>0&&(i+=t[n-1].length,r.holes.push(i))}return r},R.default=L;var at=r(function(t,r){!function(i){var n=r&&!r.nodeType&&r,o=t&&!t.nodeType&&t,s="object"==typeof e&&e;s.global!==s&&s.window!==s&&s.self!==s||(i=s);var a,h,u=2147483647,l=36,c=1,d=26,p=38,f=700,m=72,v=128,g="-",y=/^xn--/,_=/[^\x20-\x7E]/,x=/[\x2E\u3002\uFF0E\uFF61]/g,b={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},E=l-c,T=Math.floor,S=String.fromCharCode;function w(t){throw RangeError(b[t])}function P(t,e){for(var r=t.length,i=[];r--;)i[r]=e(t[r]);return i}function I(t,e){var r=t.split("@"),i="";return r.length>1&&(i=r[0]+"@",t=r[1]),i+P((t=t.replace(x,".")).split("."),e).join(".")}function A(t){for(var e,r,i=[],n=0,o=t.length;n<o;)(e=t.charCodeAt(n++))>=55296&&e<=56319&&n<o?56320==(64512&(r=t.charCodeAt(n++)))?i.push(((1023&e)<<10)+(1023&r)+65536):(i.push(e),n--):i.push(e);return i}function O(t){return P(t,function(t){var e="";return t>65535&&(e+=S((t-=65536)>>>10&1023|55296),t=56320|1023&t),e+=S(t)}).join("")}function M(t,e){return t+22+75*(t<26)-((0!=e)<<5)}function D(t,e,r){var i=0;for(t=r?T(t/f):t>>1,t+=T(t/e);t>E*d>>1;i+=l)t=T(t/E);return T(i+(E+1)*t/(t+p))}function C(t){var e,r,i,n,o,s,a,h,p,f,y,_=[],x=t.length,b=0,E=v,S=m;for((r=t.lastIndexOf(g))<0&&(r=0),i=0;i<r;++i)t.charCodeAt(i)>=128&&w("not-basic"),_.push(t.charCodeAt(i));for(n=r>0?r+1:0;n<x;){for(o=b,s=1,a=l;n>=x&&w("invalid-input"),((h=(y=t.charCodeAt(n++))-48<10?y-22:y-65<26?y-65:y-97<26?y-97:l)>=l||h>T((u-b)/s))&&w("overflow"),b+=h*s,!(h<(p=a<=S?c:a>=S+d?d:a-S));a+=l)s>T(u/(f=l-p))&&w("overflow"),s*=f;S=D(b-o,e=_.length+1,0==o),T(b/e)>u-E&&w("overflow"),E+=T(b/e),b%=e,_.splice(b++,0,E)}return O(_)}function R(t){var e,r,i,n,o,s,a,h,p,f,y,_,x,b,E,P=[];for(_=(t=A(t)).length,e=v,r=0,o=m,s=0;s<_;++s)(y=t[s])<128&&P.push(S(y));for(i=n=P.length,n&&P.push(g);i<_;){for(a=u,s=0;s<_;++s)(y=t[s])>=e&&y<a&&(a=y);for(a-e>T((u-r)/(x=i+1))&&w("overflow"),r+=(a-e)*x,e=a,s=0;s<_;++s)if((y=t[s])<e&&++r>u&&w("overflow"),y==e){for(h=r,p=l;!(h<(f=p<=o?c:p>=o+d?d:p-o));p+=l)E=h-f,b=l-f,P.push(S(M(f+E%b,0))),h=T(E/b);P.push(S(M(h,0))),o=D(r,x,i==n),r=0,++i}++r,++e}return P.join("")}if(a={version:"1.3.2",ucs2:{decode:A,encode:O},decode:C,encode:R,toASCII:function(t){return I(t,function(t){return _.test(t)?"xn--"+R(t):t})},toUnicode:function(t){return I(t,function(t){return y.test(t)?C(t.slice(4).toLowerCase()):t})}},n&&o)if(t.exports==n)o.exports=a;else for(h in a)a.hasOwnProperty(h)&&(n[h]=a[h]);else i.punycode=a}(e)}),ht={isString:function(t){return"string"==typeof t},isObject:function(t){return"object"==typeof t&&null!==t},isNull:function(t){return null===t},isNullOrUndefined:function(t){return null==t}};ht.isString,ht.isObject,ht.isNull,ht.isNullOrUndefined;function ut(t,e){return Object.prototype.hasOwnProperty.call(t,e)}var lt=function(t,e,r,i){e=e||"&",r=r||"=";var n={};if("string"!=typeof t||0===t.length)return n;var o=/\+/g;t=t.split(e);var s=1e3;i&&"number"==typeof i.maxKeys&&(s=i.maxKeys);var a=t.length;s>0&&a>s&&(a=s);for(var h=0;h<a;++h){var u,l,c,d,p=t[h].replace(o,"%20"),f=p.indexOf(r);f>=0?(u=p.substr(0,f),l=p.substr(f+1)):(u=p,l=""),c=decodeURIComponent(u),d=decodeURIComponent(l),ut(n,c)?Array.isArray(n[c])?n[c].push(d):n[c]=[n[c],d]:n[c]=d}return n},ct=function(t){switch(typeof t){case"string":return t;case"boolean":return t?"true":"false";case"number":return isFinite(t)?t:"";default:return""}},dt=function(t,e,r,i){return e=e||"&",r=r||"=",null===t&&(t=void 0),"object"==typeof t?Object.keys(t).map(function(i){var n=encodeURIComponent(ct(i))+r;return Array.isArray(t[i])?t[i].map(function(t){return n+encodeURIComponent(ct(t))}).join(e):n+encodeURIComponent(ct(t[i]))}).join(e):i?encodeURIComponent(ct(i))+r+encodeURIComponent(ct(t)):""},pt=r(function(t,e){e.decode=e.parse=lt,e.encode=e.stringify=dt}),ft=(pt.decode,pt.parse,pt.encode,pt.stringify,Ct),mt=function(t,e){return Ct(t,!1,!0).resolve(e)},vt=function(t,e){if(!t)return e;return Ct(t,!1,!0).resolveObject(e)},gt=function(t){ht.isString(t)&&(t=Ct(t));if(!(t instanceof _t))return _t.prototype.format.call(t);return t.format()},yt=_t;function _t(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}var xt=/^([a-z0-9.+-]+:)/i,bt=/:[0-9]*$/,Et=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,Tt=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),St=["'"].concat(Tt),wt=["%","/","?",";","#"].concat(St),Pt=["/","?","#"],It=/^[+a-z0-9A-Z_-]{0,63}$/,At=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,Ot={javascript:!0,"javascript:":!0},Mt={javascript:!0,"javascript:":!0},Dt={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0};function Ct(t,e,r){if(t&&ht.isObject(t)&&t instanceof _t)return t;var i=new _t;return i.parse(t,e,r),i}_t.prototype.parse=function(t,e,r){if(!ht.isString(t))throw new TypeError("Parameter 'url' must be a string, not "+typeof t);var i=t.indexOf("?"),n=-1!==i&&i<t.indexOf("#")?"?":"#",o=t.split(n);o[0]=o[0].replace(/\\/g,"/");var s=t=o.join(n);if(s=s.trim(),!r&&1===t.split("#").length){var a=Et.exec(s);if(a)return this.path=s,this.href=s,this.pathname=a[1],a[2]?(this.search=a[2],this.query=e?pt.parse(this.search.substr(1)):this.search.substr(1)):e&&(this.search="",this.query={}),this}var h=xt.exec(s);if(h){var u=(h=h[0]).toLowerCase();this.protocol=u,s=s.substr(h.length)}if(r||h||s.match(/^\/\/[^@\/]+@[^@\/]+/)){var l="//"===s.substr(0,2);!l||h&&Mt[h]||(s=s.substr(2),this.slashes=!0)}if(!Mt[h]&&(l||h&&!Dt[h])){for(var c,d,p=-1,f=0;f<Pt.length;f++){-1!==(m=s.indexOf(Pt[f]))&&(-1===p||m<p)&&(p=m)}-1!==(d=-1===p?s.lastIndexOf("@"):s.lastIndexOf("@",p))&&(c=s.slice(0,d),s=s.slice(d+1),this.auth=decodeURIComponent(c)),p=-1;for(f=0;f<wt.length;f++){var m;-1!==(m=s.indexOf(wt[f]))&&(-1===p||m<p)&&(p=m)}-1===p&&(p=s.length),this.host=s.slice(0,p),s=s.slice(p),this.parseHost(),this.hostname=this.hostname||"";var v="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!v)for(var g=this.hostname.split(/\./),y=(f=0,g.length);f<y;f++){var _=g[f];if(_&&!_.match(It)){for(var x="",b=0,E=_.length;b<E;b++)_.charCodeAt(b)>127?x+="x":x+=_[b];if(!x.match(It)){var T=g.slice(0,f),S=g.slice(f+1),w=_.match(At);w&&(T.push(w[1]),S.unshift(w[2])),S.length&&(s="/"+S.join(".")+s),this.hostname=T.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),v||(this.hostname=at.toASCII(this.hostname));var P=this.port?":"+this.port:"",I=this.hostname||"";this.host=I+P,this.href+=this.host,v&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==s[0]&&(s="/"+s))}if(!Ot[u])for(f=0,y=St.length;f<y;f++){var A=St[f];if(-1!==s.indexOf(A)){var O=encodeURIComponent(A);O===A&&(O=escape(A)),s=s.split(A).join(O)}}var M=s.indexOf("#");-1!==M&&(this.hash=s.substr(M),s=s.slice(0,M));var D=s.indexOf("?");if(-1!==D?(this.search=s.substr(D),this.query=s.substr(D+1),e&&(this.query=pt.parse(this.query)),s=s.slice(0,D)):e&&(this.search="",this.query={}),s&&(this.pathname=s),Dt[u]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){P=this.pathname||"";var C=this.search||"";this.path=P+C}return this.href=this.format(),this},_t.prototype.format=function(){var t=this.auth||"";t&&(t=(t=encodeURIComponent(t)).replace(/%3A/i,":"),t+="@");var e=this.protocol||"",r=this.pathname||"",i=this.hash||"",n=!1,o="";this.host?n=t+this.host:this.hostname&&(n=t+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(n+=":"+this.port)),this.query&&ht.isObject(this.query)&&Object.keys(this.query).length&&(o=pt.stringify(this.query));var s=this.search||o&&"?"+o||"";return e&&":"!==e.substr(-1)&&(e+=":"),this.slashes||(!e||Dt[e])&&!1!==n?(n="//"+(n||""),r&&"/"!==r.charAt(0)&&(r="/"+r)):n||(n=""),i&&"#"!==i.charAt(0)&&(i="#"+i),s&&"?"!==s.charAt(0)&&(s="?"+s),e+n+(r=r.replace(/[?#]/g,function(t){return encodeURIComponent(t)}))+(s=s.replace("#","%23"))+i},_t.prototype.resolve=function(t){return this.resolveObject(Ct(t,!1,!0)).format()},_t.prototype.resolveObject=function(t){if(ht.isString(t)){var e=new _t;e.parse(t,!1,!0),t=e}for(var r=new _t,i=Object.keys(this),n=0;n<i.length;n++){var o=i[n];r[o]=this[o]}if(r.hash=t.hash,""===t.href)return r.href=r.format(),r;if(t.slashes&&!t.protocol){for(var s=Object.keys(t),a=0;a<s.length;a++){var h=s[a];"protocol"!==h&&(r[h]=t[h])}return Dt[r.protocol]&&r.hostname&&!r.pathname&&(r.path=r.pathname="/"),r.href=r.format(),r}if(t.protocol&&t.protocol!==r.protocol){if(!Dt[t.protocol]){for(var u=Object.keys(t),l=0;l<u.length;l++){var c=u[l];r[c]=t[c]}return r.href=r.format(),r}if(r.protocol=t.protocol,t.host||Mt[t.protocol])r.pathname=t.pathname;else{for(var d=(t.pathname||"").split("/");d.length&&!(t.host=d.shift()););t.host||(t.host=""),t.hostname||(t.hostname=""),""!==d[0]&&d.unshift(""),d.length<2&&d.unshift(""),r.pathname=d.join("/")}if(r.search=t.search,r.query=t.query,r.host=t.host||"",r.auth=t.auth,r.hostname=t.hostname||t.host,r.port=t.port,r.pathname||r.search){var p=r.pathname||"",f=r.search||"";r.path=p+f}return r.slashes=r.slashes||t.slashes,r.href=r.format(),r}var m=r.pathname&&"/"===r.pathname.charAt(0),v=t.host||t.pathname&&"/"===t.pathname.charAt(0),g=v||m||r.host&&t.pathname,y=g,_=r.pathname&&r.pathname.split("/")||[],x=(d=t.pathname&&t.pathname.split("/")||[],r.protocol&&!Dt[r.protocol]);if(x&&(r.hostname="",r.port=null,r.host&&(""===_[0]?_[0]=r.host:_.unshift(r.host)),r.host="",t.protocol&&(t.hostname=null,t.port=null,t.host&&(""===d[0]?d[0]=t.host:d.unshift(t.host)),t.host=null),g=g&&(""===d[0]||""===_[0])),v)r.host=t.host||""===t.host?t.host:r.host,r.hostname=t.hostname||""===t.hostname?t.hostname:r.hostname,r.search=t.search,r.query=t.query,_=d;else if(d.length)_||(_=[]),_.pop(),_=_.concat(d),r.search=t.search,r.query=t.query;else if(!ht.isNullOrUndefined(t.search)){if(x)r.hostname=r.host=_.shift(),(w=!!(r.host&&r.host.indexOf("@")>0)&&r.host.split("@"))&&(r.auth=w.shift(),r.host=r.hostname=w.shift());return r.search=t.search,r.query=t.query,ht.isNull(r.pathname)&&ht.isNull(r.search)||(r.path=(r.pathname?r.pathname:"")+(r.search?r.search:"")),r.href=r.format(),r}if(!_.length)return r.pathname=null,r.search?r.path="/"+r.search:r.path=null,r.href=r.format(),r;for(var b=_.slice(-1)[0],E=(r.host||t.host||_.length>1)&&("."===b||".."===b)||""===b,T=0,S=_.length;S>=0;S--)"."===(b=_[S])?_.splice(S,1):".."===b?(_.splice(S,1),T++):T&&(_.splice(S,1),T--);if(!g&&!y)for(;T--;T)_.unshift("..");!g||""===_[0]||_[0]&&"/"===_[0].charAt(0)||_.unshift(""),E&&"/"!==_.join("/").substr(-1)&&_.push("");var w,P=""===_[0]||_[0]&&"/"===_[0].charAt(0);x&&(r.hostname=r.host=P?"":_.length?_.shift():"",(w=!!(r.host&&r.host.indexOf("@")>0)&&r.host.split("@"))&&(r.auth=w.shift(),r.host=r.hostname=w.shift()));return(g=g||r.host&&_.length)&&!P&&_.unshift(""),_.length?r.pathname=_.join("/"):(r.pathname=null,r.path=null),ht.isNull(r.pathname)&&ht.isNull(r.search)||(r.path=(r.pathname?r.pathname:"")+(r.search?r.search:"")),r.auth=t.auth||r.auth,r.slashes=r.slashes||t.slashes,r.href=r.format(),r},_t.prototype.parseHost=function(){var t=this.host,e=bt.exec(t);e&&(":"!==(e=e[0])&&(this.port=e.substr(1)),t=t.substr(0,t.length-e.length)),t&&(this.hostname=t)};var Rt={parse:ft,resolve:mt,resolveObject:vt,format:gt,Url:yt};!function(t){t[t.WEBGL_LEGACY=0]="WEBGL_LEGACY",t[t.WEBGL=1]="WEBGL",t[t.WEBGL2=2]="WEBGL2"}(t.ENV||(t.ENV={})),function(t){t[t.UNKNOWN=0]="UNKNOWN",t[t.WEBGL=1]="WEBGL",t[t.CANVAS=2]="CANVAS"}(t.RENDERER_TYPE||(t.RENDERER_TYPE={})),function(t){t[t.COLOR=16384]="COLOR",t[t.DEPTH=256]="DEPTH",t[t.STENCIL=1024]="STENCIL"}(t.BUFFER_BITS||(t.BUFFER_BITS={})),function(t){t[t.NORMAL=0]="NORMAL",t[t.ADD=1]="ADD",t[t.MULTIPLY=2]="MULTIPLY",t[t.SCREEN=3]="SCREEN",t[t.OVERLAY=4]="OVERLAY",t[t.DARKEN=5]="DARKEN",t[t.LIGHTEN=6]="LIGHTEN",t[t.COLOR_DODGE=7]="COLOR_DODGE",t[t.COLOR_BURN=8]="COLOR_BURN",t[t.HARD_LIGHT=9]="HARD_LIGHT",t[t.SOFT_LIGHT=10]="SOFT_LIGHT",t[t.DIFFERENCE=11]="DIFFERENCE",t[t.EXCLUSION=12]="EXCLUSION",t[t.HUE=13]="HUE",t[t.SATURATION=14]="SATURATION",t[t.COLOR=15]="COLOR",t[t.LUMINOSITY=16]="LUMINOSITY",t[t.NORMAL_NPM=17]="NORMAL_NPM",t[t.ADD_NPM=18]="ADD_NPM",t[t.SCREEN_NPM=19]="SCREEN_NPM",t[t.NONE=20]="NONE",t[t.SRC_OVER=0]="SRC_OVER",t[t.SRC_IN=21]="SRC_IN",t[t.SRC_OUT=22]="SRC_OUT",t[t.SRC_ATOP=23]="SRC_ATOP",t[t.DST_OVER=24]="DST_OVER",t[t.DST_IN=25]="DST_IN",t[t.DST_OUT=26]="DST_OUT",t[t.DST_ATOP=27]="DST_ATOP",t[t.ERASE=26]="ERASE",t[t.SUBTRACT=28]="SUBTRACT",t[t.XOR=29]="XOR"}(t.BLEND_MODES||(t.BLEND_MODES={})),function(t){t[t.POINTS=0]="POINTS",t[t.LINES=1]="LINES",t[t.LINE_LOOP=2]="LINE_LOOP",t[t.LINE_STRIP=3]="LINE_STRIP",t[t.TRIANGLES=4]="TRIANGLES",t[t.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",t[t.TRIANGLE_FAN=6]="TRIANGLE_FAN"}(t.DRAW_MODES||(t.DRAW_MODES={})),function(t){t[t.RGBA=6408]="RGBA",t[t.RGB=6407]="RGB",t[t.ALPHA=6406]="ALPHA",t[t.LUMINANCE=6409]="LUMINANCE",t[t.LUMINANCE_ALPHA=6410]="LUMINANCE_ALPHA",t[t.DEPTH_COMPONENT=6402]="DEPTH_COMPONENT",t[t.DEPTH_STENCIL=34041]="DEPTH_STENCIL"}(t.FORMATS||(t.FORMATS={})),function(t){t[t.TEXTURE_2D=3553]="TEXTURE_2D",t[t.TEXTURE_CUBE_MAP=34067]="TEXTURE_CUBE_MAP",t[t.TEXTURE_2D_ARRAY=35866]="TEXTURE_2D_ARRAY",t[t.TEXTURE_CUBE_MAP_POSITIVE_X=34069]="TEXTURE_CUBE_MAP_POSITIVE_X",t[t.TEXTURE_CUBE_MAP_NEGATIVE_X=34070]="TEXTURE_CUBE_MAP_NEGATIVE_X",t[t.TEXTURE_CUBE_MAP_POSITIVE_Y=34071]="TEXTURE_CUBE_MAP_POSITIVE_Y",t[t.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072]="TEXTURE_CUBE_MAP_NEGATIVE_Y",t[t.TEXTURE_CUBE_MAP_POSITIVE_Z=34073]="TEXTURE_CUBE_MAP_POSITIVE_Z",t[t.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074]="TEXTURE_CUBE_MAP_NEGATIVE_Z"}(t.TARGETS||(t.TARGETS={})),function(t){t[t.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",t[t.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",t[t.UNSIGNED_SHORT_5_6_5=33635]="UNSIGNED_SHORT_5_6_5",t[t.UNSIGNED_SHORT_4_4_4_4=32819]="UNSIGNED_SHORT_4_4_4_4",t[t.UNSIGNED_SHORT_5_5_5_1=32820]="UNSIGNED_SHORT_5_5_5_1",t[t.FLOAT=5126]="FLOAT",t[t.HALF_FLOAT=36193]="HALF_FLOAT"}(t.TYPES||(t.TYPES={})),function(t){t[t.NEAREST=0]="NEAREST",t[t.LINEAR=1]="LINEAR"}(t.SCALE_MODES||(t.SCALE_MODES={})),function(t){t[t.CLAMP=33071]="CLAMP",t[t.REPEAT=10497]="REPEAT",t[t.MIRRORED_REPEAT=33648]="MIRRORED_REPEAT"}(t.WRAP_MODES||(t.WRAP_MODES={})),function(t){t[t.OFF=0]="OFF",t[t.POW2=1]="POW2",t[t.ON=2]="ON"}(t.MIPMAP_MODES||(t.MIPMAP_MODES={})),function(t){t[t.NPM=0]="NPM",t[t.UNPACK=1]="UNPACK",t[t.PMA=2]="PMA",t[t.NO_PREMULTIPLIED_ALPHA=0]="NO_PREMULTIPLIED_ALPHA",t[t.PREMULTIPLY_ON_UPLOAD=1]="PREMULTIPLY_ON_UPLOAD",t[t.PREMULTIPLY_ALPHA=2]="PREMULTIPLY_ALPHA"}(t.ALPHA_MODES||(t.ALPHA_MODES={})),function(t){t[t.NO=0]="NO",t[t.YES=1]="YES",t[t.AUTO=2]="AUTO",t[t.BLEND=0]="BLEND",t[t.CLEAR=1]="CLEAR",t[t.BLIT=2]="BLIT"}(t.CLEAR_MODES||(t.CLEAR_MODES={})),function(t){t[t.AUTO=0]="AUTO",t[t.MANUAL=1]="MANUAL"}(t.GC_MODES||(t.GC_MODES={})),function(t){t.LOW="lowp",t.MEDIUM="mediump",t.HIGH="highp"}(t.PRECISION||(t.PRECISION={})),function(t){t[t.NONE=0]="NONE",t[t.SCISSOR=1]="SCISSOR",t[t.STENCIL=2]="STENCIL",t[t.SPRITE=3]="SPRITE"}(t.MASK_TYPES||(t.MASK_TYPES={})),function(t){t[t.NONE=0]="NONE",t[t.LOW=2]="LOW",t[t.MEDIUM=4]="MEDIUM",t[t.HIGH=8]="HIGH"}(t.MSAA_QUALITY||(t.MSAA_QUALITY={})),D.RETINA_PREFIX=/@([0-9\.]+)x/,D.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT=!0;var Lt,Nt=!1,Ft="5.3.8";function Bt(t){var e;if(!Nt){if(navigator.userAgent.toLowerCase().indexOf("chrome")>-1){var r=["\n %c %c %c PixiJS "+Ft+" - ✰ "+t+" ✰  %c  %c  http://www.pixijs.com/  %c %c ♥%c♥%c♥ \n\n","background: #ff66a5; padding:5px 0;","background: #ff66a5; padding:5px 0;","color: #ff66a5; background: #030307; padding:5px 0;","background: #ff66a5; padding:5px 0;","background: #ffc3dc; padding:5px 0;","background: #ff66a5; padding:5px 0;","color: #ff2424; background: #fff; padding:5px 0;","color: #ff2424; background: #fff; padding:5px 0;","color: #ff2424; background: #fff; padding:5px 0;"];(e=window.console).log.apply(e,r)}else window.console&&window.console.log("PixiJS "+Ft+" - "+t+" - http://www.pixijs.com/");Nt=!0}}function Ut(){return void 0===Lt&&(Lt=function(){var t={stencil:!0,failIfMajorPerformanceCaveat:D.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT};try{if(!window.WebGLRenderingContext)return!1;var e=document.createElement("canvas"),r=e.getContext("webgl",t)||e.getContext("experimental-webgl",t),i=!(!r||!r.getContextAttributes().stencil);if(r){var n=r.getExtension("WEBGL_lose_context");n&&n.loseContext()}return r=null,i}catch(t){return!1}}()),Lt}function kt(t,e){return void 0===e&&(e=[]),e[0]=(t>>16&255)/255,e[1]=(t>>8&255)/255,e[2]=(255&t)/255,e}function Xt(t){var e=t.toString(16);return"#"+(e="000000".substr(0,6-e.length)+e)}function jt(t){return"string"==typeof t&&"#"===t[0]&&(t=t.substr(1)),parseInt(t,16)}function Ht(t){return(255*t[0]<<16)+(255*t[1]<<8)+(255*t[2]|0)}var Gt=function(){for(var e=[],r=[],i=0;i<32;i++)e[i]=i,r[i]=i;e[t.BLEND_MODES.NORMAL_NPM]=t.BLEND_MODES.NORMAL,e[t.BLEND_MODES.ADD_NPM]=t.BLEND_MODES.ADD,e[t.BLEND_MODES.SCREEN_NPM]=t.BLEND_MODES.SCREEN,r[t.BLEND_MODES.NORMAL]=t.BLEND_MODES.NORMAL_NPM,r[t.BLEND_MODES.ADD]=t.BLEND_MODES.ADD_NPM,r[t.BLEND_MODES.SCREEN]=t.BLEND_MODES.SCREEN_NPM;var n=[];return n.push(r),n.push(e),n}();function Yt(t,e){return Gt[e?1:0][t]}function zt(t,e,r,i){return r=r||new Float32Array(4),i||void 0===i?(r[0]=t[0]*e,r[1]=t[1]*e,r[2]=t[2]*e):(r[0]=t[0],r[1]=t[1],r[2]=t[2]),r[3]=e,r}function Vt(t,e){if(1===e)return(255*e<<24)+t;if(0===e)return 0;var r=t>>16&255,i=t>>8&255,n=255&t;return(255*e<<24)+((r=r*e+.5|0)<<16)+((i=i*e+.5|0)<<8)+(n=n*e+.5|0)}function Wt(t,e,r,i){return(r=r||new Float32Array(4))[0]=(t>>16&255)/255,r[1]=(t>>8&255)/255,r[2]=(255&t)/255,(i||void 0===i)&&(r[0]*=e,r[1]*=e,r[2]*=e),r[3]=e,r}function qt(t,e){void 0===e&&(e=null);var r=6*t;if((e=e||new Uint16Array(r)).length!==r)throw new Error("Out buffer length is incorrect, got "+e.length+" and expected "+r);for(var i=0,n=0;i<r;i+=6,n+=4)e[i+0]=n+0,e[i+1]=n+1,e[i+2]=n+2,e[i+3]=n+0,e[i+4]=n+2,e[i+5]=n+3;return e}function Kt(t){if(4===t.BYTES_PER_ELEMENT)return t instanceof Float32Array?"Float32Array":t instanceof Uint32Array?"Uint32Array":"Int32Array";if(2===t.BYTES_PER_ELEMENT){if(t instanceof Uint16Array)return"Uint16Array"}else if(1===t.BYTES_PER_ELEMENT&&t instanceof Uint8Array)return"Uint8Array";return null}var Zt={Float32Array:Float32Array,Uint32Array:Uint32Array,Int32Array:Int32Array,Uint8Array:Uint8Array};function Jt(t){return t+=0===t?1:0,--t,t|=t>>>1,t|=t>>>2,t|=t>>>4,t|=t>>>8,(t|=t>>>16)+1}function Qt(t){return!(t&t-1||!t)}function $t(t){var e=(t>65535?1:0)<<4,r=((t>>>=e)>255?1:0)<<3;return e|=r,e|=r=((t>>>=r)>15?1:0)<<2,(e|=r=((t>>>=r)>3?1:0)<<1)|(t>>>=r)>>1}function te(t,e,r){var i,n=t.length;if(!(e>=n||0===r)){var o=n-(r=e+r>n?n-e:r);for(i=e;i<o;++i)t[i]=t[i+r];t.length=o}}function ee(t){return 0===t?0:t<0?-1:1}var re=0;function ie(){return++re}var ne={};function oe(t,e,r){if(void 0===r&&(r=3),!ne[e]){var i=(new Error).stack;void 0===i?console.warn("PixiJS Deprecation Warning: ",e+"\nDeprecated since v"+t):(i=i.split("\n").splice(r).join("\n"),console.groupCollapsed?(console.groupCollapsed("%cPixiJS Deprecation Warning: %c%s","color:#614108;background:#fffbe6","font-weight:normal;color:#614108;background:#fffbe6",e+"\nDeprecated since v"+t),console.warn(i),console.groupEnd()):(console.warn("PixiJS Deprecation Warning: ",e+"\nDeprecated since v"+t),console.warn(i))),ne[e]=!0}}var se={},ae=Object.create(null),he=Object.create(null);var ue=function(){function t(t,e,r){this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d"),this.resolution=r||D.RESOLUTION,this.resize(t,e)}return t.prototype.clear=function(){this.context.setTransform(1,0,0,1,0,0),this.context.clearRect(0,0,this.canvas.width,this.canvas.height)},t.prototype.resize=function(t,e){this.canvas.width=t*this.resolution,this.canvas.height=e*this.resolution},t.prototype.destroy=function(){this.context=null,this.canvas=null},Object.defineProperty(t.prototype,"width",{get:function(){return this.canvas.width},set:function(t){this.canvas.width=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.canvas.height},set:function(t){this.canvas.height=t},enumerable:!1,configurable:!0}),t}();function le(t){var e,r,i,n=t.width,o=t.height,s=t.getContext("2d"),a=s.getImageData(0,0,n,o).data,h=a.length,u={top:null,left:null,right:null,bottom:null},l=null;for(e=0;e<h;e+=4)0!==a[e+3]&&(r=e/4%n,i=~~(e/4/n),null===u.top&&(u.top=i),null===u.left?u.left=r:r<u.left&&(u.left=r),null===u.right?u.right=r+1:u.right<r&&(u.right=r+1),null===u.bottom?u.bottom=i:u.bottom<i&&(u.bottom=i));return null!==u.top&&(n=u.right-u.left,o=u.bottom-u.top+1,l=s.getImageData(u.left,u.top,n,o)),{height:o,width:n,data:l}}var ce,de=/^\s*data:(?:([\w-]+)\/([\w+.-]+))?(?:;charset=([\w-]+))?(?:;(base64))?,(.*)/i;function pe(t,e){if(void 0===e&&(e=window.location),0===t.indexOf("data:"))return"";e=e||window.location,ce||(ce=document.createElement("a")),ce.href=t;var r=ft(ce.href),i=!r.port&&""===e.port||r.port===e.port;return r.hostname===e.hostname&&i&&r.protocol===e.protocol?"":"anonymous"}function fe(t,e){var r=D.RETINA_PREFIX.exec(t);return r?parseFloat(r[1]):void 0!==e?e:1}var me,ve={BaseTextureCache:he,CanvasRenderTarget:ue,DATA_URI:de,ProgramCache:se,TextureCache:ae,clearTextureCache:function(){var t;for(t in ae)delete ae[t];for(t in he)delete he[t]},correctBlendMode:Yt,createIndicesForQuads:qt,decomposeDataUri:function(t){var e=de.exec(t);if(e)return{mediaType:e[1]?e[1].toLowerCase():void 0,subType:e[2]?e[2].toLowerCase():void 0,charset:e[3]?e[3].toLowerCase():void 0,encoding:e[4]?e[4].toLowerCase():void 0,data:e[5]}},deprecation:oe,destroyTextureCache:function(){var t;for(t in ae)ae[t].destroy();for(t in he)he[t].destroy()},determineCrossOrigin:pe,getBufferType:Kt,getResolutionOfUrl:fe,hex2rgb:kt,hex2string:Xt,interleaveTypedArrays:function(t,e){for(var r=0,i=0,n={},o=0;o<t.length;o++)i+=e[o],r+=t[o].length;var s=new ArrayBuffer(4*r),a=null,h=0;for(o=0;o<t.length;o++){var u=e[o],l=t[o],c=Kt(l);n[c]||(n[c]=new Zt[c](s)),a=n[c];for(var d=0;d<l.length;d++)a[(d/u|0)*i+h+d%u]=l[d];h+=u}return new Float32Array(s)},isPow2:Qt,isWebGLSupported:Ut,log2:$t,nextPow2:Jt,premultiplyBlendMode:Gt,premultiplyRgba:zt,premultiplyTint:Vt,premultiplyTintToRgba:Wt,removeItems:te,rgb2hex:Ht,sayHello:Bt,sign:ee,skipHello:function(){Nt=!0},string2hex:jt,trimCanvas:le,uid:ie,isMobile:M,EventEmitter:C,earcut:R,url:Rt},ge=2*Math.PI,ye=180/Math.PI,_e=Math.PI/180;(me=t.SHAPES||(t.SHAPES={}))[me.POLY=0]="POLY",me[me.RECT=1]="RECT",me[me.CIRC=2]="CIRC",me[me.ELIP=3]="ELIP",me[me.RREC=4]="RREC";var xe=function(){function e(e,r,i,n){void 0===e&&(e=0),void 0===r&&(r=0),void 0===i&&(i=0),void 0===n&&(n=0),this.x=Number(e),this.y=Number(r),this.width=Number(i),this.height=Number(n),this.type=t.SHAPES.RECT}return Object.defineProperty(e.prototype,"left",{get:function(){return this.x},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"right",{get:function(){return this.x+this.width},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"top",{get:function(){return this.y},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"bottom",{get:function(){return this.y+this.height},enumerable:!1,configurable:!0}),Object.defineProperty(e,"EMPTY",{get:function(){return new e(0,0,0,0)},enumerable:!1,configurable:!0}),e.prototype.clone=function(){return new e(this.x,this.y,this.width,this.height)},e.prototype.copyFrom=function(t){return this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height,this},e.prototype.copyTo=function(t){return t.x=this.x,t.y=this.y,t.width=this.width,t.height=this.height,t},e.prototype.contains=function(t,e){return!(this.width<=0||this.height<=0)&&(t>=this.x&&t<this.x+this.width&&e>=this.y&&e<this.y+this.height)},e.prototype.pad=function(t,e){return void 0===t&&(t=0),void 0===e&&(e=t),this.x-=t,this.y-=e,this.width+=2*t,this.height+=2*e,this},e.prototype.fit=function(t){var e=Math.max(this.x,t.x),r=Math.min(this.x+this.width,t.x+t.width),i=Math.max(this.y,t.y),n=Math.min(this.y+this.height,t.y+t.height);return this.x=e,this.width=Math.max(r-e,0),this.y=i,this.height=Math.max(n-i,0),this},e.prototype.ceil=function(t,e){void 0===t&&(t=1),void 0===e&&(e=.001);var r=Math.ceil((this.x+this.width-e)*t)/t,i=Math.ceil((this.y+this.height-e)*t)/t;return this.x=Math.floor((this.x+e)*t)/t,this.y=Math.floor((this.y+e)*t)/t,this.width=r-this.x,this.height=i-this.y,this},e.prototype.enlarge=function(t){var e=Math.min(this.x,t.x),r=Math.max(this.x+this.width,t.x+t.width),i=Math.min(this.y,t.y),n=Math.max(this.y+this.height,t.y+t.height);return this.x=e,this.width=r-e,this.y=i,this.height=n-i,this},e}(),be=function(){function e(e,r,i){void 0===e&&(e=0),void 0===r&&(r=0),void 0===i&&(i=0),this.x=e,this.y=r,this.radius=i,this.type=t.SHAPES.CIRC}return e.prototype.clone=function(){return new e(this.x,this.y,this.radius)},e.prototype.contains=function(t,e){if(this.radius<=0)return!1;var r=this.radius*this.radius,i=this.x-t,n=this.y-e;return(i*=i)+(n*=n)<=r},e.prototype.getBounds=function(){return new xe(this.x-this.radius,this.y-this.radius,2*this.radius,2*this.radius)},e}(),Ee=function(){function e(e,r,i,n){void 0===e&&(e=0),void 0===r&&(r=0),void 0===i&&(i=0),void 0===n&&(n=0),this.x=e,this.y=r,this.width=i,this.height=n,this.type=t.SHAPES.ELIP}return e.prototype.clone=function(){return new e(this.x,this.y,this.width,this.height)},e.prototype.contains=function(t,e){if(this.width<=0||this.height<=0)return!1;var r=(t-this.x)/this.width,i=(e-this.y)/this.height;return(r*=r)+(i*=i)<=1},e.prototype.getBounds=function(){return new xe(this.x-this.width,this.y-this.height,this.width,this.height)},e}(),Te=function(){function e(){for(var e=arguments,r=[],i=0;i<arguments.length;i++)r[i]=e[i];var n=Array.isArray(r[0])?r[0]:r;if("number"!=typeof n[0]){for(var o=[],s=0,a=n.length;s<a;s++)o.push(n[s].x,n[s].y);n=o}this.points=n,this.type=t.SHAPES.POLY,this.closeStroke=!0}return e.prototype.clone=function(){var t=new e(this.points.slice());return t.closeStroke=this.closeStroke,t},e.prototype.contains=function(t,e){for(var r=!1,i=this.points.length/2,n=0,o=i-1;n<i;o=n++){var s=this.points[2*n],a=this.points[2*n+1],h=this.points[2*o],u=this.points[2*o+1];a>e!=u>e&&t<(e-a)/(u-a)*(h-s)+s&&(r=!r)}return r},e}(),Se=function(){function e(e,r,i,n,o){void 0===e&&(e=0),void 0===r&&(r=0),void 0===i&&(i=0),void 0===n&&(n=0),void 0===o&&(o=20),this.x=e,this.y=r,this.width=i,this.height=n,this.radius=o,this.type=t.SHAPES.RREC}return e.prototype.clone=function(){return new e(this.x,this.y,this.width,this.height,this.radius)},e.prototype.contains=function(t,e){if(this.width<=0||this.height<=0)return!1;if(t>=this.x&&t<=this.x+this.width&&e>=this.y&&e<=this.y+this.height){if(e>=this.y+this.radius&&e<=this.y+this.height-this.radius||t>=this.x+this.radius&&t<=this.x+this.width-this.radius)return!0;var r=t-(this.x+this.radius),i=e-(this.y+this.radius),n=this.radius*this.radius;if(r*r+i*i<=n)return!0;if((r=t-(this.x+this.width-this.radius))*r+i*i<=n)return!0;if(r*r+(i=e-(this.y+this.height-this.radius))*i<=n)return!0;if((r=t-(this.x+this.radius))*r+i*i<=n)return!0}return!1},e}(),we=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.x=t,this.y=e}return t.prototype.clone=function(){return new t(this.x,this.y)},t.prototype.copyFrom=function(t){return this.set(t.x,t.y),this},t.prototype.copyTo=function(t){return t.set(this.x,this.y),t},t.prototype.equals=function(t){return t.x===this.x&&t.y===this.y},t.prototype.set=function(t,e){return void 0===t&&(t=0),void 0===e&&(e=t),this.x=t,this.y=e,this},t}(),Pe=function(){function t(t,e,r,i){void 0===r&&(r=0),void 0===i&&(i=0),this._x=r,this._y=i,this.cb=t,this.scope=e}return t.prototype.clone=function(e,r){return void 0===e&&(e=this.cb),void 0===r&&(r=this.scope),new t(e,r,this._x,this._y)},t.prototype.set=function(t,e){return void 0===t&&(t=0),void 0===e&&(e=t),this._x===t&&this._y===e||(this._x=t,this._y=e,this.cb.call(this.scope)),this},t.prototype.copyFrom=function(t){return this._x===t.x&&this._y===t.y||(this._x=t.x,this._y=t.y,this.cb.call(this.scope)),this},t.prototype.copyTo=function(t){return t.set(this._x,this._y),t},t.prototype.equals=function(t){return t.x===this._x&&t.y===this._y},Object.defineProperty(t.prototype,"x",{get:function(){return this._x},set:function(t){this._x!==t&&(this._x=t,this.cb.call(this.scope))},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this._y},set:function(t){this._y!==t&&(this._y=t,this.cb.call(this.scope))},enumerable:!1,configurable:!0}),t}(),Ie=function(){function t(t,e,r,i,n,o){void 0===t&&(t=1),void 0===e&&(e=0),void 0===r&&(r=0),void 0===i&&(i=1),void 0===n&&(n=0),void 0===o&&(o=0),this.array=null,this.a=t,this.b=e,this.c=r,this.d=i,this.tx=n,this.ty=o}return t.prototype.fromArray=function(t){this.a=t[0],this.b=t[1],this.c=t[3],this.d=t[4],this.tx=t[2],this.ty=t[5]},t.prototype.set=function(t,e,r,i,n,o){return this.a=t,this.b=e,this.c=r,this.d=i,this.tx=n,this.ty=o,this},t.prototype.toArray=function(t,e){this.array||(this.array=new Float32Array(9));var r=e||this.array;return t?(r[0]=this.a,r[1]=this.b,r[2]=0,r[3]=this.c,r[4]=this.d,r[5]=0,r[6]=this.tx,r[7]=this.ty,r[8]=1):(r[0]=this.a,r[1]=this.c,r[2]=this.tx,r[3]=this.b,r[4]=this.d,r[5]=this.ty,r[6]=0,r[7]=0,r[8]=1),r},t.prototype.apply=function(t,e){e=e||new we;var r=t.x,i=t.y;return e.x=this.a*r+this.c*i+this.tx,e.y=this.b*r+this.d*i+this.ty,e},t.prototype.applyInverse=function(t,e){e=e||new we;var r=1/(this.a*this.d+this.c*-this.b),i=t.x,n=t.y;return e.x=this.d*r*i+-this.c*r*n+(this.ty*this.c-this.tx*this.d)*r,e.y=this.a*r*n+-this.b*r*i+(-this.ty*this.a+this.tx*this.b)*r,e},t.prototype.translate=function(t,e){return this.tx+=t,this.ty+=e,this},t.prototype.scale=function(t,e){return this.a*=t,this.d*=e,this.c*=t,this.b*=e,this.tx*=t,this.ty*=e,this},t.prototype.rotate=function(t){var e=Math.cos(t),r=Math.sin(t),i=this.a,n=this.c,o=this.tx;return this.a=i*e-this.b*r,this.b=i*r+this.b*e,this.c=n*e-this.d*r,this.d=n*r+this.d*e,this.tx=o*e-this.ty*r,this.ty=o*r+this.ty*e,this},t.prototype.append=function(t){var e=this.a,r=this.b,i=this.c,n=this.d;return this.a=t.a*e+t.b*i,this.b=t.a*r+t.b*n,this.c=t.c*e+t.d*i,this.d=t.c*r+t.d*n,this.tx=t.tx*e+t.ty*i+this.tx,this.ty=t.tx*r+t.ty*n+this.ty,this},t.prototype.setTransform=function(t,e,r,i,n,o,s,a,h){return this.a=Math.cos(s+h)*n,this.b=Math.sin(s+h)*n,this.c=-Math.sin(s-a)*o,this.d=Math.cos(s-a)*o,this.tx=t-(r*this.a+i*this.c),this.ty=e-(r*this.b+i*this.d),this},t.prototype.prepend=function(t){var e=this.tx;if(1!==t.a||0!==t.b||0!==t.c||1!==t.d){var r=this.a,i=this.c;this.a=r*t.a+this.b*t.c,this.b=r*t.b+this.b*t.d,this.c=i*t.a+this.d*t.c,this.d=i*t.b+this.d*t.d}return this.tx=e*t.a+this.ty*t.c+t.tx,this.ty=e*t.b+this.ty*t.d+t.ty,this},t.prototype.decompose=function(t){var e=this.a,r=this.b,i=this.c,n=this.d,o=-Math.atan2(-i,n),s=Math.atan2(r,e),a=Math.abs(o+s);return a<1e-5||Math.abs(ge-a)<1e-5?(t.rotation=s,t.skew.x=t.skew.y=0):(t.rotation=0,t.skew.x=o,t.skew.y=s),t.scale.x=Math.sqrt(e*e+r*r),t.scale.y=Math.sqrt(i*i+n*n),t.position.x=this.tx,t.position.y=this.ty,t},t.prototype.invert=function(){var t=this.a,e=this.b,r=this.c,i=this.d,n=this.tx,o=t*i-e*r;return this.a=i/o,this.b=-e/o,this.c=-r/o,this.d=t/o,this.tx=(r*this.ty-i*n)/o,this.ty=-(t*this.ty-e*n)/o,this},t.prototype.identity=function(){return this.a=1,this.b=0,this.c=0,this.d=1,this.tx=0,this.ty=0,this},t.prototype.clone=function(){var e=new t;return e.a=this.a,e.b=this.b,e.c=this.c,e.d=this.d,e.tx=this.tx,e.ty=this.ty,e},t.prototype.copyTo=function(t){return t.a=this.a,t.b=this.b,t.c=this.c,t.d=this.d,t.tx=this.tx,t.ty=this.ty,t},t.prototype.copyFrom=function(t){return this.a=t.a,this.b=t.b,this.c=t.c,this.d=t.d,this.tx=t.tx,this.ty=t.ty,this},Object.defineProperty(t,"IDENTITY",{get:function(){return new t},enumerable:!1,configurable:!0}),Object.defineProperty(t,"TEMP_MATRIX",{get:function(){return new t},enumerable:!1,configurable:!0}),t}(),Ae=[1,1,0,-1,-1,-1,0,1,1,1,0,-1,-1,-1,0,1],Oe=[0,1,1,1,0,-1,-1,-1,0,1,1,1,0,-1,-1,-1],Me=[0,-1,-1,-1,0,1,1,1,0,1,1,1,0,-1,-1,-1],De=[1,1,0,-1,-1,-1,0,1,-1,-1,0,1,1,1,0,-1],Ce=[],Re=[],Le=Math.sign;!function(){for(var t=0;t<16;t++){var e=[];Ce.push(e);for(var r=0;r<16;r++)for(var i=Le(Ae[t]*Ae[r]+Me[t]*Oe[r]),n=Le(Oe[t]*Ae[r]+De[t]*Oe[r]),o=Le(Ae[t]*Me[r]+Me[t]*De[r]),s=Le(Oe[t]*Me[r]+De[t]*De[r]),a=0;a<16;a++)if(Ae[a]===i&&Oe[a]===n&&Me[a]===o&&De[a]===s){e.push(a);break}}for(t=0;t<16;t++){var h=new Ie;h.set(Ae[t],Oe[t],Me[t],De[t],0,0),Re.push(h)}}();var Ne={E:0,SE:1,S:2,SW:3,W:4,NW:5,N:6,NE:7,MIRROR_VERTICAL:8,MAIN_DIAGONAL:10,MIRROR_HORIZONTAL:12,REVERSE_DIAGONAL:14,uX:function(t){return Ae[t]},uY:function(t){return Oe[t]},vX:function(t){return Me[t]},vY:function(t){return De[t]},inv:function(t){return 8&t?15&t:7&-t},add:function(t,e){return Ce[t][e]},sub:function(t,e){return Ce[t][Ne.inv(e)]},rotate180:function(t){return 4^t},isVertical:function(t){return 2==(3&t)},byDirection:function(t,e){return 2*Math.abs(t)<=Math.abs(e)?e>=0?Ne.S:Ne.N:2*Math.abs(e)<=Math.abs(t)?t>0?Ne.E:Ne.W:e>0?t>0?Ne.SE:Ne.SW:t>0?Ne.NE:Ne.NW},matrixAppendRotationInv:function(t,e,r,i){void 0===r&&(r=0),void 0===i&&(i=0);var n=Re[Ne.inv(e)];n.tx=r,n.ty=i,t.append(n)}},Fe=function(){function t(){this.worldTransform=new Ie,this.localTransform=new Ie,this.position=new Pe(this.onChange,this,0,0),this.scale=new Pe(this.onChange,this,1,1),this.pivot=new Pe(this.onChange,this,0,0),this.skew=new Pe(this.updateSkew,this,0,0),this._rotation=0,this._cx=1,this._sx=0,this._cy=0,this._sy=1,this._localID=0,this._currentLocalID=0,this._worldID=0,this._parentID=0}return t.prototype.onChange=function(){this._localID++},t.prototype.updateSkew=function(){this._cx=Math.cos(this._rotation+this.skew.y),this._sx=Math.sin(this._rotation+this.skew.y),this._cy=-Math.sin(this._rotation-this.skew.x),this._sy=Math.cos(this._rotation-this.skew.x),this._localID++},t.prototype.updateLocalTransform=function(){var t=this.localTransform;this._localID!==this._currentLocalID&&(t.a=this._cx*this.scale.x,t.b=this._sx*this.scale.x,t.c=this._cy*this.scale.y,t.d=this._sy*this.scale.y,t.tx=this.position.x-(this.pivot.x*t.a+this.pivot.y*t.c),t.ty=this.position.y-(this.pivot.x*t.b+this.pivot.y*t.d),this._currentLocalID=this._localID,this._parentID=-1)},t.prototype.updateTransform=function(t){var e=this.localTransform;if(this._localID!==this._currentLocalID&&(e.a=this._cx*this.scale.x,e.b=this._sx*this.scale.x,e.c=this._cy*this.scale.y,e.d=this._sy*this.scale.y,e.tx=this.position.x-(this.pivot.x*e.a+this.pivot.y*e.c),e.ty=this.position.y-(this.pivot.x*e.b+this.pivot.y*e.d),this._currentLocalID=this._localID,this._parentID=-1),this._parentID!==t._worldID){var r=t.worldTransform,i=this.worldTransform;i.a=e.a*r.a+e.b*r.c,i.b=e.a*r.b+e.b*r.d,i.c=e.c*r.a+e.d*r.c,i.d=e.c*r.b+e.d*r.d,i.tx=e.tx*r.a+e.ty*r.c+r.tx,i.ty=e.tx*r.b+e.ty*r.d+r.ty,this._parentID=t._worldID,this._worldID++}},t.prototype.setFromMatrix=function(t){t.decompose(this),this._localID++},Object.defineProperty(t.prototype,"rotation",{get:function(){return this._rotation},set:function(t){this._rotation!==t&&(this._rotation=t,this.updateSkew())},enumerable:!1,configurable:!0}),t.IDENTITY=new t,t}();D.SORTABLE_CHILDREN=!1;var Be=function(){function t(){this.minX=1/0,this.minY=1/0,this.maxX=-1/0,this.maxY=-1/0,this.rect=null,this.updateID=-1}return t.prototype.isEmpty=function(){return this.minX>this.maxX||this.minY>this.maxY},t.prototype.clear=function(){this.minX=1/0,this.minY=1/0,this.maxX=-1/0,this.maxY=-1/0},t.prototype.getRectangle=function(t){return this.minX>this.maxX||this.minY>this.maxY?xe.EMPTY:((t=t||new xe(0,0,1,1)).x=this.minX,t.y=this.minY,t.width=this.maxX-this.minX,t.height=this.maxY-this.minY,t)},t.prototype.addPoint=function(t){this.minX=Math.min(this.minX,t.x),this.maxX=Math.max(this.maxX,t.x),this.minY=Math.min(this.minY,t.y),this.maxY=Math.max(this.maxY,t.y)},t.prototype.addQuad=function(t){var e=this.minX,r=this.minY,i=this.maxX,n=this.maxY,o=t[0],s=t[1];e=o<e?o:e,r=s<r?s:r,i=o>i?o:i,n=s>n?s:n,e=(o=t[2])<e?o:e,r=(s=t[3])<r?s:r,i=o>i?o:i,n=s>n?s:n,e=(o=t[4])<e?o:e,r=(s=t[5])<r?s:r,i=o>i?o:i,n=s>n?s:n,e=(o=t[6])<e?o:e,r=(s=t[7])<r?s:r,i=o>i?o:i,n=s>n?s:n,this.minX=e,this.minY=r,this.maxX=i,this.maxY=n},t.prototype.addFrame=function(t,e,r,i,n){this.addFrameMatrix(t.worldTransform,e,r,i,n)},t.prototype.addFrameMatrix=function(t,e,r,i,n){var o=t.a,s=t.b,a=t.c,h=t.d,u=t.tx,l=t.ty,c=this.minX,d=this.minY,p=this.maxX,f=this.maxY,m=o*e+a*r+u,v=s*e+h*r+l;c=m<c?m:c,d=v<d?v:d,p=m>p?m:p,f=v>f?v:f,c=(m=o*i+a*r+u)<c?m:c,d=(v=s*i+h*r+l)<d?v:d,p=m>p?m:p,f=v>f?v:f,c=(m=o*e+a*n+u)<c?m:c,d=(v=s*e+h*n+l)<d?v:d,p=m>p?m:p,f=v>f?v:f,c=(m=o*i+a*n+u)<c?m:c,d=(v=s*i+h*n+l)<d?v:d,p=m>p?m:p,f=v>f?v:f,this.minX=c,this.minY=d,this.maxX=p,this.maxY=f},t.prototype.addVertexData=function(t,e,r){for(var i=this.minX,n=this.minY,o=this.maxX,s=this.maxY,a=e;a<r;a+=2){var h=t[a],u=t[a+1];i=h<i?h:i,n=u<n?u:n,o=h>o?h:o,s=u>s?u:s}this.minX=i,this.minY=n,this.maxX=o,this.maxY=s},t.prototype.addVertices=function(t,e,r,i){this.addVerticesMatrix(t.worldTransform,e,r,i)},t.prototype.addVerticesMatrix=function(t,e,r,i,n,o){void 0===n&&(n=0),void 0===o&&(o=n);for(var s=t.a,a=t.b,h=t.c,u=t.d,l=t.tx,c=t.ty,d=this.minX,p=this.minY,f=this.maxX,m=this.maxY,v=r;v<i;v+=2){var g=e[v],y=e[v+1],_=s*g+h*y+l,x=u*y+a*g+c;d=Math.min(d,_-n),f=Math.max(f,_+n),p=Math.min(p,x-o),m=Math.max(m,x+o)}this.minX=d,this.minY=p,this.maxX=f,this.maxY=m},t.prototype.addBounds=function(t){var e=this.minX,r=this.minY,i=this.maxX,n=this.maxY;this.minX=t.minX<e?t.minX:e,this.minY=t.minY<r?t.minY:r,this.maxX=t.maxX>i?t.maxX:i,this.maxY=t.maxY>n?t.maxY:n},t.prototype.addBoundsMask=function(t,e){var r=t.minX>e.minX?t.minX:e.minX,i=t.minY>e.minY?t.minY:e.minY,n=t.maxX<e.maxX?t.maxX:e.maxX,o=t.maxY<e.maxY?t.maxY:e.maxY;if(r<=n&&i<=o){var s=this.minX,a=this.minY,h=this.maxX,u=this.maxY;this.minX=r<s?r:s,this.minY=i<a?i:a,this.maxX=n>h?n:h,this.maxY=o>u?o:u}},t.prototype.addBoundsMatrix=function(t,e){this.addFrameMatrix(e,t.minX,t.minY,t.maxX,t.maxY)},t.prototype.addBoundsArea=function(t,e){var r=t.minX>e.x?t.minX:e.x,i=t.minY>e.y?t.minY:e.y,n=t.maxX<e.x+e.width?t.maxX:e.x+e.width,o=t.maxY<e.y+e.height?t.maxY:e.y+e.height;if(r<=n&&i<=o){var s=this.minX,a=this.minY,h=this.maxX,u=this.maxY;this.minX=r<s?r:s,this.minY=i<a?i:a,this.maxX=n>h?n:h,this.maxY=o>u?o:u}},t.prototype.pad=function(t,e){void 0===t&&(t=0),void 0===e&&(e=t),this.isEmpty()||(this.minX-=t,this.maxX+=t,this.minY-=e,this.maxY+=e)},t.prototype.addFramePad=function(t,e,r,i,n,o){t-=n,e-=o,r+=n,i+=o,this.minX=this.minX<t?this.minX:t,this.maxX=this.maxX>r?this.maxX:r,this.minY=this.minY<e?this.minY:e,this.maxY=this.maxY>i?this.maxY:i},t}(),Ue=function(t,e){return(Ue=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};function ke(t,e){function r(){this.constructor=t}Ue(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var Xe=function(t){function e(){var e=t.call(this)||this;return e.tempDisplayObjectParent=null,e.transform=new Fe,e.alpha=1,e.visible=!0,e.renderable=!0,e.parent=null,e.worldAlpha=1,e._lastSortedIndex=0,e._zIndex=0,e.filterArea=null,e.filters=null,e._enabledFilters=null,e._bounds=new Be,e._localBounds=null,e._boundsID=0,e._boundsRect=null,e._localBoundsRect=null,e._mask=null,e._destroyed=!1,e.isSprite=!1,e.isMask=!1,e}return ke(e,t),e.mixin=function(t){for(var r=Object.keys(t),i=0;i<r.length;++i){var n=r[i];Object.defineProperty(e.prototype,n,Object.getOwnPropertyDescriptor(t,n))}},e.prototype._recursivePostUpdateTransform=function(){this.parent?(this.parent._recursivePostUpdateTransform(),this.transform.updateTransform(this.parent.transform)):this.transform.updateTransform(this._tempDisplayObjectParent.transform)},e.prototype.updateTransform=function(){this._boundsID++,this.transform.updateTransform(this.parent.transform),this.worldAlpha=this.alpha*this.parent.worldAlpha},e.prototype.getBounds=function(t,e){return t||(this.parent?(this._recursivePostUpdateTransform(),this.updateTransform()):(this.parent=this._tempDisplayObjectParent,this.updateTransform(),this.parent=null)),this._bounds.updateID!==this._boundsID&&(this.calculateBounds(),this._bounds.updateID=this._boundsID),e||(this._boundsRect||(this._boundsRect=new xe),e=this._boundsRect),this._bounds.getRectangle(e)},e.prototype.getLocalBounds=function(t){t||(this._localBoundsRect||(this._localBoundsRect=new xe),t=this._localBoundsRect),this._localBounds||(this._localBounds=new Be);var e=this.transform,r=this.parent;this.parent=null,this.transform=this._tempDisplayObjectParent.transform;var i=this._bounds,n=this._boundsID;this._bounds=this._localBounds;var o=this.getBounds(!1,t);return this.parent=r,this.transform=e,this._bounds=i,this._bounds.updateID+=this._boundsID-n,o},e.prototype.toGlobal=function(t,e,r){return void 0===r&&(r=!1),r||(this._recursivePostUpdateTransform(),this.parent?this.displayObjectUpdateTransform():(this.parent=this._tempDisplayObjectParent,this.displayObjectUpdateTransform(),this.parent=null)),this.worldTransform.apply(t,e)},e.prototype.toLocal=function(t,e,r,i){return e&&(t=e.toGlobal(t,r,i)),i||(this._recursivePostUpdateTransform(),this.parent?this.displayObjectUpdateTransform():(this.parent=this._tempDisplayObjectParent,this.displayObjectUpdateTransform(),this.parent=null)),this.worldTransform.applyInverse(t,r)},e.prototype.setParent=function(t){if(!t||!t.addChild)throw new Error("setParent: Argument must be a Container");return t.addChild(this),t},e.prototype.setTransform=function(t,e,r,i,n,o,s,a,h){return void 0===t&&(t=0),void 0===e&&(e=0),void 0===r&&(r=1),void 0===i&&(i=1),void 0===n&&(n=0),void 0===o&&(o=0),void 0===s&&(s=0),void 0===a&&(a=0),void 0===h&&(h=0),this.position.x=t,this.position.y=e,this.scale.x=r||1,this.scale.y=i||1,this.rotation=n,this.skew.x=o,this.skew.y=s,this.pivot.x=a,this.pivot.y=h,this},e.prototype.destroy=function(t){this.parent&&this.parent.removeChild(this),this.removeAllListeners(),this.transform=null,this.parent=null,this._bounds=null,this._mask=null,this.filters=null,this.filterArea=null,this.hitArea=null,this.interactive=!1,this.interactiveChildren=!1,this._destroyed=!0},Object.defineProperty(e.prototype,"_tempDisplayObjectParent",{get:function(){return null===this.tempDisplayObjectParent&&(this.tempDisplayObjectParent=new je),this.tempDisplayObjectParent},enumerable:!1,configurable:!0}),e.prototype.enableTempParent=function(){var t=this.parent;return this.parent=this._tempDisplayObjectParent,t},e.prototype.disableTempParent=function(t){this.parent=t},Object.defineProperty(e.prototype,"x",{get:function(){return this.position.x},set:function(t){this.transform.position.x=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"y",{get:function(){return this.position.y},set:function(t){this.transform.position.y=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"worldTransform",{get:function(){return this.transform.worldTransform},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"localTransform",{get:function(){return this.transform.localTransform},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"position",{get:function(){return this.transform.position},set:function(t){this.transform.position.copyFrom(t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"scale",{get:function(){return this.transform.scale},set:function(t){this.transform.scale.copyFrom(t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"pivot",{get:function(){return this.transform.pivot},set:function(t){this.transform.pivot.copyFrom(t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"skew",{get:function(){return this.transform.skew},set:function(t){this.transform.skew.copyFrom(t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rotation",{get:function(){return this.transform.rotation},set:function(t){this.transform.rotation=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"angle",{get:function(){return this.transform.rotation*ye},set:function(t){this.transform.rotation=t*_e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"zIndex",{get:function(){return this._zIndex},set:function(t){this._zIndex=t,this.parent&&(this.parent.sortDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"worldVisible",{get:function(){var t=this;do{if(!t.visible)return!1;t=t.parent}while(t);return!0},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"mask",{get:function(){return this._mask},set:function(t){var e;this._mask&&((e=this._mask.maskObject||this._mask).renderable=!0,e.isMask=!1);(this._mask=t,this._mask)&&((e=this._mask.maskObject||this._mask).renderable=!1,e.isMask=!0)},enumerable:!1,configurable:!0}),e}(C),je=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.sortDirty=null,e}return ke(e,t),e}(Xe);function He(t,e){return t.zIndex===e.zIndex?t._lastSortedIndex-e._lastSortedIndex:t.zIndex-e.zIndex}Xe.prototype.displayObjectUpdateTransform=Xe.prototype.updateTransform;var Ge=function(t){function e(){var e=t.call(this)||this;return e.children=[],e.sortableChildren=D.SORTABLE_CHILDREN,e.sortDirty=!1,e}return ke(e,t),e.prototype.onChildrenChange=function(t){},e.prototype.addChild=function(){for(var t=arguments,e=[],r=0;r<arguments.length;r++)e[r]=t[r];if(e.length>1)for(var i=0;i<e.length;i++)this.addChild(e[i]);else{var n=e[0];n.parent&&n.parent.removeChild(n),n.parent=this,this.sortDirty=!0,n.transform._parentID=-1,this.children.push(n),this._boundsID++,this.onChildrenChange(this.children.length-1),this.emit("childAdded",n,this,this.children.length-1),n.emit("added",this)}return e[0]},e.prototype.addChildAt=function(t,e){if(e<0||e>this.children.length)throw new Error(t+"addChildAt: The index "+e+" supplied is out of bounds "+this.children.length);return t.parent&&t.parent.removeChild(t),t.parent=this,this.sortDirty=!0,t.transform._parentID=-1,this.children.splice(e,0,t),this._boundsID++,this.onChildrenChange(e),t.emit("added",this),this.emit("childAdded",t,this,e),t},e.prototype.swapChildren=function(t,e){if(t!==e){var r=this.getChildIndex(t),i=this.getChildIndex(e);this.children[r]=e,this.children[i]=t,this.onChildrenChange(r<i?r:i)}},e.prototype.getChildIndex=function(t){var e=this.children.indexOf(t);if(-1===e)throw new Error("The supplied DisplayObject must be a child of the caller");return e},e.prototype.setChildIndex=function(t,e){if(e<0||e>=this.children.length)throw new Error("The index "+e+" supplied is out of bounds "+this.children.length);var r=this.getChildIndex(t);te(this.children,r,1),this.children.splice(e,0,t),this.onChildrenChange(e)},e.prototype.getChildAt=function(t){if(t<0||t>=this.children.length)throw new Error("getChildAt: Index ("+t+") does not exist.");return this.children[t]},e.prototype.removeChild=function(){for(var t=arguments,e=[],r=0;r<arguments.length;r++)e[r]=t[r];if(e.length>1)for(var i=0;i<e.length;i++)this.removeChild(e[i]);else{var n=e[0],o=this.children.indexOf(n);if(-1===o)return null;n.parent=null,n.transform._parentID=-1,te(this.children,o,1),this._boundsID++,this.onChildrenChange(o),n.emit("removed",this),this.emit("childRemoved",n,this,o)}return e[0]},e.prototype.removeChildAt=function(t){var e=this.getChildAt(t);return e.parent=null,e.transform._parentID=-1,te(this.children,t,1),this._boundsID++,this.onChildrenChange(t),e.emit("removed",this),this.emit("childRemoved",e,this,t),e},e.prototype.removeChildren=function(t,e){void 0===t&&(t=0),void 0===e&&(e=this.children.length);var r,i=t,n=e-i;if(n>0&&n<=e){r=this.children.splice(i,n);for(var o=0;o<r.length;++o)r[o].parent=null,r[o].transform&&(r[o].transform._parentID=-1);this._boundsID++,this.onChildrenChange(t);for(o=0;o<r.length;++o)r[o].emit("removed",this),this.emit("childRemoved",r[o],this,o);return r}if(0===n&&0===this.children.length)return[];throw new RangeError("removeChildren: numeric values are outside the acceptable range.")},e.prototype.sortChildren=function(){for(var t=!1,e=0,r=this.children.length;e<r;++e){var i=this.children[e];i._lastSortedIndex=e,t||0===i.zIndex||(t=!0)}t&&this.children.length>1&&this.children.sort(He),this.sortDirty=!1},e.prototype.updateTransform=function(){this.sortableChildren&&this.sortDirty&&this.sortChildren(),this._boundsID++,this.transform.updateTransform(this.parent.transform),this.worldAlpha=this.alpha*this.parent.worldAlpha;for(var t=0,e=this.children.length;t<e;++t){var r=this.children[t];r.visible&&r.updateTransform()}},e.prototype.calculateBounds=function(){this._bounds.clear(),this._calculateBounds();for(var t=0;t<this.children.length;t++){var e=this.children[t];if(e.visible&&e.renderable)if(e.calculateBounds(),e._mask){var r=e._mask.maskObject||e._mask;r.calculateBounds(),this._bounds.addBoundsMask(e._bounds,r._bounds)}else e.filterArea?this._bounds.addBoundsArea(e._bounds,e.filterArea):this._bounds.addBounds(e._bounds)}this._bounds.updateID=this._boundsID},e.prototype.getLocalBounds=function(e,r){void 0===r&&(r=!1);var i=t.prototype.getLocalBounds.call(this,e);if(!r)for(var n=0,o=this.children.length;n<o;++n){var s=this.children[n];s.visible&&s.updateTransform()}return i},e.prototype._calculateBounds=function(){},e.prototype.render=function(t){if(this.visible&&!(this.worldAlpha<=0)&&this.renderable)if(this._mask||this.filters&&this.filters.length)this.renderAdvanced(t);else{this._render(t);for(var e=0,r=this.children.length;e<r;++e)this.children[e].render(t)}},e.prototype.renderAdvanced=function(t){t.batch.flush();var e=this.filters,r=this._mask;if(e){this._enabledFilters||(this._enabledFilters=[]),this._enabledFilters.length=0;for(var i=0;i<e.length;i++)e[i].enabled&&this._enabledFilters.push(e[i]);this._enabledFilters.length&&t.filter.push(this,this._enabledFilters)}r&&t.mask.push(this,this._mask),this._render(t);i=0;for(var n=this.children.length;i<n;i++)this.children[i].render(t);t.batch.flush(),r&&t.mask.pop(this),e&&this._enabledFilters&&this._enabledFilters.length&&t.filter.pop()},e.prototype._render=function(t){},e.prototype.destroy=function(e){t.prototype.destroy.call(this),this.sortDirty=!1;var r="boolean"==typeof e?e:e&&e.children,i=this.removeChildren(0,this.children.length);if(r)for(var n=0;n<i.length;++n)i[n].destroy(e)},Object.defineProperty(e.prototype,"width",{get:function(){return this.scale.x*this.getLocalBounds().width},set:function(t){var e=this.getLocalBounds().width;this.scale.x=0!==e?t/e:1,this._width=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return this.scale.y*this.getLocalBounds().height},set:function(t){var e=this.getLocalBounds().height;this.scale.y=0!==e?t/e:1,this._height=t},enumerable:!1,configurable:!0}),e}(Xe);Ge.prototype.containerUpdateTransform=Ge.prototype.updateTransform;var Ye={accessible:!1,accessibleTitle:null,accessibleHint:null,tabIndex:0,_accessibleActive:!1,_accessibleDiv:null,accessibleType:"button",accessiblePointerEvents:"auto",accessibleChildren:!0,renderId:-1};Xe.mixin(Ye);var ze,Ve=100,We=0,qe=0,Ke=2,Ze=function(){function t(t){this._hookDiv=null,(M.tablet||M.phone)&&this.createTouchHook();var e=document.createElement("div");e.style.width=Ve+"px",e.style.height=Ve+"px",e.style.position="absolute",e.style.top=We+"px",e.style.left=qe+"px",e.style.zIndex=Ke.toString(),this.div=e,this.pool=[],this.renderId=0,this.debug=!1,this.renderer=t,this.children=[],this._onKeyDown=this._onKeyDown.bind(this),this._onMouseMove=this._onMouseMove.bind(this),this._isActive=!1,this._isMobileAccessibility=!1,this.androidUpdateCount=0,this.androidUpdateFrequency=500,window.addEventListener("keydown",this._onKeyDown,!1)}return Object.defineProperty(t.prototype,"isActive",{get:function(){return this._isActive},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isMobileAccessibility",{get:function(){return this._isMobileAccessibility},enumerable:!1,configurable:!0}),t.prototype.createTouchHook=function(){var t=this,e=document.createElement("button");e.style.width="1px",e.style.height="1px",e.style.position="absolute",e.style.top="-1000px",e.style.left="-1000px",e.style.zIndex=2..toString(),e.style.backgroundColor="#FF0000",e.title="select to enable accessability for this content",e.addEventListener("focus",function(){t._isMobileAccessibility=!0,t.activate(),t.destroyTouchHook()}),document.body.appendChild(e),this._hookDiv=e},t.prototype.destroyTouchHook=function(){this._hookDiv&&(document.body.removeChild(this._hookDiv),this._hookDiv=null)},t.prototype.activate=function(){this._isActive||(this._isActive=!0,window.document.addEventListener("mousemove",this._onMouseMove,!0),window.removeEventListener("keydown",this._onKeyDown,!1),this.renderer.on("postrender",this.update,this),this.renderer.view.parentNode&&this.renderer.view.parentNode.appendChild(this.div))},t.prototype.deactivate=function(){this._isActive&&!this._isMobileAccessibility&&(this._isActive=!1,window.document.removeEventListener("mousemove",this._onMouseMove,!0),window.addEventListener("keydown",this._onKeyDown,!1),this.renderer.off("postrender",this.update),this.div.parentNode&&this.div.parentNode.removeChild(this.div))},t.prototype.updateAccessibleObjects=function(t){if(t.visible&&t.accessibleChildren){t.accessible&&t.interactive&&(t._accessibleActive||this.addChild(t),t.renderId=this.renderId);for(var e=t.children,r=0;r<e.length;r++)this.updateAccessibleObjects(e[r])}},t.prototype.update=function(){var t=performance.now();if(!(M.android.device&&t<this.androidUpdateCount)&&(this.androidUpdateCount=t+this.androidUpdateFrequency,this.renderer.renderingToScreen)){this.renderer._lastObjectRendered&&this.updateAccessibleObjects(this.renderer._lastObjectRendered);var e=this.renderer.view.getBoundingClientRect(),r=this.renderer.resolution,i=e.width/this.renderer.width*r,n=e.height/this.renderer.height*r,o=this.div;o.style.left=e.left+"px",o.style.top=e.top+"px",o.style.width=this.renderer.width+"px",o.style.height=this.renderer.height+"px";for(var s=0;s<this.children.length;s++){var a=this.children[s];if(a.renderId!==this.renderId)a._accessibleActive=!1,te(this.children,s,1),this.div.removeChild(a._accessibleDiv),this.pool.push(a._accessibleDiv),a._accessibleDiv=null,s--;else{o=a._accessibleDiv;var h=a.hitArea,u=a.worldTransform;a.hitArea?(o.style.left=(u.tx+h.x*u.a)*i+"px",o.style.top=(u.ty+h.y*u.d)*n+"px",o.style.width=h.width*u.a*i+"px",o.style.height=h.height*u.d*n+"px"):(h=a.getBounds(),this.capHitArea(h),o.style.left=h.x*i+"px",o.style.top=h.y*n+"px",o.style.width=h.width*i+"px",o.style.height=h.height*n+"px",o.title!==a.accessibleTitle&&null!==a.accessibleTitle&&(o.title=a.accessibleTitle),o.getAttribute("aria-label")!==a.accessibleHint&&null!==a.accessibleHint&&o.setAttribute("aria-label",a.accessibleHint)),a.accessibleTitle===o.title&&a.tabIndex===o.tabIndex||(o.title=a.accessibleTitle,o.tabIndex=a.tabIndex,this.debug&&this.updateDebugHTML(o))}}this.renderId++}},t.prototype.updateDebugHTML=function(t){t.innerHTML="type: "+t.type+"</br> title : "+t.title+"</br> tabIndex: "+t.tabIndex},t.prototype.capHitArea=function(t){t.x<0&&(t.width+=t.x,t.x=0),t.y<0&&(t.height+=t.y,t.y=0),t.x+t.width>this.renderer.width&&(t.width=this.renderer.width-t.x),t.y+t.height>this.renderer.height&&(t.height=this.renderer.height-t.y)},t.prototype.addChild=function(t){var e=this.pool.pop();e||((e=document.createElement("button")).style.width=Ve+"px",e.style.height=Ve+"px",e.style.backgroundColor=this.debug?"rgba(255,255,255,0.5)":"transparent",e.style.position="absolute",e.style.zIndex=Ke.toString(),e.style.borderStyle="none",navigator.userAgent.toLowerCase().indexOf("chrome")>-1?e.setAttribute("aria-live","off"):e.setAttribute("aria-live","polite"),navigator.userAgent.match(/rv:.*Gecko\//)?e.setAttribute("aria-relevant","additions"):e.setAttribute("aria-relevant","text"),e.addEventListener("click",this._onClick.bind(this)),e.addEventListener("focus",this._onFocus.bind(this)),e.addEventListener("focusout",this._onFocusOut.bind(this))),e.style.pointerEvents=t.accessiblePointerEvents,e.type=t.accessibleType,t.accessibleTitle&&null!==t.accessibleTitle?e.title=t.accessibleTitle:t.accessibleHint&&null!==t.accessibleHint||(e.title="displayObject "+t.tabIndex),t.accessibleHint&&null!==t.accessibleHint&&e.setAttribute("aria-label",t.accessibleHint),this.debug&&this.updateDebugHTML(e),t._accessibleActive=!0,t._accessibleDiv=e,e.displayObject=t,this.children.push(t),this.div.appendChild(t._accessibleDiv),t._accessibleDiv.tabIndex=t.tabIndex},t.prototype._onClick=function(t){var e=this.renderer.plugins.interaction;e.dispatchEvent(t.target.displayObject,"click",e.eventData),e.dispatchEvent(t.target.displayObject,"pointertap",e.eventData),e.dispatchEvent(t.target.displayObject,"tap",e.eventData)},t.prototype._onFocus=function(t){t.target.getAttribute("aria-live")||t.target.setAttribute("aria-live","assertive");var e=this.renderer.plugins.interaction;e.dispatchEvent(t.target.displayObject,"mouseover",e.eventData)},t.prototype._onFocusOut=function(t){t.target.getAttribute("aria-live")||t.target.setAttribute("aria-live","polite");var e=this.renderer.plugins.interaction;e.dispatchEvent(t.target.displayObject,"mouseout",e.eventData)},t.prototype._onKeyDown=function(t){9===t.keyCode&&this.activate()},t.prototype._onMouseMove=function(t){0===t.movementX&&0===t.movementY||this.deactivate()},t.prototype.destroy=function(){this.destroyTouchHook(),this.div=null,window.document.removeEventListener("mousemove",this._onMouseMove,!0),window.removeEventListener("keydown",this._onKeyDown),this.pool=null,this.children=null,this.renderer=null},t}();D.TARGET_FPMS=.06,(ze=t.UPDATE_PRIORITY||(t.UPDATE_PRIORITY={}))[ze.INTERACTION=50]="INTERACTION",ze[ze.HIGH=25]="HIGH",ze[ze.NORMAL=0]="NORMAL",ze[ze.LOW=-25]="LOW",ze[ze.UTILITY=-50]="UTILITY";var Je=function(){function t(t,e,r,i){void 0===e&&(e=null),void 0===r&&(r=0),void 0===i&&(i=!1),this.fn=t,this.context=e,this.priority=r,this.once=i,this.next=null,this.previous=null,this._destroyed=!1}return t.prototype.match=function(t,e){return void 0===e&&(e=null),this.fn===t&&this.context===e},t.prototype.emit=function(t){this.fn&&(this.context?this.fn.call(this.context,t):this.fn(t));var e=this.next;return this.once&&this.destroy(!0),this._destroyed&&(this.next=null),e},t.prototype.connect=function(t){this.previous=t,t.next&&(t.next.previous=this),this.next=t.next,t.next=this},t.prototype.destroy=function(t){void 0===t&&(t=!1),this._destroyed=!0,this.fn=null,this.context=null,this.previous&&(this.previous.next=this.next),this.next&&(this.next.previous=this.previous);var e=this.next;return this.next=t?null:e,this.previous=null,e},t}(),Qe=function(){function e(){var t=this;this._head=new Je(null,null,1/0),this._requestId=null,this._maxElapsedMS=100,this._minElapsedMS=0,this.autoStart=!1,this.deltaTime=1,this.deltaMS=1/D.TARGET_FPMS,this.elapsedMS=1/D.TARGET_FPMS,this.lastTime=-1,this.speed=1,this.started=!1,this._protected=!1,this._lastFrame=-1,this._tick=function(e){t._requestId=null,t.started&&(t.update(e),t.started&&null===t._requestId&&t._head.next&&(t._requestId=requestAnimationFrame(t._tick)))}}return e.prototype._requestIfNeeded=function(){null===this._requestId&&this._head.next&&(this.lastTime=performance.now(),this._lastFrame=this.lastTime,this._requestId=requestAnimationFrame(this._tick))},e.prototype._cancelIfNeeded=function(){null!==this._requestId&&(cancelAnimationFrame(this._requestId),this._requestId=null)},e.prototype._startIfPossible=function(){this.started?this._requestIfNeeded():this.autoStart&&this.start()},e.prototype.add=function(e,r,i){return void 0===i&&(i=t.UPDATE_PRIORITY.NORMAL),this._addListener(new Je(e,r,i))},e.prototype.addOnce=function(e,r,i){return void 0===i&&(i=t.UPDATE_PRIORITY.NORMAL),this._addListener(new Je(e,r,i,!0))},e.prototype._addListener=function(t){var e=this._head.next,r=this._head;if(e){for(;e;){if(t.priority>e.priority){t.connect(r);break}r=e,e=e.next}t.previous||t.connect(r)}else t.connect(r);return this._startIfPossible(),this},e.prototype.remove=function(t,e){for(var r=this._head.next;r;)r=r.match(t,e)?r.destroy():r.next;return this._head.next||this._cancelIfNeeded(),this},Object.defineProperty(e.prototype,"count",{get:function(){if(!this._head)return 0;for(var t=0,e=this._head;e=e.next;)t++;return t},enumerable:!1,configurable:!0}),e.prototype.start=function(){this.started||(this.started=!0,this._requestIfNeeded())},e.prototype.stop=function(){this.started&&(this.started=!1,this._cancelIfNeeded())},e.prototype.destroy=function(){if(!this._protected){this.stop();for(var t=this._head.next;t;)t=t.destroy(!0);this._head.destroy(),this._head=null}},e.prototype.update=function(t){var e;if(void 0===t&&(t=performance.now()),t>this.lastTime){if((e=this.elapsedMS=t-this.lastTime)>this._maxElapsedMS&&(e=this._maxElapsedMS),e*=this.speed,this._minElapsedMS){var r=t-this._lastFrame|0;if(r<this._minElapsedMS)return;this._lastFrame=t-r%this._minElapsedMS}this.deltaMS=e,this.deltaTime=this.deltaMS*D.TARGET_FPMS;for(var i=this._head,n=i.next;n;)n=n.emit(this.deltaTime);i.next||this._cancelIfNeeded()}else this.deltaTime=this.deltaMS=this.elapsedMS=0;this.lastTime=t},Object.defineProperty(e.prototype,"FPS",{get:function(){return 1e3/this.elapsedMS},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"minFPS",{get:function(){return 1e3/this._maxElapsedMS},set:function(t){var e=Math.min(this.maxFPS,t),r=Math.min(Math.max(0,e)/1e3,D.TARGET_FPMS);this._maxElapsedMS=1/r},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"maxFPS",{get:function(){return this._minElapsedMS?Math.round(1e3/this._minElapsedMS):0},set:function(t){if(0===t)this._minElapsedMS=0;else{var e=Math.max(this.minFPS,t);this._minElapsedMS=1/(e/1e3)}},enumerable:!1,configurable:!0}),Object.defineProperty(e,"shared",{get:function(){if(!e._shared){var t=e._shared=new e;t.autoStart=!0,t._protected=!0}return e._shared},enumerable:!1,configurable:!0}),Object.defineProperty(e,"system",{get:function(){if(!e._system){var t=e._system=new e;t.autoStart=!0,t._protected=!0}return e._system},enumerable:!1,configurable:!0}),e}(),$e=function(){function e(){}return e.init=function(e){var r=this;e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set:function(e){this._ticker&&this._ticker.remove(this.render,this),this._ticker=e,e&&e.add(this.render,this,t.UPDATE_PRIORITY.LOW)},get:function(){return this._ticker}}),this.stop=function(){r._ticker.stop()},this.start=function(){r._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?Qe.shared:new Qe,e.autoStart&&this.start()},e.destroy=function(){if(this._ticker){var t=this._ticker;this.ticker=null,t.destroy()}},e}(),tr=function(){function t(){this.pressure=0,this.rotationAngle=0,this.twist=0,this.tangentialPressure=0,this.global=new we,this.target=null,this.originalEvent=null,this.identifier=null,this.isPrimary=!1,this.button=0,this.buttons=0,this.width=0,this.height=0,this.tiltX=0,this.tiltY=0,this.pointerType=null,this.pressure=0,this.rotationAngle=0,this.twist=0,this.tangentialPressure=0}return Object.defineProperty(t.prototype,"pointerId",{get:function(){return this.identifier},enumerable:!1,configurable:!0}),t.prototype.getLocalPosition=function(t,e,r){return t.worldTransform.applyInverse(r||this.global,e)},t.prototype.copyEvent=function(t){"isPrimary"in t&&t.isPrimary&&(this.isPrimary=!0),this.button="button"in t&&t.button;var e="buttons"in t&&t.buttons;this.buttons=Number.isInteger(e)?e:"which"in t&&t.which,this.width="width"in t&&t.width,this.height="height"in t&&t.height,this.tiltX="tiltX"in t&&t.tiltX,this.tiltY="tiltY"in t&&t.tiltY,this.pointerType="pointerType"in t&&t.pointerType,this.pressure="pressure"in t&&t.pressure,this.rotationAngle="rotationAngle"in t&&t.rotationAngle,this.twist="twist"in t&&t.twist||0,this.tangentialPressure="tangentialPressure"in t&&t.tangentialPressure||0},t.prototype.reset=function(){this.isPrimary=!1},t}(),er=function(t,e){return(er=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};var rr=function(){function t(){this.stopped=!1,this.stopsPropagatingAt=null,this.stopPropagationHint=!1,this.target=null,this.currentTarget=null,this.type=null,this.data=null}return t.prototype.stopPropagation=function(){this.stopped=!0,this.stopPropagationHint=!0,this.stopsPropagatingAt=this.currentTarget},t.prototype.reset=function(){this.stopped=!1,this.stopsPropagatingAt=null,this.stopPropagationHint=!1,this.currentTarget=null,this.target=null},t}(),ir=function(){function t(e){this._pointerId=e,this._flags=t.FLAGS.NONE}return t.prototype._doSet=function(t,e){this._flags=e?this._flags|t:this._flags&~t},Object.defineProperty(t.prototype,"pointerId",{get:function(){return this._pointerId},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"flags",{get:function(){return this._flags},set:function(t){this._flags=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"none",{get:function(){return this._flags===t.FLAGS.NONE},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"over",{get:function(){return 0!=(this._flags&t.FLAGS.OVER)},set:function(e){this._doSet(t.FLAGS.OVER,e)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"rightDown",{get:function(){return 0!=(this._flags&t.FLAGS.RIGHT_DOWN)},set:function(e){this._doSet(t.FLAGS.RIGHT_DOWN,e)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"leftDown",{get:function(){return 0!=(this._flags&t.FLAGS.LEFT_DOWN)},set:function(e){this._doSet(t.FLAGS.LEFT_DOWN,e)},enumerable:!1,configurable:!0}),t.FLAGS=Object.freeze({NONE:0,OVER:1,LEFT_DOWN:2,RIGHT_DOWN:4}),t}(),nr=function(){function t(){this._tempPoint=new we}return t.prototype.recursiveFindHit=function(t,e,r,i,n){if(!e||!e.visible)return!1;var o=t.data.global,s=!1,a=n=e.interactive||n,h=!0;if(e.hitArea?(i&&(e.worldTransform.applyInverse(o,this._tempPoint),e.hitArea.contains(this._tempPoint.x,this._tempPoint.y)?s=!0:(i=!1,h=!1)),a=!1):e._mask&&i&&(e._mask.containsPoint&&e._mask.containsPoint(o)||(i=!1)),h&&e.interactiveChildren&&e.children)for(var u=e.children,l=u.length-1;l>=0;l--){var c=u[l],d=this.recursiveFindHit(t,c,r,i,a);if(d){if(!c.parent)continue;a=!1,d&&(t.target&&(i=!1),s=!0)}}return n&&(i&&!t.target&&!e.hitArea&&e.containsPoint&&e.containsPoint(o)&&(s=!0),e.interactive&&(s&&!t.target&&(t.target=e),r&&r(t,e,!!s))),s},t.prototype.findHit=function(t,e,r,i){this.recursiveFindHit(t,e,r,i,!1)},t}(),or={interactive:!1,interactiveChildren:!0,hitArea:null,get buttonMode(){return"pointer"===this.cursor},set buttonMode(t){t?this.cursor="pointer":"pointer"===this.cursor&&(this.cursor=null)},cursor:null,get trackedPointers(){return void 0===this._trackedPointers&&(this._trackedPointers={}),this._trackedPointers},_trackedPointers:void 0};Xe.mixin(or);var sr=1,ar={target:null,data:{global:null}},hr=function(e){function r(t,r){var i=e.call(this)||this;return r=r||{},i.renderer=t,i.autoPreventDefault=void 0===r.autoPreventDefault||r.autoPreventDefault,i.interactionFrequency=r.interactionFrequency||10,i.mouse=new tr,i.mouse.identifier=sr,i.mouse.global.set(-999999),i.activeInteractionData={},i.activeInteractionData[sr]=i.mouse,i.interactionDataPool=[],i.eventData=new rr,i.interactionDOMElement=null,i.moveWhenInside=!1,i.eventsAdded=!1,i.tickerAdded=!1,i.mouseOverRenderer=!1,i.supportsTouchEvents="ontouchstart"in window,i.supportsPointerEvents=!!window.PointerEvent,i.onPointerUp=i.onPointerUp.bind(i),i.processPointerUp=i.processPointerUp.bind(i),i.onPointerCancel=i.onPointerCancel.bind(i),i.processPointerCancel=i.processPointerCancel.bind(i),i.onPointerDown=i.onPointerDown.bind(i),i.processPointerDown=i.processPointerDown.bind(i),i.onPointerMove=i.onPointerMove.bind(i),i.processPointerMove=i.processPointerMove.bind(i),i.onPointerOut=i.onPointerOut.bind(i),i.processPointerOverOut=i.processPointerOverOut.bind(i),i.onPointerOver=i.onPointerOver.bind(i),i.cursorStyles={default:"inherit",pointer:"pointer"},i.currentCursorMode=null,i.cursor=null,i.resolution=1,i.delayedEvents=[],i.search=new nr,i._tempDisplayObject=new je,i._useSystemTicker=void 0===r.useSystemTicker||r.useSystemTicker,i.setTargetElement(i.renderer.view,i.renderer.resolution),i}return function(t,e){function r(){this.constructor=t}er(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(r,e),Object.defineProperty(r.prototype,"useSystemTicker",{get:function(){return this._useSystemTicker},set:function(t){this._useSystemTicker=t,t?this.addTickerListener():this.removeTickerListener()},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"lastObjectRendered",{get:function(){return this.renderer._lastObjectRendered||this._tempDisplayObject},enumerable:!1,configurable:!0}),r.prototype.hitTest=function(t,e){return ar.target=null,ar.data.global=t,e||(e=this.lastObjectRendered),this.processInteractive(ar,e,null,!0),ar.target},r.prototype.setTargetElement=function(t,e){void 0===e&&(e=1),this.removeTickerListener(),this.removeEvents(),this.interactionDOMElement=t,this.resolution=e,this.addEvents(),this.addTickerListener()},r.prototype.addTickerListener=function(){!this.tickerAdded&&this.interactionDOMElement&&this._useSystemTicker&&(Qe.system.add(this.tickerUpdate,this,t.UPDATE_PRIORITY.INTERACTION),this.tickerAdded=!0)},r.prototype.removeTickerListener=function(){this.tickerAdded&&(Qe.system.remove(this.tickerUpdate,this),this.tickerAdded=!1)},r.prototype.addEvents=function(){if(!this.eventsAdded&&this.interactionDOMElement){var t=this.interactionDOMElement.style;window.navigator.msPointerEnabled?(t.msContentZooming="none",t.msTouchAction="none"):this.supportsPointerEvents&&(t.touchAction="none"),this.supportsPointerEvents?(window.document.addEventListener("pointermove",this.onPointerMove,!0),this.interactionDOMElement.addEventListener("pointerdown",this.onPointerDown,!0),this.interactionDOMElement.addEventListener("pointerleave",this.onPointerOut,!0),this.interactionDOMElement.addEventListener("pointerover",this.onPointerOver,!0),window.addEventListener("pointercancel",this.onPointerCancel,!0),window.addEventListener("pointerup",this.onPointerUp,!0)):(window.document.addEventListener("mousemove",this.onPointerMove,!0),this.interactionDOMElement.addEventListener("mousedown",this.onPointerDown,!0),this.interactionDOMElement.addEventListener("mouseout",this.onPointerOut,!0),this.interactionDOMElement.addEventListener("mouseover",this.onPointerOver,!0),window.addEventListener("mouseup",this.onPointerUp,!0)),this.supportsTouchEvents&&(this.interactionDOMElement.addEventListener("touchstart",this.onPointerDown,!0),this.interactionDOMElement.addEventListener("touchcancel",this.onPointerCancel,!0),this.interactionDOMElement.addEventListener("touchend",this.onPointerUp,!0),this.interactionDOMElement.addEventListener("touchmove",this.onPointerMove,!0)),this.eventsAdded=!0}},r.prototype.removeEvents=function(){if(this.eventsAdded&&this.interactionDOMElement){var t=this.interactionDOMElement.style;window.navigator.msPointerEnabled?(t.msContentZooming="",t.msTouchAction=""):this.supportsPointerEvents&&(t.touchAction=""),this.supportsPointerEvents?(window.document.removeEventListener("pointermove",this.onPointerMove,!0),this.interactionDOMElement.removeEventListener("pointerdown",this.onPointerDown,!0),this.interactionDOMElement.removeEventListener("pointerleave",this.onPointerOut,!0),this.interactionDOMElement.removeEventListener("pointerover",this.onPointerOver,!0),window.removeEventListener("pointercancel",this.onPointerCancel,!0),window.removeEventListener("pointerup",this.onPointerUp,!0)):(window.document.removeEventListener("mousemove",this.onPointerMove,!0),this.interactionDOMElement.removeEventListener("mousedown",this.onPointerDown,!0),this.interactionDOMElement.removeEventListener("mouseout",this.onPointerOut,!0),this.interactionDOMElement.removeEventListener("mouseover",this.onPointerOver,!0),window.removeEventListener("mouseup",this.onPointerUp,!0)),this.supportsTouchEvents&&(this.interactionDOMElement.removeEventListener("touchstart",this.onPointerDown,!0),this.interactionDOMElement.removeEventListener("touchcancel",this.onPointerCancel,!0),this.interactionDOMElement.removeEventListener("touchend",this.onPointerUp,!0),this.interactionDOMElement.removeEventListener("touchmove",this.onPointerMove,!0)),this.interactionDOMElement=null,this.eventsAdded=!1}},r.prototype.tickerUpdate=function(t){this._deltaTime+=t,this._deltaTime<this.interactionFrequency||(this._deltaTime=0,this.update())},r.prototype.update=function(){if(this.interactionDOMElement)if(this._didMove)this._didMove=!1;else{for(var t in this.cursor=null,this.activeInteractionData)if(this.activeInteractionData.hasOwnProperty(t)){var e=this.activeInteractionData[t];if(e.originalEvent&&"touch"!==e.pointerType){var r=this.configureInteractionEventForDOMEvent(this.eventData,e.originalEvent,e);this.processInteractive(r,this.lastObjectRendered,this.processPointerOverOut,!0)}}this.setCursorMode(this.cursor)}},r.prototype.setCursorMode=function(t){if(t=t||"default",this.currentCursorMode!==t){this.currentCursorMode=t;var e=this.cursorStyles[t];if(e)switch(typeof e){case"string":this.interactionDOMElement.style.cursor=e;break;case"function":e(t);break;case"object":Object.assign(this.interactionDOMElement.style,e)}else"string"!=typeof t||Object.prototype.hasOwnProperty.call(this.cursorStyles,t)||(this.interactionDOMElement.style.cursor=t)}},r.prototype.dispatchEvent=function(t,e,r){r.stopPropagationHint&&t!==r.stopsPropagatingAt||(r.currentTarget=t,r.type=e,t.emit(e,r),t[e]&&t[e](r))},r.prototype.delayDispatchEvent=function(t,e,r){this.delayedEvents.push({displayObject:t,eventString:e,eventData:r})},r.prototype.mapPositionToPoint=function(t,e,r){var i;i=this.interactionDOMElement.parentElement?this.interactionDOMElement.getBoundingClientRect():{x:0,y:0,width:0,height:0};var n=1/this.resolution;t.x=(e-i.left)*(this.interactionDOMElement.width/i.width)*n,t.y=(r-i.top)*(this.interactionDOMElement.height/i.height)*n},r.prototype.processInteractive=function(t,e,r,i){var n=this.search.findHit(t,e,r,i),o=this.delayedEvents;if(!o.length)return n;t.stopPropagationHint=!1;var s=o.length;this.delayedEvents=[];for(var a=0;a<s;a++){var h=o[a],u=h.displayObject,l=h.eventString,c=h.eventData;c.stopsPropagatingAt===u&&(c.stopPropagationHint=!0),this.dispatchEvent(u,l,c)}return n},r.prototype.onPointerDown=function(t){if(!this.supportsTouchEvents||"touch"!==t.pointerType){var e=this.normalizeToPointerData(t);if(this.autoPreventDefault&&e[0].isNormalized)(t.cancelable||!("cancelable"in t))&&t.preventDefault();for(var r=e.length,i=0;i<r;i++){var n=e[i],o=this.getInteractionDataForPointerId(n),s=this.configureInteractionEventForDOMEvent(this.eventData,n,o);if(s.data.originalEvent=t,this.processInteractive(s,this.lastObjectRendered,this.processPointerDown,!0),this.emit("pointerdown",s),"touch"===n.pointerType)this.emit("touchstart",s);else if("mouse"===n.pointerType||"pen"===n.pointerType){var a=2===n.button;this.emit(a?"rightdown":"mousedown",this.eventData)}}}},r.prototype.processPointerDown=function(t,e,r){var i=t.data,n=t.data.identifier;if(r)if(e.trackedPointers[n]||(e.trackedPointers[n]=new ir(n)),this.dispatchEvent(e,"pointerdown",t),"touch"===i.pointerType)this.dispatchEvent(e,"touchstart",t);else if("mouse"===i.pointerType||"pen"===i.pointerType){var o=2===i.button;o?e.trackedPointers[n].rightDown=!0:e.trackedPointers[n].leftDown=!0,this.dispatchEvent(e,o?"rightdown":"mousedown",t)}},r.prototype.onPointerComplete=function(t,e,r){for(var i=this.normalizeToPointerData(t),n=i.length,o=t.target!==this.interactionDOMElement?"outside":"",s=0;s<n;s++){var a=i[s],h=this.getInteractionDataForPointerId(a),u=this.configureInteractionEventForDOMEvent(this.eventData,a,h);if(u.data.originalEvent=t,this.processInteractive(u,this.lastObjectRendered,r,e||!o),this.emit(e?"pointercancel":"pointerup"+o,u),"mouse"===a.pointerType||"pen"===a.pointerType){var l=2===a.button;this.emit(l?"rightup"+o:"mouseup"+o,u)}else"touch"===a.pointerType&&(this.emit(e?"touchcancel":"touchend"+o,u),this.releaseInteractionDataForPointerId(a.pointerId))}},r.prototype.onPointerCancel=function(t){this.supportsTouchEvents&&"touch"===t.pointerType||this.onPointerComplete(t,!0,this.processPointerCancel)},r.prototype.processPointerCancel=function(t,e){var r=t.data,i=t.data.identifier;void 0!==e.trackedPointers[i]&&(delete e.trackedPointers[i],this.dispatchEvent(e,"pointercancel",t),"touch"===r.pointerType&&this.dispatchEvent(e,"touchcancel",t))},r.prototype.onPointerUp=function(t){this.supportsTouchEvents&&"touch"===t.pointerType||this.onPointerComplete(t,!1,this.processPointerUp)},r.prototype.processPointerUp=function(t,e,r){var i=t.data,n=t.data.identifier,o=e.trackedPointers[n],s="touch"===i.pointerType,a="mouse"===i.pointerType||"pen"===i.pointerType,h=!1;if(a){var u=2===i.button,l=ir.FLAGS,c=u?l.RIGHT_DOWN:l.LEFT_DOWN,d=void 0!==o&&o.flags&c;r?(this.dispatchEvent(e,u?"rightup":"mouseup",t),d&&(this.dispatchEvent(e,u?"rightclick":"click",t),h=!0)):d&&this.dispatchEvent(e,u?"rightupoutside":"mouseupoutside",t),o&&(u?o.rightDown=!1:o.leftDown=!1)}r?(this.dispatchEvent(e,"pointerup",t),s&&this.dispatchEvent(e,"touchend",t),o&&(a&&!h||this.dispatchEvent(e,"pointertap",t),s&&(this.dispatchEvent(e,"tap",t),o.over=!1))):o&&(this.dispatchEvent(e,"pointerupoutside",t),s&&this.dispatchEvent(e,"touchendoutside",t)),o&&o.none&&delete e.trackedPointers[n]},r.prototype.onPointerMove=function(t){if(!this.supportsTouchEvents||"touch"!==t.pointerType){var e=this.normalizeToPointerData(t);"mouse"!==e[0].pointerType&&"pen"!==e[0].pointerType||(this._didMove=!0,this.cursor=null);for(var r=e.length,i=0;i<r;i++){var n=e[i],o=this.getInteractionDataForPointerId(n),s=this.configureInteractionEventForDOMEvent(this.eventData,n,o);s.data.originalEvent=t,this.processInteractive(s,this.lastObjectRendered,this.processPointerMove,!0),this.emit("pointermove",s),"touch"===n.pointerType&&this.emit("touchmove",s),"mouse"!==n.pointerType&&"pen"!==n.pointerType||this.emit("mousemove",s)}"mouse"===e[0].pointerType&&this.setCursorMode(this.cursor)}},r.prototype.processPointerMove=function(t,e,r){var i=t.data,n="touch"===i.pointerType,o="mouse"===i.pointerType||"pen"===i.pointerType;o&&this.processPointerOverOut(t,e,r),this.moveWhenInside&&!r||(this.dispatchEvent(e,"pointermove",t),n&&this.dispatchEvent(e,"touchmove",t),o&&this.dispatchEvent(e,"mousemove",t))},r.prototype.onPointerOut=function(t){if(!this.supportsTouchEvents||"touch"!==t.pointerType){var e=this.normalizeToPointerData(t)[0];"mouse"===e.pointerType&&(this.mouseOverRenderer=!1,this.setCursorMode(null));var r=this.getInteractionDataForPointerId(e),i=this.configureInteractionEventForDOMEvent(this.eventData,e,r);i.data.originalEvent=e,this.processInteractive(i,this.lastObjectRendered,this.processPointerOverOut,!1),this.emit("pointerout",i),"mouse"===e.pointerType||"pen"===e.pointerType?this.emit("mouseout",i):this.releaseInteractionDataForPointerId(r.identifier)}},r.prototype.processPointerOverOut=function(t,e,r){var i=t.data,n=t.data.identifier,o="mouse"===i.pointerType||"pen"===i.pointerType,s=e.trackedPointers[n];r&&!s&&(s=e.trackedPointers[n]=new ir(n)),void 0!==s&&(r&&this.mouseOverRenderer?(s.over||(s.over=!0,this.delayDispatchEvent(e,"pointerover",t),o&&this.delayDispatchEvent(e,"mouseover",t)),o&&null===this.cursor&&(this.cursor=e.cursor)):s.over&&(s.over=!1,this.dispatchEvent(e,"pointerout",this.eventData),o&&this.dispatchEvent(e,"mouseout",t),s.none&&delete e.trackedPointers[n]))},r.prototype.onPointerOver=function(t){var e=this.normalizeToPointerData(t)[0],r=this.getInteractionDataForPointerId(e),i=this.configureInteractionEventForDOMEvent(this.eventData,e,r);i.data.originalEvent=e,"mouse"===e.pointerType&&(this.mouseOverRenderer=!0),this.emit("pointerover",i),"mouse"!==e.pointerType&&"pen"!==e.pointerType||this.emit("mouseover",i)},r.prototype.getInteractionDataForPointerId=function(t){var e,r=t.pointerId;return r===sr||"mouse"===t.pointerType?e=this.mouse:this.activeInteractionData[r]?e=this.activeInteractionData[r]:((e=this.interactionDataPool.pop()||new tr).identifier=r,this.activeInteractionData[r]=e),e.copyEvent(t),e},r.prototype.releaseInteractionDataForPointerId=function(t){var e=this.activeInteractionData[t];e&&(delete this.activeInteractionData[t],e.reset(),this.interactionDataPool.push(e))},r.prototype.configureInteractionEventForDOMEvent=function(t,e,r){return t.data=r,this.mapPositionToPoint(r.global,e.clientX,e.clientY),"touch"===e.pointerType&&(e.globalX=r.global.x,e.globalY=r.global.y),r.originalEvent=e,t.reset(),t},r.prototype.normalizeToPointerData=function(t){var e=[];if(this.supportsTouchEvents&&t instanceof TouchEvent)for(var r=0,i=t.changedTouches.length;r<i;r++){var n=t.changedTouches[r];void 0===n.button&&(n.button=t.touches.length?1:0),void 0===n.buttons&&(n.buttons=t.touches.length?1:0),void 0===n.isPrimary&&(n.isPrimary=1===t.touches.length&&"touchstart"===t.type),void 0===n.width&&(n.width=n.radiusX||1),void 0===n.height&&(n.height=n.radiusY||1),void 0===n.tiltX&&(n.tiltX=0),void 0===n.tiltY&&(n.tiltY=0),void 0===n.pointerType&&(n.pointerType="touch"),void 0===n.pointerId&&(n.pointerId=n.identifier||0),void 0===n.pressure&&(n.pressure=n.force||.5),void 0===n.twist&&(n.twist=0),void 0===n.tangentialPressure&&(n.tangentialPressure=0),void 0===n.layerX&&(n.layerX=n.offsetX=n.clientX),void 0===n.layerY&&(n.layerY=n.offsetY=n.clientY),n.isNormalized=!0,e.push(n)}else if(!(t instanceof MouseEvent)||this.supportsPointerEvents&&t instanceof window.PointerEvent)e.push(t);else{var o=t;void 0===o.isPrimary&&(o.isPrimary=!0),void 0===o.width&&(o.width=1),void 0===o.height&&(o.height=1),void 0===o.tiltX&&(o.tiltX=0),void 0===o.tiltY&&(o.tiltY=0),void 0===o.pointerType&&(o.pointerType="mouse"),void 0===o.pointerId&&(o.pointerId=sr),void 0===o.pressure&&(o.pressure=.5),void 0===o.twist&&(o.twist=0),void 0===o.tangentialPressure&&(o.tangentialPressure=0),o.isNormalized=!0,e.push(o)}return e},r.prototype.destroy=function(){this.removeEvents(),this.removeTickerListener(),this.removeAllListeners(),this.renderer=null,this.mouse=null,this.eventData=null,this.interactionDOMElement=null,this.onPointerDown=null,this.processPointerDown=null,this.onPointerUp=null,this.processPointerUp=null,this.onPointerCancel=null,this.processPointerCancel=null,this.onPointerMove=null,this.processPointerMove=null,this.onPointerOut=null,this.processPointerOverOut=null,this.onPointerOver=null,this.search=null},r}(C),ur=function(){function t(t){this.items=[],this._name=t,this._aliasCount=0}return t.prototype.emit=function(t,e,r,i,n,o,s,a){if(arguments.length>8)throw new Error("max arguments reached");var h=this.name,u=this.items;this._aliasCount++;for(var l=0,c=u.length;l<c;l++)u[l][h](t,e,r,i,n,o,s,a);return u===this.items&&this._aliasCount--,this},t.prototype.ensureNonAliasedItems=function(){this._aliasCount>0&&this.items.length>1&&(this._aliasCount=0,this.items=this.items.slice(0))},t.prototype.add=function(t){return t[this._name]&&(this.ensureNonAliasedItems(),this.remove(t),this.items.push(t)),this},t.prototype.remove=function(t){var e=this.items.indexOf(t);return-1!==e&&(this.ensureNonAliasedItems(),this.items.splice(e,1)),this},t.prototype.contains=function(t){return-1!==this.items.indexOf(t)},t.prototype.removeAll=function(){return this.ensureNonAliasedItems(),this.items.length=0,this},t.prototype.destroy=function(){this.removeAll(),this.items=null,this._name=null},Object.defineProperty(t.prototype,"empty",{get:function(){return 0===this.items.length},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"name",{get:function(){return this._name},enumerable:!1,configurable:!0}),t}();Object.defineProperties(ur.prototype,{dispatch:{value:ur.prototype.emit},run:{value:ur.prototype.emit}}),D.PREFER_ENV=M.any?t.ENV.WEBGL:t.ENV.WEBGL2,D.STRICT_TEXTURE_CACHE=!1;var lr=[];function cr(t,e){if(!t)return null;var r="";if("string"==typeof t){var i=/\.(\w{3,4})(?:$|\?|#)/i.exec(t);i&&(r=i[1].toLowerCase())}for(var n=lr.length-1;n>=0;--n){var o=lr[n];if(o.test&&o.test(t,r))return new o(t,e)}throw new Error("Unrecognized source type to auto-detect Resource")}var dr=function(t,e){return(dr=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};function pr(t,e){function r(){this.constructor=t}dr(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var fr=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this._width=t,this._height=e,this.destroyed=!1,this.internal=!1,this.onResize=new ur("setRealSize"),this.onUpdate=new ur("update"),this.onError=new ur("onError")}return t.prototype.bind=function(t){this.onResize.add(t),this.onUpdate.add(t),this.onError.add(t),(this._width||this._height)&&this.onResize.emit(this._width,this._height)},t.prototype.unbind=function(t){this.onResize.remove(t),this.onUpdate.remove(t),this.onError.remove(t)},t.prototype.resize=function(t,e){t===this._width&&e===this._height||(this._width=t,this._height=e,this.onResize.emit(t,e))},Object.defineProperty(t.prototype,"valid",{get:function(){return!!this._width&&!!this._height},enumerable:!1,configurable:!0}),t.prototype.update=function(){this.destroyed||this.onUpdate.emit()},t.prototype.load=function(){return Promise.resolve(this)},Object.defineProperty(t.prototype,"width",{get:function(){return this._width},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this._height},enumerable:!1,configurable:!0}),t.prototype.style=function(t,e,r){return!1},t.prototype.dispose=function(){},t.prototype.destroy=function(){this.destroyed||(this.destroyed=!0,this.dispose(),this.onError.removeAll(),this.onError=null,this.onResize.removeAll(),this.onResize=null,this.onUpdate.removeAll(),this.onUpdate=null)},t.test=function(t,e){return!1},t}(),mr=function(e){function r(t,r){var i=this,n=r||{},o=n.width,s=n.height;if(!o||!s)throw new Error("BufferResource width or height invalid");return(i=e.call(this,o,s)||this).data=t,i}return pr(r,e),r.prototype.upload=function(e,r,i){var n=e.gl;return n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.alphaMode===t.ALPHA_MODES.UNPACK),i.width===r.width&&i.height===r.height?n.texSubImage2D(r.target,0,0,0,r.width,r.height,r.format,r.type,this.data):(i.width=r.width,i.height=r.height,n.texImage2D(r.target,0,i.internalFormat,r.width,r.height,0,r.format,i.type,this.data)),!0},r.prototype.dispose=function(){this.data=null},r.test=function(t){return t instanceof Float32Array||t instanceof Uint8Array||t instanceof Uint32Array},r}(fr),vr={scaleMode:t.SCALE_MODES.NEAREST,format:t.FORMATS.RGBA,alphaMode:t.ALPHA_MODES.NPM},gr=function(e){function r(r,i){void 0===r&&(r=null),void 0===i&&(i=null);var n=e.call(this)||this,o=(i=i||{}).alphaMode,s=i.mipmap,a=i.anisotropicLevel,h=i.scaleMode,u=i.width,l=i.height,c=i.wrapMode,d=i.format,p=i.type,f=i.target,m=i.resolution,v=i.resourceOptions;return!r||r instanceof fr||((r=cr(r,v)).internal=!0),n.width=u||0,n.height=l||0,n.resolution=m||D.RESOLUTION,n.mipmap=void 0!==s?s:D.MIPMAP_TEXTURES,n.anisotropicLevel=void 0!==a?a:D.ANISOTROPIC_LEVEL,n.wrapMode=c||D.WRAP_MODE,n.scaleMode=void 0!==h?h:D.SCALE_MODE,n.format=d||t.FORMATS.RGBA,n.type=p||t.TYPES.UNSIGNED_BYTE,n.target=f||t.TARGETS.TEXTURE_2D,n.alphaMode=void 0!==o?o:t.ALPHA_MODES.UNPACK,void 0!==i.premultiplyAlpha&&(n.premultiplyAlpha=i.premultiplyAlpha),n.uid=ie(),n.touched=0,n.isPowerOfTwo=!1,n._refreshPOT(),n._glTextures={},n.dirtyId=0,n.dirtyStyleId=0,n.cacheId=null,n.valid=u>0&&l>0,n.textureCacheIds=[],n.destroyed=!1,n.resource=null,n._batchEnabled=0,n._batchLocation=0,n.parentTextureArray=null,n.setResource(r),n}return pr(r,e),Object.defineProperty(r.prototype,"realWidth",{get:function(){return Math.ceil(this.width*this.resolution-1e-4)},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"realHeight",{get:function(){return Math.ceil(this.height*this.resolution-1e-4)},enumerable:!1,configurable:!0}),r.prototype.setStyle=function(t,e){var r;return void 0!==t&&t!==this.scaleMode&&(this.scaleMode=t,r=!0),void 0!==e&&e!==this.mipmap&&(this.mipmap=e,r=!0),r&&this.dirtyStyleId++,this},r.prototype.setSize=function(t,e,r){return this.resolution=r||this.resolution,this.width=t,this.height=e,this._refreshPOT(),this.update(),this},r.prototype.setRealSize=function(t,e,r){return this.resolution=r||this.resolution,this.width=t/this.resolution,this.height=e/this.resolution,this._refreshPOT(),this.update(),this},r.prototype._refreshPOT=function(){this.isPowerOfTwo=Qt(this.realWidth)&&Qt(this.realHeight)},r.prototype.setResolution=function(t){var e=this.resolution;return e===t?this:(this.resolution=t,this.valid&&(this.width=this.width*e/t,this.height=this.height*e/t,this.emit("update",this)),this._refreshPOT(),this)},r.prototype.setResource=function(t){if(this.resource===t)return this;if(this.resource)throw new Error("Resource can be set only once");return t.bind(this),this.resource=t,this},r.prototype.update=function(){this.valid?(this.dirtyId++,this.dirtyStyleId++,this.emit("update",this)):this.width>0&&this.height>0&&(this.valid=!0,this.emit("loaded",this),this.emit("update",this))},r.prototype.onError=function(t){this.emit("error",this,t)},r.prototype.destroy=function(){this.resource&&(this.resource.unbind(this),this.resource.internal&&this.resource.destroy(),this.resource=null),this.cacheId&&(delete he[this.cacheId],delete ae[this.cacheId],this.cacheId=null),this.dispose(),r.removeFromCache(this),this.textureCacheIds=null,this.destroyed=!0},r.prototype.dispose=function(){this.emit("dispose",this)},r.prototype.castToBaseTexture=function(){return this},r.from=function(t,e,i){void 0===i&&(i=D.STRICT_TEXTURE_CACHE);var n="string"==typeof t,o=null;n?o=t:(t._pixiId||(t._pixiId="pixiid_"+ie()),o=t._pixiId);var s=he[o];if(n&&i&&!s)throw new Error('The cacheId "'+o+'" does not exist in BaseTextureCache.');return s||((s=new r(t,e)).cacheId=o,r.addToCache(s,o)),s},r.fromBuffer=function(e,i,n,o){e=e||new Float32Array(i*n*4);var s=new mr(e,{width:i,height:n}),a=e instanceof Float32Array?t.TYPES.FLOAT:t.TYPES.UNSIGNED_BYTE;return new r(s,Object.assign(vr,o||{width:i,height:n,type:a}))},r.addToCache=function(t,e){e&&(-1===t.textureCacheIds.indexOf(e)&&t.textureCacheIds.push(e),he[e]&&console.warn("BaseTexture added to the cache with an id ["+e+"] that already had an entry"),he[e]=t)},r.removeFromCache=function(t){if("string"==typeof t){var e=he[t];if(e){var r=e.textureCacheIds.indexOf(t);return r>-1&&e.textureCacheIds.splice(r,1),delete he[t],e}}else if(t&&t.textureCacheIds){for(var i=0;i<t.textureCacheIds.length;++i)delete he[t.textureCacheIds[i]];return t.textureCacheIds.length=0,t}return null},r._globalBatch=0,r}(C),yr=function(t){function e(e,r){var i=this,n=r||{},o=n.width,s=n.height;(i=t.call(this,o,s)||this).items=[],i.itemDirtyIds=[];for(var a=0;a<e;a++){var h=new gr;i.items.push(h),i.itemDirtyIds.push(-2)}return i.length=e,i._load=null,i.baseTexture=null,i}return pr(e,t),e.prototype.initFromArray=function(t,e){for(var r=0;r<this.length;r++)t[r]&&(t[r].castToBaseTexture?this.addBaseTextureAt(t[r].castToBaseTexture(),r):t[r]instanceof fr?this.addResourceAt(t[r],r):this.addResourceAt(cr(t[r],e),r))},e.prototype.dispose=function(){for(var t=0,e=this.length;t<e;t++)this.items[t].destroy();this.items=null,this.itemDirtyIds=null,this._load=null},e.prototype.addResourceAt=function(t,e){if(!this.items[e])throw new Error("Index "+e+" is out of bounds");return t.valid&&!this.valid&&this.resize(t.width,t.height),this.items[e].setResource(t),this},e.prototype.bind=function(e){if(null!==this.baseTexture)throw new Error("Only one base texture per TextureArray is allowed");t.prototype.bind.call(this,e);for(var r=0;r<this.length;r++)this.items[r].parentTextureArray=e,this.items[r].on("update",e.update,e)},e.prototype.unbind=function(e){t.prototype.unbind.call(this,e);for(var r=0;r<this.length;r++)this.items[r].parentTextureArray=null,this.items[r].off("update",e.update,e)},e.prototype.load=function(){var t=this;if(this._load)return this._load;var e=this.items.map(function(t){return t.resource}).filter(function(t){return t}).map(function(t){return t.load()});return this._load=Promise.all(e).then(function(){var e=t.items[0],r=e.realWidth,i=e.realHeight;return t.resize(r,i),Promise.resolve(t)}),this._load},e}(fr),_r=function(e){function r(t,r){var i,n,o=this,s=r||{},a=s.width,h=s.height;return Array.isArray(t)?(i=t,n=t.length):n=t,o=e.call(this,n,{width:a,height:h})||this,i&&o.initFromArray(i,r),o}return pr(r,e),r.prototype.addBaseTextureAt=function(t,e){if(!t.resource)throw new Error("ArrayResource does not support RenderTexture");return this.addResourceAt(t.resource,e),this},r.prototype.bind=function(r){e.prototype.bind.call(this,r),r.target=t.TARGETS.TEXTURE_2D_ARRAY},r.prototype.upload=function(t,e,r){var i=this.length,n=this.itemDirtyIds,o=this.items,s=t.gl;r.dirtyId<0&&s.texImage3D(s.TEXTURE_2D_ARRAY,0,e.format,this._width,this._height,i,0,e.format,e.type,null);for(var a=0;a<i;a++){var h=o[a];n[a]<h.dirtyId&&(n[a]=h.dirtyId,h.valid&&s.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,a,h.resource.width,h.resource.height,1,e.format,e.type,h.resource.source))}return!0},r}(yr),xr=function(e){function r(t){var r=this,i=t,n=i.naturalWidth||i.videoWidth||i.width,o=i.naturalHeight||i.videoHeight||i.height;return(r=e.call(this,n,o)||this).source=t,r.noSubImage=!1,r}return pr(r,e),r.crossOrigin=function(t,e,r){void 0===r&&0!==e.indexOf("data:")?t.crossOrigin=pe(e):!1!==r&&(t.crossOrigin="string"==typeof r?r:"anonymous")},r.prototype.upload=function(e,r,i,n){var o=e.gl,s=r.realWidth,a=r.realHeight;return n=n||this.source,o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.alphaMode===t.ALPHA_MODES.UNPACK),this.noSubImage||r.target!==o.TEXTURE_2D||i.width!==s||i.height!==a?(i.width=s,i.height=a,o.texImage2D(r.target,0,r.format,r.format,r.type,n)):o.texSubImage2D(o.TEXTURE_2D,0,0,0,r.format,r.type,n),!0},r.prototype.update=function(){if(!this.destroyed){var t=this.source,r=t.naturalWidth||t.videoWidth||t.width,i=t.naturalHeight||t.videoHeight||t.height;this.resize(r,i),e.prototype.update.call(this)}},r.prototype.dispose=function(){this.source=null},r}(fr),br=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return pr(e,t),e.test=function(t){var e=window.OffscreenCanvas;return!!(e&&t instanceof e)||t instanceof HTMLCanvasElement},e}(xr),Er=function(e){function r(i,n){var o=this,s=n||{},a=s.width,h=s.height,u=s.autoLoad,l=s.linkBaseTexture;if(i&&i.length!==r.SIDES)throw new Error("Invalid length. Got "+i.length+", expected 6");o=e.call(this,6,{width:a,height:h})||this;for(var c=0;c<r.SIDES;c++)o.items[c].target=t.TARGETS.TEXTURE_CUBE_MAP_POSITIVE_X+c;return o.linkBaseTexture=!1!==l,i&&o.initFromArray(i,n),!1!==u&&o.load(),o}return pr(r,e),r.prototype.bind=function(r){e.prototype.bind.call(this,r),r.target=t.TARGETS.TEXTURE_CUBE_MAP},r.prototype.addBaseTextureAt=function(e,r,i){if(void 0===i&&(i=this.linkBaseTexture),!this.items[r])throw new Error("Index "+r+" is out of bounds");if(!this.linkBaseTexture||e.parentTextureArray||Object.keys(e._glTextures).length>0){if(!e.resource)throw new Error("CubeResource does not support copying of renderTexture.");this.addResourceAt(e.resource,r)}else e.target=t.TARGETS.TEXTURE_CUBE_MAP_POSITIVE_X+r,e.parentTextureArray=this.baseTexture,this.items[r]=e;return e.valid&&!this.valid&&this.resize(e.realWidth,e.realHeight),this.items[r]=e,this},r.prototype.upload=function(t,e,i){for(var n=this.itemDirtyIds,o=0;o<r.SIDES;o++){var s=this.items[o];n[o]<s.dirtyId&&(s.valid&&s.resource?(s.resource.upload(t,s,i),n[o]=s.dirtyId):n[o]<-1&&(t.gl.texImage2D(s.target,0,i.internalFormat,e.realWidth,e.realHeight,0,e.format,i.type,null),n[o]=-1))}return!0},r.test=function(t){return Array.isArray(t)&&t.length===r.SIDES},r.SIDES=6,r}(yr),Tr=function(e){function r(t,r){var i=this;if(r=r||{},!(t instanceof HTMLImageElement)){var n=new Image;xr.crossOrigin(n,t,r.crossorigin),n.src=t,t=n}return i=e.call(this,t)||this,!t.complete&&i._width&&i._height&&(i._width=0,i._height=0),i.url=t.src,i._process=null,i.preserveBitmap=!1,i.createBitmap=(void 0!==r.createBitmap?r.createBitmap:D.CREATE_IMAGE_BITMAP)&&!!window.createImageBitmap,i.alphaMode="number"==typeof r.alphaMode?r.alphaMode:null,void 0!==r.premultiplyAlpha&&(i.premultiplyAlpha=r.premultiplyAlpha),i.bitmap=null,i._load=null,!1!==r.autoLoad&&i.load(),i}return pr(r,e),r.prototype.load=function(t){var e=this;return this._load?this._load:(void 0!==t&&(this.createBitmap=t),this._load=new Promise(function(t,r){var i=e.source;e.url=i.src;var n=function(){e.destroyed||(i.onload=null,i.onerror=null,e.resize(i.width,i.height),e._load=null,e.createBitmap?t(e.process()):t(e))};i.complete&&i.src?n():(i.onload=n,i.onerror=function(t){r(t),e.onError.emit(t)})}),this._load)},r.prototype.process=function(){var e=this,r=this.source;return null!==this._process?this._process:null===this.bitmap&&window.createImageBitmap?(this._process=window.createImageBitmap(r,0,0,r.width,r.height,{premultiplyAlpha:this.alphaMode===t.ALPHA_MODES.UNPACK?"premultiply":"none"}).then(function(t){return e.destroyed?Promise.reject():(e.bitmap=t,e.update(),e._process=null,Promise.resolve(e))}),this._process):Promise.resolve(this)},r.prototype.upload=function(t,r,i){if("number"==typeof this.alphaMode&&(r.alphaMode=this.alphaMode),!this.createBitmap)return e.prototype.upload.call(this,t,r,i);if(!this.bitmap&&(this.process(),!this.bitmap))return!1;if(e.prototype.upload.call(this,t,r,i,this.bitmap),!this.preserveBitmap){var n=!0,o=r._glTextures;for(var s in o){var a=o[s];if(a!==i&&a.dirtyId!==r.dirtyId){n=!1;break}}n&&(this.bitmap.close&&this.bitmap.close(),this.bitmap=null)}return!0},r.prototype.dispose=function(){this.source.onload=null,this.source.onerror=null,e.prototype.dispose.call(this),this.bitmap&&(this.bitmap.close(),this.bitmap=null),this._process=null,this._load=null},r.test=function(t){return"string"==typeof t||t instanceof HTMLImageElement},r}(xr),Sr=function(t){function e(e,r){var i=this;return r=r||{},(i=t.call(this,document.createElement("canvas"))||this)._width=0,i._height=0,i.svg=e,i.scale=r.scale||1,i._overrideWidth=r.width,i._overrideHeight=r.height,i._resolve=null,i._crossorigin=r.crossorigin,i._load=null,!1!==r.autoLoad&&i.load(),i}return pr(e,t),e.prototype.load=function(){var t=this;return this._load?this._load:(this._load=new Promise(function(e){if(t._resolve=function(){t.resize(t.source.width,t.source.height),e(t)},/^\<svg/.test(t.svg.trim())){if(!btoa)throw new Error("Your browser doesn't support base64 conversions.");t.svg="data:image/svg+xml;base64,"+btoa(unescape(encodeURIComponent(t.svg)))}t._loadSvg()}),this._load)},e.prototype._loadSvg=function(){var t=this,e=new Image;xr.crossOrigin(e,this.svg,this._crossorigin),e.src=this.svg,e.onerror=function(r){t._resolve&&(e.onerror=null,t.onError.emit(r))},e.onload=function(){if(t._resolve){var r=e.width,i=e.height;if(!r||!i)throw new Error("The SVG image must have width and height defined (in pixels), canvas API needs them.");var n=r*t.scale,o=i*t.scale;(t._overrideWidth||t._overrideHeight)&&(n=t._overrideWidth||t._overrideHeight/i*r,o=t._overrideHeight||t._overrideWidth/r*i),n=Math.round(n),o=Math.round(o);var s=t.source;s.width=n,s.height=o,s._pixiId="canvas_"+ie(),s.getContext("2d").drawImage(e,0,0,r,i,0,0,n,o),t._resolve(),t._resolve=null}}},e.getSize=function(t){var r=e.SVG_SIZE.exec(t),i={};return r&&(i[r[1]]=Math.round(parseFloat(r[3])),i[r[5]]=Math.round(parseFloat(r[7]))),i},e.prototype.dispose=function(){t.prototype.dispose.call(this),this._resolve=null,this._crossorigin=null},e.test=function(t,e){return"svg"===e||"string"==typeof t&&/^data:image\/svg\+xml(;(charset=utf8|utf8))?;base64/.test(t)||"string"==typeof t&&0===t.indexOf("<svg")},e.SVG_SIZE=/<svg[^>]*(?:\s(width|height)=('|")(\d*(?:\.\d+)?)(?:px)?('|"))[^>]*(?:\s(width|height)=('|")(\d*(?:\.\d+)?)(?:px)?('|"))[^>]*>/i,e}(xr),wr=function(t){function e(r,i){var n=this;if(i=i||{},!(r instanceof HTMLVideoElement)){var o=document.createElement("video");o.setAttribute("preload","auto"),o.setAttribute("webkit-playsinline",""),o.setAttribute("playsinline",""),"string"==typeof r&&(r=[r]);var s=r[0].src||r[0];xr.crossOrigin(o,s,i.crossorigin);for(var a=0;a<r.length;++a){var h=document.createElement("source"),u=r[a],l=u.src,c=u.mime,d=(l=l||r[a]).split("?").shift().toLowerCase(),p=d.substr(d.lastIndexOf(".")+1);c=c||e.MIME_TYPES[p]||"video/"+p,h.src=l,h.type=c,o.appendChild(h)}r=o}return(n=t.call(this,r)||this).noSubImage=!0,n._autoUpdate=!0,n._isConnectedToTicker=!1,n._updateFPS=i.updateFPS||0,n._msToNextUpdate=0,n.autoPlay=!1!==i.autoPlay,n._load=null,n._resolve=null,n._onCanPlay=n._onCanPlay.bind(n),n._onError=n._onError.bind(n),!1!==i.autoLoad&&n.load(),n}return pr(e,t),e.prototype.update=function(e){if(void 0===e&&(e=0),!this.destroyed){var r=Qe.shared.elapsedMS*this.source.playbackRate;this._msToNextUpdate=Math.floor(this._msToNextUpdate-r),(!this._updateFPS||this._msToNextUpdate<=0)&&(t.prototype.update.call(this),this._msToNextUpdate=this._updateFPS?Math.floor(1e3/this._updateFPS):0)}},e.prototype.load=function(){var t=this;if(this._load)return this._load;var e=this.source;return(e.readyState===e.HAVE_ENOUGH_DATA||e.readyState===e.HAVE_FUTURE_DATA)&&e.width&&e.height&&(e.complete=!0),e.addEventListener("play",this._onPlayStart.bind(this)),e.addEventListener("pause",this._onPlayStop.bind(this)),this._isSourceReady()?this._onCanPlay():(e.addEventListener("canplay",this._onCanPlay),e.addEventListener("canplaythrough",this._onCanPlay),e.addEventListener("error",this._onError,!0)),this._load=new Promise(function(r){t.valid?r(t):(t._resolve=r,e.load())}),this._load},e.prototype._onError=function(t){this.source.removeEventListener("error",this._onError,!0),this.onError.emit(t)},e.prototype._isSourcePlaying=function(){var t=this.source;return t.currentTime>0&&!1===t.paused&&!1===t.ended&&t.readyState>2},e.prototype._isSourceReady=function(){var t=this.source;return 3===t.readyState||4===t.readyState},e.prototype._onPlayStart=function(){this.valid||this._onCanPlay(),this.autoUpdate&&!this._isConnectedToTicker&&(Qe.shared.add(this.update,this),this._isConnectedToTicker=!0)},e.prototype._onPlayStop=function(){this._isConnectedToTicker&&(Qe.shared.remove(this.update,this),this._isConnectedToTicker=!1)},e.prototype._onCanPlay=function(){var t=this.source;t.removeEventListener("canplay",this._onCanPlay),t.removeEventListener("canplaythrough",this._onCanPlay);var e=this.valid;this.resize(t.videoWidth,t.videoHeight),!e&&this._resolve&&(this._resolve(this),this._resolve=null),this._isSourcePlaying()?this._onPlayStart():this.autoPlay&&t.play()},e.prototype.dispose=function(){this._isConnectedToTicker&&Qe.shared.remove(this.update,this);var e=this.source;e&&(e.removeEventListener("error",this._onError,!0),e.pause(),e.src="",e.load()),t.prototype.dispose.call(this)},Object.defineProperty(e.prototype,"autoUpdate",{get:function(){return this._autoUpdate},set:function(t){t!==this._autoUpdate&&(this._autoUpdate=t,!this._autoUpdate&&this._isConnectedToTicker?(Qe.shared.remove(this.update,this),this._isConnectedToTicker=!1):this._autoUpdate&&!this._isConnectedToTicker&&this._isSourcePlaying()&&(Qe.shared.add(this.update,this),this._isConnectedToTicker=!0))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"updateFPS",{get:function(){return this._updateFPS},set:function(t){t!==this._updateFPS&&(this._updateFPS=t)},enumerable:!1,configurable:!0}),e.test=function(t,r){return t instanceof HTMLVideoElement||e.TYPES.indexOf(r)>-1},e.TYPES=["mp4","m4v","webm","ogg","ogv","h264","avi","mov"],e.MIME_TYPES={ogv:"video/ogg",mov:"video/quicktime",m4v:"video/mp4"},e}(xr),Pr=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return pr(e,t),e.test=function(t){return!!window.createImageBitmap&&t instanceof ImageBitmap},e}(xr);lr.push(Tr,Pr,br,wr,Sr,mr,Er,_r);var Ir={Resource:fr,BaseImageResource:xr,INSTALLED:lr,autoDetectResource:cr,AbstractMultiResource:yr,ArrayResource:_r,BufferResource:mr,CanvasResource:br,CubeResource:Er,ImageResource:Tr,SVGResource:Sr,VideoResource:wr,ImageBitmapResource:Pr},Ar=function(){function t(t){this.renderer=t}return t.prototype.destroy=function(){this.renderer=null},t}(),Or=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return pr(r,e),r.prototype.upload=function(e,r,i){var n=e.gl;return n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.alphaMode===t.ALPHA_MODES.UNPACK),i.width===r.width&&i.height===r.height?n.texSubImage2D(r.target,0,0,0,r.width,r.height,r.format,r.type,this.data):(i.width=r.width,i.height=r.height,n.texImage2D(r.target,0,1===e.context.webGLVersion?n.DEPTH_COMPONENT:n.DEPTH_COMPONENT16,r.width,r.height,0,r.format,r.type,this.data)),!0},r}(mr),Mr=function(){function e(e,r){this.width=Math.ceil(e||100),this.height=Math.ceil(r||100),this.stencil=!1,this.depth=!1,this.dirtyId=0,this.dirtyFormat=0,this.dirtySize=0,this.depthTexture=null,this.colorTextures=[],this.glFramebuffers={},this.disposeRunner=new ur("disposeFramebuffer"),this.multisample=t.MSAA_QUALITY.NONE}return Object.defineProperty(e.prototype,"colorTexture",{get:function(){return this.colorTextures[0]},enumerable:!1,configurable:!0}),e.prototype.addColorTexture=function(e,r){return void 0===e&&(e=0),this.colorTextures[e]=r||new gr(null,{scaleMode:t.SCALE_MODES.NEAREST,resolution:1,mipmap:t.MIPMAP_MODES.OFF,width:this.width,height:this.height}),this.dirtyId++,this.dirtyFormat++,this},e.prototype.addDepthTexture=function(e){return this.depthTexture=e||new gr(new Or(null,{width:this.width,height:this.height}),{scaleMode:t.SCALE_MODES.NEAREST,resolution:1,width:this.width,height:this.height,mipmap:t.MIPMAP_MODES.OFF,format:t.FORMATS.DEPTH_COMPONENT,type:t.TYPES.UNSIGNED_SHORT}),this.dirtyId++,this.dirtyFormat++,this},e.prototype.enableDepth=function(){return this.depth=!0,this.dirtyId++,this.dirtyFormat++,this},e.prototype.enableStencil=function(){return this.stencil=!0,this.dirtyId++,this.dirtyFormat++,this},e.prototype.resize=function(t,e){if(t=Math.ceil(t),e=Math.ceil(e),t!==this.width||e!==this.height){this.width=t,this.height=e,this.dirtyId++,this.dirtySize++;for(var r=0;r<this.colorTextures.length;r++){var i=this.colorTextures[r],n=i.resolution;i.setSize(t/n,e/n)}if(this.depthTexture){n=this.depthTexture.resolution;this.depthTexture.setSize(t/n,e/n)}}},e.prototype.dispose=function(){this.disposeRunner.emit(this,!1)},e.prototype.destroyDepthTexture=function(){this.depthTexture&&(this.depthTexture.destroy(),this.depthTexture=null,++this.dirtyId,++this.dirtyFormat)},e}(),Dr=function(t){function e(e){var r=this;"number"==typeof e&&(e={width:arguments[0],height:arguments[1],scaleMode:arguments[2],resolution:arguments[3]});r=t.call(this,null,e)||this;var i=e||{},n=i.width,o=i.height;return r.mipmap=0,r.width=Math.ceil(n)||100,r.height=Math.ceil(o)||100,r.valid=!0,r.clearColor=[0,0,0,0],r.framebuffer=new Mr(r.width*r.resolution,r.height*r.resolution).addColorTexture(0,r),r.maskStack=[],r.filterStack=[{}],r}return pr(e,t),e.prototype.resize=function(t,e){t=Math.ceil(t),e=Math.ceil(e),this.framebuffer.resize(t*this.resolution,e*this.resolution)},e.prototype.dispose=function(){this.framebuffer.dispose(),t.prototype.dispose.call(this)},e.prototype.destroy=function(){t.prototype.destroy.call(this),this.framebuffer.destroyDepthTexture(),this.framebuffer=null},e}(gr),Cr=function(){function t(){this.x0=0,this.y0=0,this.x1=1,this.y1=0,this.x2=1,this.y2=1,this.x3=0,this.y3=1,this.uvsFloat32=new Float32Array(8)}return t.prototype.set=function(t,e,r){var i=e.width,n=e.height;if(r){var o=t.width/2/i,s=t.height/2/n,a=t.x/i+o,h=t.y/n+s;r=Ne.add(r,Ne.NW),this.x0=a+o*Ne.uX(r),this.y0=h+s*Ne.uY(r),r=Ne.add(r,2),this.x1=a+o*Ne.uX(r),this.y1=h+s*Ne.uY(r),r=Ne.add(r,2),this.x2=a+o*Ne.uX(r),this.y2=h+s*Ne.uY(r),r=Ne.add(r,2),this.x3=a+o*Ne.uX(r),this.y3=h+s*Ne.uY(r)}else this.x0=t.x/i,this.y0=t.y/n,this.x1=(t.x+t.width)/i,this.y1=t.y/n,this.x2=(t.x+t.width)/i,this.y2=(t.y+t.height)/n,this.x3=t.x/i,this.y3=(t.y+t.height)/n;this.uvsFloat32[0]=this.x0,this.uvsFloat32[1]=this.y0,this.uvsFloat32[2]=this.x1,this.uvsFloat32[3]=this.y1,this.uvsFloat32[4]=this.x2,this.uvsFloat32[5]=this.y2,this.uvsFloat32[6]=this.x3,this.uvsFloat32[7]=this.y3},t}(),Rr=new Cr,Lr=function(t){function e(r,i,n,o,s,a){var h=t.call(this)||this;if(h.noFrame=!1,i||(h.noFrame=!0,i=new xe(0,0,1,1)),r instanceof e&&(r=r.baseTexture),h.baseTexture=r,h._frame=i,h.trim=o,h.valid=!1,h._uvs=Rr,h.uvMatrix=null,h.orig=n||i,h._rotate=Number(s||0),!0===s)h._rotate=2;else if(h._rotate%2!=0)throw new Error("attempt to use diamond-shaped UVs. If you are sure, set rotation manually");return h.defaultAnchor=a?new we(a.x,a.y):new we(0,0),h._updateID=0,h.textureCacheIds=[],r.valid?h.noFrame?r.valid&&h.onBaseTextureUpdated(r):h.frame=i:r.once("loaded",h.onBaseTextureUpdated,h),h.noFrame&&r.on("update",h.onBaseTextureUpdated,h),h}return pr(e,t),e.prototype.update=function(){this.baseTexture.resource&&this.baseTexture.resource.update()},e.prototype.onBaseTextureUpdated=function(t){if(this.noFrame){if(!this.baseTexture.valid)return;this._frame.width=t.width,this._frame.height=t.height,this.valid=!0,this.updateUvs()}else this.frame=this._frame;this.emit("update",this)},e.prototype.destroy=function(t){if(this.baseTexture){if(t){var r=this.baseTexture;r&&r.url&&ae[r.url]&&e.removeFromCache(r.url),this.baseTexture.destroy()}this.baseTexture.off("loaded",this.onBaseTextureUpdated,this),this.baseTexture.off("update",this.onBaseTextureUpdated,this),this.baseTexture=null}this._frame=null,this._uvs=null,this.trim=null,this.orig=null,this.valid=!1,e.removeFromCache(this),this.textureCacheIds=null},e.prototype.clone=function(){return new e(this.baseTexture,this.frame.clone(),this.orig.clone(),this.trim&&this.trim.clone(),this.rotate,this.defaultAnchor)},e.prototype.updateUvs=function(){this._uvs===Rr&&(this._uvs=new Cr),this._uvs.set(this._frame,this.baseTexture,this.rotate),this._updateID++},e.from=function(t,r,i){void 0===r&&(r={}),void 0===i&&(i=D.STRICT_TEXTURE_CACHE);var n="string"==typeof t,o=null;n?o=t:(t._pixiId||(t._pixiId="pixiid_"+ie()),o=t._pixiId);var s=ae[o];if(n&&i&&!s)throw new Error('The cacheId "'+o+'" does not exist in TextureCache.');return s||(r.resolution||(r.resolution=fe(t)),(s=new e(new gr(t,r))).baseTexture.cacheId=o,gr.addToCache(s.baseTexture,o),e.addToCache(s,o)),s},e.fromURL=function(t,r){var i=Object.assign({autoLoad:!1},null==r?void 0:r.resourceOptions),n=e.from(t,Object.assign({resourceOptions:i},r),!1),o=n.baseTexture.resource;return n.baseTexture.valid?Promise.resolve(n):o.load().then(function(){return Promise.resolve(n)})},e.fromBuffer=function(t,r,i,n){return new e(gr.fromBuffer(t,r,i,n))},e.fromLoader=function(t,r,i){var n=new Tr(t);n.url=r;var o=new e(new gr(n,{scaleMode:D.SCALE_MODE,resolution:fe(r)}));return i||(i=r),gr.addToCache(o.baseTexture,i),e.addToCache(o,i),i!==r&&(gr.addToCache(o.baseTexture,r),e.addToCache(o,r)),o},e.addToCache=function(t,e){e&&(-1===t.textureCacheIds.indexOf(e)&&t.textureCacheIds.push(e),ae[e]&&console.warn("Texture added to the cache with an id ["+e+"] that already had an entry"),ae[e]=t)},e.removeFromCache=function(t){if("string"==typeof t){var e=ae[t];if(e){var r=e.textureCacheIds.indexOf(t);return r>-1&&e.textureCacheIds.splice(r,1),delete ae[t],e}}else if(t&&t.textureCacheIds){for(var i=0;i<t.textureCacheIds.length;++i)ae[t.textureCacheIds[i]]===t&&delete ae[t.textureCacheIds[i]];return t.textureCacheIds.length=0,t}return null},Object.defineProperty(e.prototype,"resolution",{get:function(){return this.baseTexture.resolution},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"frame",{get:function(){return this._frame},set:function(t){this._frame=t,this.noFrame=!1;var e=t.x,r=t.y,i=t.width,n=t.height,o=e+i>this.baseTexture.width,s=r+n>this.baseTexture.height;if(o||s){var a=o&&s?"and":"or",h="X: "+e+" + "+i+" = "+(e+i)+" > "+this.baseTexture.width,u="Y: "+r+" + "+n+" = "+(r+n)+" > "+this.baseTexture.height;throw new Error("Texture Error: frame does not fit inside the base Texture dimensions: "+h+" "+a+" "+u)}this.valid=i&&n&&this.baseTexture.valid,this.trim||this.rotate||(this.orig=t),this.valid&&this.updateUvs()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rotate",{get:function(){return this._rotate},set:function(t){this._rotate=t,this.valid&&this.updateUvs()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){return this.orig.width},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return this.orig.height},enumerable:!1,configurable:!0}),e.prototype.castToBaseTexture=function(){return this.baseTexture},e}(C);function Nr(t){t.destroy=function(){},t.on=function(){},t.once=function(){},t.emit=function(){}}Lr.EMPTY=new Lr(new gr),Nr(Lr.EMPTY),Nr(Lr.EMPTY.baseTexture),Lr.WHITE=function(){var t=document.createElement("canvas");t.width=16,t.height=16;var e=t.getContext("2d");return e.fillStyle="white",e.fillRect(0,0,16,16),new Lr(new gr(new br(t)))}(),Nr(Lr.WHITE),Nr(Lr.WHITE.baseTexture);var Fr=function(t){function e(e,r){var i=this,n=null;if(!(e instanceof Dr)){var o=arguments[1],s=arguments[2],a=arguments[3],h=arguments[4];console.warn("Please use RenderTexture.create("+o+", "+s+") instead of the ctor directly."),n=arguments[0],r=null,e=new Dr({width:o,height:s,scaleMode:a,resolution:h})}return(i=t.call(this,e,r)||this).legacyRenderer=n,i.valid=!0,i.filterFrame=null,i.filterPoolKey=null,i.updateUvs(),i}return pr(e,t),Object.defineProperty(e.prototype,"framebuffer",{get:function(){return this.baseTexture.framebuffer},enumerable:!1,configurable:!0}),e.prototype.resize=function(t,e,r){void 0===r&&(r=!0),t=Math.ceil(t),e=Math.ceil(e),this.valid=t>0&&e>0,this._frame.width=this.orig.width=t,this._frame.height=this.orig.height=e,r&&this.baseTexture.resize(t,e),this.updateUvs()},e.prototype.setResolution=function(t){var e=this.baseTexture;e.resolution!==t&&(e.setResolution(t),this.resize(e.width,e.height,!1))},e.create=function(t){return"number"==typeof t&&(t={width:t,height:arguments[1],scaleMode:arguments[2],resolution:arguments[3]}),new e(new Dr(t))},e}(Lr),Br=function(){function t(t){this.texturePool={},this.textureOptions=t||{},this.enableFullScreen=!1,this._pixelsWidth=0,this._pixelsHeight=0}return t.prototype.createTexture=function(t,e){var r=new Dr(Object.assign({width:t,height:e,resolution:1},this.textureOptions));return new Fr(r)},t.prototype.getOptimalTexture=function(e,r,i){void 0===i&&(i=1);var n=t.SCREEN_KEY;e*=i,r*=i,this.enableFullScreen&&e===this._pixelsWidth&&r===this._pixelsHeight||(n=(65535&(e=Jt(e)))<<16|65535&(r=Jt(r))),this.texturePool[n]||(this.texturePool[n]=[]);var o=this.texturePool[n].pop();return o||(o=this.createTexture(e,r)),o.filterPoolKey=n,o.setResolution(i),o},t.prototype.getFilterTexture=function(t,e){var r=this.getOptimalTexture(t.width,t.height,e||t.resolution);return r.filterFrame=t.filterFrame,r},t.prototype.returnTexture=function(t){var e=t.filterPoolKey;t.filterFrame=null,this.texturePool[e].push(t)},t.prototype.returnFilterTexture=function(t){this.returnTexture(t)},t.prototype.clear=function(t){if(t=!1!==t)for(var e in this.texturePool){var r=this.texturePool[e];if(r)for(var i=0;i<r.length;i++)r[i].destroy(!0)}this.texturePool={}},t.prototype.setScreenSize=function(e){if(e.width!==this._pixelsWidth||e.height!==this._pixelsHeight){var r=t.SCREEN_KEY,i=this.texturePool[r];if(this.enableFullScreen=e.width>0&&e.height>0,i)for(var n=0;n<i.length;n++)i[n].destroy(!0);this.texturePool[r]=[],this._pixelsWidth=e.width,this._pixelsHeight=e.height}},t.SCREEN_KEY="screen",t}(),Ur=function(){function t(t,e,r,i,n,o,s){void 0===e&&(e=0),void 0===r&&(r=!1),void 0===i&&(i=5126),this.buffer=t,this.size=e,this.normalized=r,this.type=i,this.stride=n,this.start=o,this.instance=s}return t.prototype.destroy=function(){this.buffer=null},t.from=function(e,r,i,n,o){return new t(e,r,i,n,o)},t}(),kr=0,Xr=function(){function t(t,e,r){void 0===e&&(e=!0),void 0===r&&(r=!1),this.data=t||new Float32Array(1),this._glBuffers={},this._updateID=0,this.index=r,this.static=e,this.id=kr++,this.disposeRunner=new ur("disposeBuffer")}return t.prototype.update=function(t){this.data=t||this.data,this._updateID++},t.prototype.dispose=function(){this.disposeRunner.emit(this,!1)},t.prototype.destroy=function(){this.dispose(),this.data=null},t.from=function(e){return e instanceof Array&&(e=new Float32Array(e)),new t(e)},t}();function jr(t){if(4===t.BYTES_PER_ELEMENT)return t instanceof Float32Array?"Float32Array":t instanceof Uint32Array?"Uint32Array":"Int32Array";if(2===t.BYTES_PER_ELEMENT){if(t instanceof Uint16Array)return"Uint16Array"}else if(1===t.BYTES_PER_ELEMENT&&t instanceof Uint8Array)return"Uint8Array";return null}var Hr={Float32Array:Float32Array,Uint32Array:Uint32Array,Int32Array:Int32Array,Uint8Array:Uint8Array};var Gr={5126:4,5123:2,5121:1},Yr=0,zr={Float32Array:Float32Array,Uint32Array:Uint32Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Uint16Array:Uint16Array},Vr=function(){function t(t,e){void 0===t&&(t=[]),void 0===e&&(e={}),this.buffers=t,this.indexBuffer=null,this.attributes=e,this.glVertexArrayObjects={},this.id=Yr++,this.instanced=!1,this.instanceCount=1,this.disposeRunner=new ur("disposeGeometry"),this.refCount=0}return t.prototype.addAttribute=function(t,e,r,i,n,o,s,a){if(void 0===r&&(r=0),void 0===i&&(i=!1),void 0===a&&(a=!1),!e)throw new Error("You must pass a buffer when creating an attribute");e instanceof Xr||(e instanceof Array&&(e=new Float32Array(e)),e=new Xr(e));var h=t.split("|");if(h.length>1){for(var u=0;u<h.length;u++)this.addAttribute(h[u],e,r,i,n);return this}var l=this.buffers.indexOf(e);return-1===l&&(this.buffers.push(e),l=this.buffers.length-1),this.attributes[t]=new Ur(l,r,i,n,o,s,a),this.instanced=this.instanced||a,this},t.prototype.getAttribute=function(t){return this.attributes[t]},t.prototype.getBuffer=function(t){return this.buffers[this.getAttribute(t).buffer]},t.prototype.addIndex=function(t){return t instanceof Xr||(t instanceof Array&&(t=new Uint16Array(t)),t=new Xr(t)),t.index=!0,this.indexBuffer=t,-1===this.buffers.indexOf(t)&&this.buffers.push(t),this},t.prototype.getIndex=function(){return this.indexBuffer},t.prototype.interleave=function(){if(1===this.buffers.length||2===this.buffers.length&&this.indexBuffer)return this;var t,e=[],r=[],i=new Xr;for(t in this.attributes){var n=this.attributes[t],o=this.buffers[n.buffer];e.push(o.data),r.push(n.size*Gr[n.type]/4),n.buffer=0}for(i.data=function(t,e){for(var r=0,i=0,n={},o=0;o<t.length;o++)i+=e[o],r+=t[o].length;var s=new ArrayBuffer(4*r),a=null,h=0;for(o=0;o<t.length;o++){var u=e[o],l=t[o],c=jr(l);n[c]||(n[c]=new Hr[c](s)),a=n[c];for(var d=0;d<l.length;d++)a[(d/u|0)*i+h+d%u]=l[d];h+=u}return new Float32Array(s)}(e,r),t=0;t<this.buffers.length;t++)this.buffers[t]!==this.indexBuffer&&this.buffers[t].destroy();return this.buffers=[i],this.indexBuffer&&this.buffers.push(this.indexBuffer),this},t.prototype.getSize=function(){for(var t in this.attributes){var e=this.attributes[t];return this.buffers[e.buffer].data.length/(e.stride/4||e.size)}return 0},t.prototype.dispose=function(){this.disposeRunner.emit(this,!1)},t.prototype.destroy=function(){this.dispose(),this.buffers=null,this.indexBuffer=null,this.attributes=null},t.prototype.clone=function(){for(var e=new t,r=0;r<this.buffers.length;r++)e.buffers[r]=new Xr(this.buffers[r].data.slice(0));for(var r in this.attributes){var i=this.attributes[r];e.attributes[r]=new Ur(i.buffer,i.size,i.normalized,i.type,i.stride,i.start,i.instance)}return this.indexBuffer&&(e.indexBuffer=e.buffers[this.buffers.indexOf(this.indexBuffer)],e.indexBuffer.index=!0),e},t.merge=function(e){for(var r,i=new t,n=[],o=[],s=[],a=0;a<e.length;a++){r=e[a];for(var h=0;h<r.buffers.length;h++)o[h]=o[h]||0,o[h]+=r.buffers[h].data.length,s[h]=0}for(a=0;a<r.buffers.length;a++)n[a]=new(zr[jr(r.buffers[a].data)])(o[a]),i.buffers[a]=new Xr(n[a]);for(a=0;a<e.length;a++){r=e[a];for(h=0;h<r.buffers.length;h++)n[h].set(r.buffers[h].data,s[h]),s[h]+=r.buffers[h].data.length}if(i.attributes=r.attributes,r.indexBuffer){i.indexBuffer=i.buffers[r.buffers.indexOf(r.indexBuffer)],i.indexBuffer.index=!0;var u=0,l=0,c=0,d=0;for(a=0;a<r.buffers.length;a++)if(r.buffers[a]!==r.indexBuffer){d=a;break}for(var a in r.attributes){var p=r.attributes[a];(0|p.buffer)===d&&(l+=p.size*Gr[p.type]/4)}for(a=0;a<e.length;a++){var f=e[a].indexBuffer.data;for(h=0;h<f.length;h++)i.indexBuffer.data[h+c]+=u;u+=r.buffers[d].data.length/l,c+=f.length}}return i},t}(),Wr=function(t){function e(){var e=t.call(this)||this;return e.addAttribute("aVertexPosition",new Float32Array([0,0,1,0,1,1,0,1])).addIndex([0,1,3,2]),e}return pr(e,t),e}(Vr),qr=function(t){function e(){var e=t.call(this)||this;return e.vertices=new Float32Array([-1,-1,1,-1,1,1,-1,1]),e.uvs=new Float32Array([0,0,1,0,1,1,0,1]),e.vertexBuffer=new Xr(e.vertices),e.uvBuffer=new Xr(e.uvs),e.addAttribute("aVertexPosition",e.vertexBuffer).addAttribute("aTextureCoord",e.uvBuffer).addIndex([0,1,2,0,2,3]),e}return pr(e,t),e.prototype.map=function(t,e){var r=0,i=0;return this.uvs[0]=r,this.uvs[1]=i,this.uvs[2]=r+e.width/t.width,this.uvs[3]=i,this.uvs[4]=r+e.width/t.width,this.uvs[5]=i+e.height/t.height,this.uvs[6]=r,this.uvs[7]=i+e.height/t.height,r=e.x,i=e.y,this.vertices[0]=r,this.vertices[1]=i,this.vertices[2]=r+e.width,this.vertices[3]=i,this.vertices[4]=r+e.width,this.vertices[5]=i+e.height,this.vertices[6]=r,this.vertices[7]=i+e.height,this.invalidate(),this},e.prototype.invalidate=function(){return this.vertexBuffer._updateID++,this.uvBuffer._updateID++,this},e}(Vr),Kr=0,Zr=function(){function t(t,e){this.uniforms=t,this.group=!0,this.syncUniforms={},this.dirtyId=0,this.id=Kr++,this.static=!!e}return t.prototype.update=function(){this.dirtyId++},t.prototype.add=function(e,r,i){this.uniforms[e]=new t(r,i)},t.from=function(e,r){return new t(e,r)},t}(),Jr=function(){function t(){this.renderTexture=null,this.target=null,this.legacy=!1,this.resolution=1,this.sourceFrame=new xe,this.destinationFrame=new xe,this.filters=[]}return t.prototype.clear=function(){this.target=null,this.filters=null,this.renderTexture=null},t}(),Qr=function(e){function r(t){var r=e.call(this,t)||this;return r.defaultFilterStack=[{}],r.texturePool=new Br,r.texturePool.setScreenSize(t.view),r.statePool=[],r.quad=new Wr,r.quadUv=new qr,r.tempRect=new xe,r.activeState={},r.globalUniforms=new Zr({outputFrame:r.tempRect,inputSize:new Float32Array(4),inputPixel:new Float32Array(4),inputClamp:new Float32Array(4),resolution:1,filterArea:new Float32Array(4),filterClamp:new Float32Array(4)},!0),r.forceClear=!1,r.useMaxPadding=!1,r}return pr(r,e),r.prototype.push=function(t,e){for(var r=this.renderer,i=this.defaultFilterStack,n=this.statePool.pop()||new Jr,o=e[0].resolution,s=e[0].padding,a=e[0].autoFit,h=e[0].legacy,u=1;u<e.length;u++){var l=e[u];o=Math.min(o,l.resolution),s=this.useMaxPadding?Math.max(s,l.padding):s+l.padding,a=a&&l.autoFit,h=h||l.legacy}1===i.length&&(this.defaultFilterStack[0].renderTexture=r.renderTexture.current),i.push(n),n.resolution=o,n.legacy=h,n.target=t,n.sourceFrame.copyFrom(t.filterArea||t.getBounds(!0)),n.sourceFrame.pad(s),a&&n.sourceFrame.fit(this.renderer.renderTexture.sourceFrame),n.sourceFrame.ceil(o),n.renderTexture=this.getOptimalFilterTexture(n.sourceFrame.width,n.sourceFrame.height,o),n.filters=e,n.destinationFrame.width=n.renderTexture.width,n.destinationFrame.height=n.renderTexture.height;var c=this.tempRect;c.width=n.sourceFrame.width,c.height=n.sourceFrame.height,n.renderTexture.filterFrame=n.sourceFrame,r.renderTexture.bind(n.renderTexture,n.sourceFrame,c),r.renderTexture.clear()},r.prototype.pop=function(){var e=this.defaultFilterStack,r=e.pop(),i=r.filters;this.activeState=r;var n=this.globalUniforms.uniforms;n.outputFrame=r.sourceFrame,n.resolution=r.resolution;var o=n.inputSize,s=n.inputPixel,a=n.inputClamp;if(o[0]=r.destinationFrame.width,o[1]=r.destinationFrame.height,o[2]=1/o[0],o[3]=1/o[1],s[0]=o[0]*r.resolution,s[1]=o[1]*r.resolution,s[2]=1/s[0],s[3]=1/s[1],a[0]=.5*s[2],a[1]=.5*s[3],a[2]=r.sourceFrame.width*o[2]-.5*s[2],a[3]=r.sourceFrame.height*o[3]-.5*s[3],r.legacy){var h=n.filterArea;h[0]=r.destinationFrame.width,h[1]=r.destinationFrame.height,h[2]=r.sourceFrame.x,h[3]=r.sourceFrame.y,n.filterClamp=n.inputClamp}this.globalUniforms.update();var u=e[e.length-1];if(r.renderTexture.framebuffer.multisample>1&&this.renderer.framebuffer.blit(),1===i.length)i[0].apply(this,r.renderTexture,u.renderTexture,t.CLEAR_MODES.BLEND,r),this.returnFilterTexture(r.renderTexture);else{var l=r.renderTexture,c=this.getOptimalFilterTexture(l.width,l.height,r.resolution);c.filterFrame=l.filterFrame;var d=0;for(d=0;d<i.length-1;++d){i[d].apply(this,l,c,t.CLEAR_MODES.CLEAR,r);var p=l;l=c,c=p}i[d].apply(this,l,u.renderTexture,t.CLEAR_MODES.BLEND,r),this.returnFilterTexture(l),this.returnFilterTexture(c)}r.clear(),this.statePool.push(r)},r.prototype.bindAndClear=function(e,r){if(void 0===r&&(r=t.CLEAR_MODES.CLEAR),e&&e.filterFrame){var i=this.tempRect;i.width=e.filterFrame.width,i.height=e.filterFrame.height,this.renderer.renderTexture.bind(e,e.filterFrame,i)}else this.renderer.renderTexture.bind(e);"boolean"==typeof r&&(r=r?t.CLEAR_MODES.CLEAR:t.CLEAR_MODES.BLEND,oe("5.2.1","Use CLEAR_MODES when using clear applyFilter option")),(r===t.CLEAR_MODES.CLEAR||r===t.CLEAR_MODES.BLIT&&this.forceClear)&&this.renderer.renderTexture.clear()},r.prototype.applyFilter=function(e,r,i,n){var o=this.renderer;this.bindAndClear(i,n),e.uniforms.uSampler=r,e.uniforms.filterGlobals=this.globalUniforms,o.state.set(e.state),o.shader.bind(e),e.legacy?(this.quadUv.map(r._frame,r.filterFrame),o.geometry.bind(this.quadUv),o.geometry.draw(t.DRAW_MODES.TRIANGLES)):(o.geometry.bind(this.quad),o.geometry.draw(t.DRAW_MODES.TRIANGLE_STRIP))},r.prototype.calculateSpriteMatrix=function(t,e){var r=this.activeState,i=r.sourceFrame,n=r.destinationFrame,o=e._texture.orig,s=t.set(n.width,0,0,n.height,i.x,i.y),a=e.worldTransform.copyTo(Ie.TEMP_MATRIX);return a.invert(),s.prepend(a),s.scale(1/o.width,1/o.height),s.translate(e.anchor.x,e.anchor.y),s},r.prototype.destroy=function(){this.texturePool.clear(!1)},r.prototype.getOptimalFilterTexture=function(t,e,r){return void 0===r&&(r=1),this.texturePool.getOptimalTexture(t,e,r)},r.prototype.getFilterTexture=function(t,e){if("number"==typeof t){var r=t;t=e,e=r}t=t||this.activeState.renderTexture;var i=this.texturePool.getOptimalTexture(t.width,t.height,e||t.resolution);return i.filterFrame=t.filterFrame,i},r.prototype.returnFilterTexture=function(t){this.texturePool.returnTexture(t)},r.prototype.emptyPool=function(){this.texturePool.clear(!0)},r.prototype.resize=function(){this.texturePool.setScreenSize(this.renderer.view)},r}(Ar),$r=function(){function t(t){this.renderer=t}return t.prototype.flush=function(){},t.prototype.destroy=function(){this.renderer=null},t.prototype.start=function(){},t.prototype.stop=function(){this.flush()},t.prototype.render=function(t){},t}(),ti=function(t){function e(e){var r=t.call(this,e)||this;return r.emptyRenderer=new $r(e),r.currentRenderer=r.emptyRenderer,r}return pr(e,t),e.prototype.setObjectRenderer=function(t){this.currentRenderer!==t&&(this.currentRenderer.stop(),this.currentRenderer=t,this.currentRenderer.start())},e.prototype.flush=function(){this.setObjectRenderer(this.emptyRenderer)},e.prototype.reset=function(){this.setObjectRenderer(this.emptyRenderer)},e.prototype.copyBoundTextures=function(t,e){for(var r=this.renderer.texture.boundTextures,i=e-1;i>=0;--i)t[i]=r[i]||null,t[i]&&(t[i]._batchLocation=i)},e.prototype.boundArray=function(t,e,r,i){for(var n=t.elements,o=t.ids,s=t.count,a=0,h=0;h<s;h++){var u=n[h],l=u._batchLocation;if(l>=0&&l<i&&e[l]===u)o[h]=l;else for(;a<i;){var c=e[a];if(!c||c._batchEnabled!==r||c._batchLocation!==a){o[h]=a,u._batchLocation=a,e[a]=u;break}a++}}},e}(Ar),ei=0,ri=function(e){function r(t){var r=e.call(this,t)||this;return r.webGLVersion=1,r.extensions={},r.supports={uint32Indices:!1},r.handleContextLost=r.handleContextLost.bind(r),r.handleContextRestored=r.handleContextRestored.bind(r),t.view.addEventListener("webglcontextlost",r.handleContextLost,!1),t.view.addEventListener("webglcontextrestored",r.handleContextRestored,!1),r}return pr(r,e),Object.defineProperty(r.prototype,"isLost",{get:function(){return!this.gl||this.gl.isContextLost()},enumerable:!1,configurable:!0}),r.prototype.contextChange=function(t){this.gl=t,this.renderer.gl=t,this.renderer.CONTEXT_UID=ei++,t.isContextLost()&&t.getExtension("WEBGL_lose_context")&&t.getExtension("WEBGL_lose_context").restoreContext()},r.prototype.initFromContext=function(t){this.gl=t,this.validateContext(t),this.renderer.gl=t,this.renderer.CONTEXT_UID=ei++,this.renderer.runners.contextChange.emit(t)},r.prototype.initFromOptions=function(t){var e=this.createContext(this.renderer.view,t);this.initFromContext(e)},r.prototype.createContext=function(e,r){var i;if(D.PREFER_ENV>=t.ENV.WEBGL2&&(i=e.getContext("webgl2",r)),i)this.webGLVersion=2;else if(this.webGLVersion=1,!(i=e.getContext("webgl",r)||e.getContext("experimental-webgl",r)))throw new Error("This browser does not support WebGL. Try using the canvas renderer");return this.gl=i,this.getExtensions(),this.gl},r.prototype.getExtensions=function(){var t=this.gl;1===this.webGLVersion?Object.assign(this.extensions,{drawBuffers:t.getExtension("WEBGL_draw_buffers"),depthTexture:t.getExtension("WEBGL_depth_texture"),loseContext:t.getExtension("WEBGL_lose_context"),vertexArrayObject:t.getExtension("OES_vertex_array_object")||t.getExtension("MOZ_OES_vertex_array_object")||t.getExtension("WEBKIT_OES_vertex_array_object"),anisotropicFiltering:t.getExtension("EXT_texture_filter_anisotropic"),uint32ElementIndex:t.getExtension("OES_element_index_uint"),floatTexture:t.getExtension("OES_texture_float"),floatTextureLinear:t.getExtension("OES_texture_float_linear"),textureHalfFloat:t.getExtension("OES_texture_half_float"),textureHalfFloatLinear:t.getExtension("OES_texture_half_float_linear")}):2===this.webGLVersion&&Object.assign(this.extensions,{anisotropicFiltering:t.getExtension("EXT_texture_filter_anisotropic"),colorBufferFloat:t.getExtension("EXT_color_buffer_float"),floatTextureLinear:t.getExtension("OES_texture_float_linear")})},r.prototype.handleContextLost=function(t){t.preventDefault()},r.prototype.handleContextRestored=function(){this.renderer.runners.contextChange.emit(this.gl)},r.prototype.destroy=function(){var t=this.renderer.view;t.removeEventListener("webglcontextlost",this.handleContextLost),t.removeEventListener("webglcontextrestored",this.handleContextRestored),this.gl.useProgram(null),this.extensions.loseContext&&this.extensions.loseContext.loseContext()},r.prototype.postrender=function(){this.renderer.renderingToScreen&&this.gl.flush()},r.prototype.validateContext=function(t){var e=t.getContextAttributes(),r="WebGL2RenderingContext"in window&&t instanceof window.WebGL2RenderingContext;r&&(this.webGLVersion=2),e.stencil||console.warn("Provided WebGL context does not have a stencil buffer, masks may not render correctly");var i=r||!!t.getExtension("OES_element_index_uint");this.supports.uint32Indices=i,i||console.warn("Provided WebGL context does not support 32 index buffer, complex graphics may not render correctly")},r}(Ar),ii=function(){return function(e){this.framebuffer=e,this.stencil=null,this.dirtyId=0,this.dirtyFormat=0,this.dirtySize=0,this.multisample=t.MSAA_QUALITY.NONE,this.msaaBuffer=null,this.blitFramebuffer=null}}(),ni=new xe,oi=function(e){function r(t){var r=e.call(this,t)||this;return r.managedFramebuffers=[],r.unknownFramebuffer=new Mr(10,10),r.msaaSamples=null,r}return pr(r,e),r.prototype.contextChange=function(){var e=this.gl=this.renderer.gl;if(this.CONTEXT_UID=this.renderer.CONTEXT_UID,this.current=this.unknownFramebuffer,this.viewport=new xe,this.hasMRT=!0,this.writeDepthTexture=!0,this.disposeAll(!0),1===this.renderer.context.webGLVersion){var r=this.renderer.context.extensions.drawBuffers,i=this.renderer.context.extensions.depthTexture;D.PREFER_ENV===t.ENV.WEBGL_LEGACY&&(r=null,i=null),r?e.drawBuffers=function(t){return r.drawBuffersWEBGL(t)}:(this.hasMRT=!1,e.drawBuffers=function(){}),i||(this.writeDepthTexture=!1)}else this.msaaSamples=e.getInternalformatParameter(e.RENDERBUFFER,e.RGBA8,e.SAMPLES)},r.prototype.bind=function(t,e){var r=this.gl;if(t){var i=t.glFramebuffers[this.CONTEXT_UID]||this.initFramebuffer(t);this.current!==t&&(this.current=t,r.bindFramebuffer(r.FRAMEBUFFER,i.framebuffer)),i.dirtyId!==t.dirtyId&&(i.dirtyId=t.dirtyId,i.dirtyFormat!==t.dirtyFormat?(i.dirtyFormat=t.dirtyFormat,this.updateFramebuffer(t)):i.dirtySize!==t.dirtySize&&(i.dirtySize=t.dirtySize,this.resizeFramebuffer(t)));for(var n=0;n<t.colorTextures.length;n++){var o=t.colorTextures[n];this.renderer.texture.unbind(o.parentTextureArray||o)}t.depthTexture&&this.renderer.texture.unbind(t.depthTexture),e?this.setViewport(e.x,e.y,e.width,e.height):this.setViewport(0,0,t.width,t.height)}else this.current&&(this.current=null,r.bindFramebuffer(r.FRAMEBUFFER,null)),e?this.setViewport(e.x,e.y,e.width,e.height):this.setViewport(0,0,this.renderer.width,this.renderer.height)},r.prototype.setViewport=function(t,e,r,i){var n=this.viewport;n.width===r&&n.height===i&&n.x===t&&n.y===e||(n.x=t,n.y=e,n.width=r,n.height=i,this.gl.viewport(t,e,r,i))},Object.defineProperty(r.prototype,"size",{get:function(){return this.current?{x:0,y:0,width:this.current.width,height:this.current.height}:{x:0,y:0,width:this.renderer.width,height:this.renderer.height}},enumerable:!1,configurable:!0}),r.prototype.clear=function(e,r,i,n,o){void 0===o&&(o=t.BUFFER_BITS.COLOR|t.BUFFER_BITS.DEPTH);var s=this.gl;s.clearColor(e,r,i,n),s.clear(o)},r.prototype.initFramebuffer=function(t){var e=this.gl,r=new ii(e.createFramebuffer());return r.multisample=this.detectSamples(t.multisample),t.glFramebuffers[this.CONTEXT_UID]=r,this.managedFramebuffers.push(t),t.disposeRunner.add(this),r},r.prototype.resizeFramebuffer=function(t){var e=this.gl,r=t.glFramebuffers[this.CONTEXT_UID];r.stencil&&(e.bindRenderbuffer(e.RENDERBUFFER,r.stencil),e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,t.width,t.height));for(var i=t.colorTextures,n=0;n<i.length;n++)this.renderer.texture.bind(i[n],0);t.depthTexture&&this.renderer.texture.bind(t.depthTexture,0)},r.prototype.updateFramebuffer=function(t){var e=this.gl,r=t.glFramebuffers[this.CONTEXT_UID],i=t.colorTextures.length;e.drawBuffers||(i=Math.min(i,1)),r.multisample>1&&(r.msaaBuffer=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,r.msaaBuffer),e.renderbufferStorageMultisample(e.RENDERBUFFER,r.multisample,e.RGBA8,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,r.msaaBuffer));for(var n=[],o=0;o<i;o++)if(!(0===o&&r.multisample>1)){var s=t.colorTextures[o],a=s.parentTextureArray||s;this.renderer.texture.bind(a,0),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+o,s.target,a._glTextures[this.CONTEXT_UID].texture,0),n.push(e.COLOR_ATTACHMENT0+o)}if((n.length>1&&e.drawBuffers(n),t.depthTexture)&&this.writeDepthTexture){var h=t.depthTexture;this.renderer.texture.bind(h,0),e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,h._glTextures[this.CONTEXT_UID].texture,0)}r.stencil||!t.stencil&&!t.depth||(r.stencil=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,r.stencil),e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,t.width,t.height),t.depthTexture||e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,r.stencil))},r.prototype.detectSamples=function(e){var r=this.msaaSamples,i=t.MSAA_QUALITY.NONE;if(e<=1||null===r)return i;for(var n=0;n<r.length;n++)if(r[n]<=e){i=r[n];break}return 1===i&&(i=t.MSAA_QUALITY.NONE),i},r.prototype.blit=function(t,e,r){var i=this.current,n=this.renderer,o=this.gl,s=this.CONTEXT_UID;if(2===n.context.webGLVersion&&i){var a=i.glFramebuffers[s];if(a){if(!t){if(a.multisample<=1)return;a.blitFramebuffer||(a.blitFramebuffer=new Mr(i.width,i.height),a.blitFramebuffer.addColorTexture(0,i.colorTextures[0])),(t=a.blitFramebuffer).width=i.width,t.height=i.height}e||((e=ni).width=i.width,e.height=i.height),r||(r=e);var h=e.width===r.width&&e.height===r.height;this.bind(t),o.bindFramebuffer(o.READ_FRAMEBUFFER,a.framebuffer),o.blitFramebuffer(e.x,e.y,e.width,e.height,r.x,r.y,r.width,r.height,o.COLOR_BUFFER_BIT,h?o.NEAREST:o.LINEAR)}}},r.prototype.disposeFramebuffer=function(t,e){var r=t.glFramebuffers[this.CONTEXT_UID],i=this.gl;if(r){delete t.glFramebuffers[this.CONTEXT_UID];var n=this.managedFramebuffers.indexOf(t);n>=0&&this.managedFramebuffers.splice(n,1),t.disposeRunner.remove(this),e||(i.deleteFramebuffer(r.framebuffer),r.stencil&&i.deleteRenderbuffer(r.stencil))}},r.prototype.disposeAll=function(t){var e=this.managedFramebuffers;this.managedFramebuffers=[];for(var r=0;r<e.length;r++)this.disposeFramebuffer(e[r],t)},r.prototype.forceStencil=function(){var t=this.current;if(t){var e=t.glFramebuffers[this.CONTEXT_UID];if(e&&!e.stencil){t.enableStencil();var r=t.width,i=t.height,n=this.gl,o=n.createRenderbuffer();n.bindRenderbuffer(n.RENDERBUFFER,o),n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,r,i),e.stencil=o,n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,o)}}},r.prototype.reset=function(){this.current=this.unknownFramebuffer,this.viewport=new xe},r}(Ar),si=function(){return function(t){this.buffer=t||null,this.updateID=-1,this.byteLength=-1,this.refCount=0}}(),ai={5126:4,5123:2,5121:1},hi=function(e){function r(t){var r=e.call(this,t)||this;return r._activeGeometry=null,r._activeVao=null,r.hasVao=!0,r.hasInstance=!0,r.canUseUInt32ElementIndex=!1,r.managedGeometries={},r.managedBuffers={},r}return pr(r,e),r.prototype.contextChange=function(){this.disposeAll(!0);var e=this.gl=this.renderer.gl,r=this.renderer.context;if(this.CONTEXT_UID=this.renderer.CONTEXT_UID,2!==r.webGLVersion){var i=this.renderer.context.extensions.vertexArrayObject;D.PREFER_ENV===t.ENV.WEBGL_LEGACY&&(i=null),i?(e.createVertexArray=function(){return i.createVertexArrayOES()},e.bindVertexArray=function(t){return i.bindVertexArrayOES(t)},e.deleteVertexArray=function(t){return i.deleteVertexArrayOES(t)}):(this.hasVao=!1,e.createVertexArray=function(){return null},e.bindVertexArray=function(){return null},e.deleteVertexArray=function(){return null})}if(2!==r.webGLVersion){var n=e.getExtension("ANGLE_instanced_arrays");n?(e.vertexAttribDivisor=function(t,e){return n.vertexAttribDivisorANGLE(t,e)},e.drawElementsInstanced=function(t,e,r,i,o){return n.drawElementsInstancedANGLE(t,e,r,i,o)},e.drawArraysInstanced=function(t,e,r,i){return n.drawArraysInstancedANGLE(t,e,r,i)}):this.hasInstance=!1}this.canUseUInt32ElementIndex=2===r.webGLVersion||!!r.extensions.uint32ElementIndex},r.prototype.bind=function(t,e){e=e||this.renderer.shader.shader;var r=this.gl,i=t.glVertexArrayObjects[this.CONTEXT_UID],n=!1;i||(this.managedGeometries[t.id]=t,t.disposeRunner.add(this),t.glVertexArrayObjects[this.CONTEXT_UID]=i={},n=!0);var o=i[e.program.id]||this.initGeometryVao(t,e.program,n);this._activeGeometry=t,this._activeVao!==o&&(this._activeVao=o,this.hasVao?r.bindVertexArray(o):this.activateVao(t,e.program)),this.updateBuffers()},r.prototype.reset=function(){this.unbind()},r.prototype.updateBuffers=function(){for(var t=this._activeGeometry,e=this.gl,r=0;r<t.buffers.length;r++){var i=t.buffers[r],n=i._glBuffers[this.CONTEXT_UID];if(i._updateID!==n.updateID){n.updateID=i._updateID;var o=i.index?e.ELEMENT_ARRAY_BUFFER:e.ARRAY_BUFFER;if(e.bindBuffer(o,n.buffer),this._boundBuffer=n,n.byteLength>=i.data.byteLength)e.bufferSubData(o,0,i.data);else{var s=i.static?e.STATIC_DRAW:e.DYNAMIC_DRAW;n.byteLength=i.data.byteLength,e.bufferData(o,i.data,s)}}}},r.prototype.checkCompatibility=function(t,e){var r=t.attributes,i=e.attributeData;for(var n in i)if(!r[n])throw new Error('shader and geometry incompatible, geometry missing the "'+n+'" attribute')},r.prototype.getSignature=function(t,e){var r=t.attributes,i=e.attributeData,n=["g",t.id];for(var o in r)i[o]&&n.push(o);return n.join("-")},r.prototype.initGeometryVao=function(t,e,r){void 0===r&&(r=!0),this.checkCompatibility(t,e);var i=this.gl,n=this.CONTEXT_UID,o=this.getSignature(t,e),s=t.glVertexArrayObjects[this.CONTEXT_UID],a=s[o];if(a)return s[e.id]=a,a;var h=t.buffers,u=t.attributes,l={},c={};for(var d in h)l[d]=0,c[d]=0;for(var d in u)!u[d].size&&e.attributeData[d]?u[d].size=e.attributeData[d].size:u[d].size||console.warn("PIXI Geometry attribute '"+d+"' size cannot be determined (likely the bound shader does not have the attribute)"),l[u[d].buffer]+=u[d].size*ai[u[d].type];for(var d in u){var p=u[d],f=p.size;void 0===p.stride&&(l[p.buffer]===f*ai[p.type]?p.stride=0:p.stride=l[p.buffer]),void 0===p.start&&(p.start=c[p.buffer],c[p.buffer]+=f*ai[p.type])}a=i.createVertexArray(),i.bindVertexArray(a);for(var m=0;m<h.length;m++){var v=h[m];v._glBuffers[n]||(v._glBuffers[n]=new si(i.createBuffer()),this.managedBuffers[v.id]=v,v.disposeRunner.add(this)),r&&v._glBuffers[n].refCount++}return this.activateVao(t,e),this._activeVao=a,s[e.id]=a,s[o]=a,a},r.prototype.disposeBuffer=function(t,e){if(this.managedBuffers[t.id]){delete this.managedBuffers[t.id];var r=t._glBuffers[this.CONTEXT_UID],i=this.gl;t.disposeRunner.remove(this),r&&(e||i.deleteBuffer(r.buffer),delete t._glBuffers[this.CONTEXT_UID])}},r.prototype.disposeGeometry=function(t,e){if(this.managedGeometries[t.id]){delete this.managedGeometries[t.id];var r=t.glVertexArrayObjects[this.CONTEXT_UID],i=this.gl,n=t.buffers;if(t.disposeRunner.remove(this),r){for(var o=0;o<n.length;o++){var s=n[o]._glBuffers[this.CONTEXT_UID];s.refCount--,0!==s.refCount||e||this.disposeBuffer(n[o],e)}if(!e)for(var a in r)if("g"===a[0]){var h=r[a];this._activeVao===h&&this.unbind(),i.deleteVertexArray(h)}delete t.glVertexArrayObjects[this.CONTEXT_UID]}}},r.prototype.disposeAll=function(t){for(var e=Object.keys(this.managedGeometries),r=0;r<e.length;r++)this.disposeGeometry(this.managedGeometries[e[r]],t);e=Object.keys(this.managedBuffers);for(r=0;r<e.length;r++)this.disposeBuffer(this.managedBuffers[e[r]],t)},r.prototype.activateVao=function(t,e){var r=this.gl,i=this.CONTEXT_UID,n=t.buffers,o=t.attributes;t.indexBuffer&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.indexBuffer._glBuffers[i].buffer);var s=null;for(var a in o){var h=o[a],u=n[h.buffer]._glBuffers[i];if(e.attributeData[a]){s!==u&&(r.bindBuffer(r.ARRAY_BUFFER,u.buffer),s=u);var l=e.attributeData[a].location;if(r.enableVertexAttribArray(l),r.vertexAttribPointer(l,h.size,h.type||r.FLOAT,h.normalized,h.stride,h.start),h.instance){if(!this.hasInstance)throw new Error("geometry error, GPU Instancing is not supported on this device");r.vertexAttribDivisor(l,1)}}}},r.prototype.draw=function(t,e,r,i){var n=this.gl,o=this._activeGeometry;if(o.indexBuffer){var s=o.indexBuffer.data.BYTES_PER_ELEMENT,a=2===s?n.UNSIGNED_SHORT:n.UNSIGNED_INT;2===s||4===s&&this.canUseUInt32ElementIndex?o.instanced?n.drawElementsInstanced(t,e||o.indexBuffer.data.length,a,(r||0)*s,i||1):n.drawElements(t,e||o.indexBuffer.data.length,a,(r||0)*s):console.warn("unsupported index buffer type: uint32")}else o.instanced?n.drawArraysInstanced(t,r,e||o.getSize(),i||1):n.drawArrays(t,r,e||o.getSize());return this},r.prototype.unbind=function(){this.gl.bindVertexArray(null),this._activeVao=null,this._activeGeometry=null},r}(Ar),ui=function(){function e(e){void 0===e&&(e=null),this.type=t.MASK_TYPES.NONE,this.autoDetect=!0,this.maskObject=e||null,this.pooled=!1,this.isMaskData=!0,this._stencilCounter=0,this._scissorCounter=0,this._scissorRect=null,this._target=null}return e.prototype.reset=function(){this.pooled&&(this.maskObject=null,this.type=t.MASK_TYPES.NONE,this.autoDetect=!0),this._target=null},e.prototype.copyCountersOrReset=function(t){t?(this._stencilCounter=t._stencilCounter,this._scissorCounter=t._scissorCounter,this._scissorRect=t._scissorRect):(this._stencilCounter=0,this._scissorCounter=0,this._scissorRect=null)},e}();function li(t,e,r){var i=t.createShader(e);return t.shaderSource(i,r),t.compileShader(i),i}function ci(t,e,r,i){var n=li(t,t.VERTEX_SHADER,e),o=li(t,t.FRAGMENT_SHADER,r),s=t.createProgram();if(t.attachShader(s,n),t.attachShader(s,o),i)for(var a in i)t.bindAttribLocation(s,i[a],a);return t.linkProgram(s),t.getProgramParameter(s,t.LINK_STATUS)||(t.getShaderParameter(n,t.COMPILE_STATUS)||(console.warn(e),console.error(t.getShaderInfoLog(n))),t.getShaderParameter(o,t.COMPILE_STATUS)||(console.warn(r),console.error(t.getShaderInfoLog(o))),console.error("Pixi.js Error: Could not initialize shader."),console.error("gl.VALIDATE_STATUS",t.getProgramParameter(s,t.VALIDATE_STATUS)),console.error("gl.getError()",t.getError()),""!==t.getProgramInfoLog(s)&&console.warn("Pixi.js Warning: gl.getProgramInfoLog()",t.getProgramInfoLog(s)),t.deleteProgram(s),s=null),t.deleteShader(n),t.deleteShader(o),s}function di(t){for(var e=new Array(t),r=0;r<e.length;r++)e[r]=!1;return e}function pi(t,e){switch(t){case"float":return 0;case"vec2":return new Float32Array(2*e);case"vec3":return new Float32Array(3*e);case"vec4":return new Float32Array(4*e);case"int":case"sampler2D":case"sampler2DArray":return 0;case"ivec2":return new Int32Array(2*e);case"ivec3":return new Int32Array(3*e);case"ivec4":return new Int32Array(4*e);case"bool":return!1;case"bvec2":return di(2*e);case"bvec3":return di(3*e);case"bvec4":return di(4*e);case"mat2":return new Float32Array([1,0,0,1]);case"mat3":return new Float32Array([1,0,0,0,1,0,0,0,1]);case"mat4":return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}return null}var fi,mi={},vi=mi;function gi(){if(vi===mi||vi&&vi.isContextLost()){var e=document.createElement("canvas"),r=void 0;D.PREFER_ENV>=t.ENV.WEBGL2&&(r=e.getContext("webgl2",{})),r||((r=e.getContext("webgl",{})||e.getContext("experimental-webgl",{}))?r.getExtension("WEBGL_draw_buffers"):r=null),vi=r}return vi}function yi(e,r,i){if("precision"!==e.substring(0,9)){var n=r;return r===t.PRECISION.HIGH&&i!==t.PRECISION.HIGH&&(n=t.PRECISION.MEDIUM),"precision "+n+" float;\n"+e}return i!==t.PRECISION.HIGH&&"precision highp"===e.substring(0,15)?e.replace("precision highp","precision mediump"):e}var _i={float:1,vec2:2,vec3:3,vec4:4,int:1,ivec2:2,ivec3:3,ivec4:4,bool:1,bvec2:2,bvec3:3,bvec4:4,mat2:4,mat3:9,mat4:16,sampler2D:1};function xi(t){return _i[t]}var bi=null,Ei={FLOAT:"float",FLOAT_VEC2:"vec2",FLOAT_VEC3:"vec3",FLOAT_VEC4:"vec4",INT:"int",INT_VEC2:"ivec2",INT_VEC3:"ivec3",INT_VEC4:"ivec4",BOOL:"bool",BOOL_VEC2:"bvec2",BOOL_VEC3:"bvec3",BOOL_VEC4:"bvec4",FLOAT_MAT2:"mat2",FLOAT_MAT3:"mat3",FLOAT_MAT4:"mat4",SAMPLER_2D:"sampler2D",INT_SAMPLER_2D:"sampler2D",UNSIGNED_INT_SAMPLER_2D:"sampler2D",SAMPLER_CUBE:"samplerCube",INT_SAMPLER_CUBE:"samplerCube",UNSIGNED_INT_SAMPLER_CUBE:"samplerCube",SAMPLER_2D_ARRAY:"sampler2DArray",INT_SAMPLER_2D_ARRAY:"sampler2DArray",UNSIGNED_INT_SAMPLER_2D_ARRAY:"sampler2DArray"};function Ti(t,e){if(!bi){var r=Object.keys(Ei);bi={};for(var i=0;i<r.length;++i){var n=r[i];bi[t[n]]=Ei[n]}}return bi[e]}var Si=[{test:function(t){return"float"===t.type&&1===t.size},code:function(t){return'\n            if(uv["'+t+'"] !== ud["'+t+'"].value)\n            {\n                ud["'+t+'"].value = uv["'+t+'"]\n                gl.uniform1f(ud["'+t+'"].location, uv["'+t+'"])\n            }\n            '}},{test:function(t){return("sampler2D"===t.type||"samplerCube"===t.type||"sampler2DArray"===t.type)&&1===t.size&&!t.isArray},code:function(t){return't = syncData.textureCount++;\n\n            renderer.texture.bind(uv["'+t+'"], t);\n\n            if(ud["'+t+'"].value !== t)\n            {\n                ud["'+t+'"].value = t;\n                gl.uniform1i(ud["'+t+'"].location, t);\n; // eslint-disable-line max-len\n            }'}},{test:function(t,e){return"mat3"===t.type&&1===t.size&&void 0!==e.a},code:function(t){return'\n            gl.uniformMatrix3fv(ud["'+t+'"].location, false, uv["'+t+'"].toArray(true));\n            '}},{test:function(t,e){return"vec2"===t.type&&1===t.size&&void 0!==e.x},code:function(t){return'\n                cv = ud["'+t+'"].value;\n                v = uv["'+t+'"];\n\n                if(cv[0] !== v.x || cv[1] !== v.y)\n                {\n                    cv[0] = v.x;\n                    cv[1] = v.y;\n                    gl.uniform2f(ud["'+t+'"].location, v.x, v.y);\n                }'}},{test:function(t){return"vec2"===t.type&&1===t.size},code:function(t){return'\n                cv = ud["'+t+'"].value;\n                v = uv["'+t+'"];\n\n                if(cv[0] !== v[0] || cv[1] !== v[1])\n                {\n                    cv[0] = v[0];\n                    cv[1] = v[1];\n                    gl.uniform2f(ud["'+t+'"].location, v[0], v[1]);\n                }\n            '}},{test:function(t,e){return"vec4"===t.type&&1===t.size&&void 0!==e.width},code:function(t){return'\n                cv = ud["'+t+'"].value;\n                v = uv["'+t+'"];\n\n                if(cv[0] !== v.x || cv[1] !== v.y || cv[2] !== v.width || cv[3] !== v.height)\n                {\n                    cv[0] = v.x;\n                    cv[1] = v.y;\n                    cv[2] = v.width;\n                    cv[3] = v.height;\n                    gl.uniform4f(ud["'+t+'"].location, v.x, v.y, v.width, v.height)\n                }'}},{test:function(t){return"vec4"===t.type&&1===t.size},code:function(t){return'\n                cv = ud["'+t+'"].value;\n                v = uv["'+t+'"];\n\n                if(cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3])\n                {\n                    cv[0] = v[0];\n                    cv[1] = v[1];\n                    cv[2] = v[2];\n                    cv[3] = v[3];\n\n                    gl.uniform4f(ud["'+t+'"].location, v[0], v[1], v[2], v[3])\n                }'}}],wi={float:"\n    if(cv !== v)\n    {\n        cv.v = v;\n        gl.uniform1f(location, v)\n    }",vec2:"\n    if(cv[0] !== v[0] || cv[1] !== v[1])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n        gl.uniform2f(location, v[0], v[1])\n    }",vec3:"\n    if(cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n        cv[2] = v[2];\n\n        gl.uniform3f(location, v[0], v[1], v[2])\n    }",vec4:"gl.uniform4f(location, v[0], v[1], v[2], v[3])",int:"gl.uniform1i(location, v)",ivec2:"gl.uniform2i(location, v[0], v[1])",ivec3:"gl.uniform3i(location, v[0], v[1], v[2])",ivec4:"gl.uniform4i(location, v[0], v[1], v[2], v[3])",bool:"gl.uniform1i(location, v)",bvec2:"gl.uniform2i(location, v[0], v[1])",bvec3:"gl.uniform3i(location, v[0], v[1], v[2])",bvec4:"gl.uniform4i(location, v[0], v[1], v[2], v[3])",mat2:"gl.uniformMatrix2fv(location, false, v)",mat3:"gl.uniformMatrix3fv(location, false, v)",mat4:"gl.uniformMatrix4fv(location, false, v)",sampler2D:"gl.uniform1i(location, v)",samplerCube:"gl.uniform1i(location, v)",sampler2DArray:"gl.uniform1i(location, v)"},Pi={float:"gl.uniform1fv(location, v)",vec2:"gl.uniform2fv(location, v)",vec3:"gl.uniform3fv(location, v)",vec4:"gl.uniform4fv(location, v)",mat4:"gl.uniformMatrix4fv(location, false, v)",mat3:"gl.uniformMatrix3fv(location, false, v)",mat2:"gl.uniformMatrix2fv(location, false, v)",int:"gl.uniform1iv(location, v)",ivec2:"gl.uniform2iv(location, v)",ivec3:"gl.uniform3iv(location, v)",ivec4:"gl.uniform4iv(location, v)",bool:"gl.uniform1iv(location, v)",bvec2:"gl.uniform2iv(location, v)",bvec3:"gl.uniform3iv(location, v)",bvec4:"gl.uniform4iv(location, v)",sampler2D:"gl.uniform1iv(location, v)",samplerCube:"gl.uniform1iv(location, v)",sampler2DArray:"gl.uniform1iv(location, v)"};var Ii,Ai=["precision mediump float;","void main(void){","float test = 0.1;","%forloop%","gl_FragColor = vec4(0.0);","}"].join("\n");function Oi(t){for(var e="",r=0;r<t;++r)r>0&&(e+="\nelse "),r<t-1&&(e+="if(test == "+r+".0){}");return e}function Mi(t,e){if(0===t)throw new Error("Invalid value of `0` passed to `checkMaxIfStatementsInShader`");for(var r=e.createShader(e.FRAGMENT_SHADER);;){var i=Ai.replace(/%forloop%/gi,Oi(t));if(e.shaderSource(r,i),e.compileShader(r),e.getShaderParameter(r,e.COMPILE_STATUS))break;t=t/2|0}return t}var Di=0,Ci={},Ri=function(){function e(r,i,n){void 0===n&&(n="pixi-shader"),this.id=Di++,this.vertexSrc=r||e.defaultVertexSrc,this.fragmentSrc=i||e.defaultFragmentSrc,this.vertexSrc=this.vertexSrc.trim(),this.fragmentSrc=this.fragmentSrc.trim(),"#version"!==this.vertexSrc.substring(0,8)&&(n=n.replace(/\s+/g,"-"),Ci[n]?(Ci[n]++,n+="-"+Ci[n]):Ci[n]=1,this.vertexSrc="#define SHADER_NAME "+n+"\n"+this.vertexSrc,this.fragmentSrc="#define SHADER_NAME "+n+"\n"+this.fragmentSrc,this.vertexSrc=yi(this.vertexSrc,D.PRECISION_VERTEX,t.PRECISION.HIGH),this.fragmentSrc=yi(this.fragmentSrc,D.PRECISION_FRAGMENT,function(){if(!fi){fi=t.PRECISION.MEDIUM;var e=gi();if(e&&e.getShaderPrecisionFormat){var r=e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT);fi=r.precision?t.PRECISION.HIGH:t.PRECISION.MEDIUM}}return fi}())),this.extractData(this.vertexSrc,this.fragmentSrc),this.glPrograms={},this.syncUniforms=null}return e.prototype.extractData=function(t,e){var r=gi();if(r){var i=ci(r,t,e);this.attributeData=this.getAttributeData(i,r),this.uniformData=this.getUniformData(i,r),r.deleteProgram(i)}else this.uniformData={},this.attributeData={}},e.prototype.getAttributeData=function(t,e){for(var r={},i=[],n=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),o=0;o<n;o++){var s=e.getActiveAttrib(t,o),a=Ti(e,s.type),h={type:a,name:s.name,size:xi(a),location:0};r[s.name]=h,i.push(h)}i.sort(function(t,e){return t.name>e.name?1:-1});for(o=0;o<i.length;o++)i[o].location=o;return r},e.prototype.getUniformData=function(t,e){for(var r={},i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),n=0;n<i;n++){var o=e.getActiveUniform(t,n),s=o.name.replace(/\[.*?\]$/,""),a=o.name.match(/\[.*?\]$/),h=Ti(e,o.type);r[s]={type:h,size:o.size,isArray:a,value:pi(h,o.size)}}return r},Object.defineProperty(e,"defaultVertexSrc",{get:function(){return"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void){\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n   vTextureCoord = aTextureCoord;\n}\n"},enumerable:!1,configurable:!0}),Object.defineProperty(e,"defaultFragmentSrc",{get:function(){return"varying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\n\nvoid main(void){\n   gl_FragColor *= texture2D(uSampler, vTextureCoord);\n}"},enumerable:!1,configurable:!0}),e.from=function(t,r,i){var n=t+r,o=se[n];return o||(se[n]=o=new e(t,r,i)),o},e}(),Li=function(){function t(t,e){for(var r in this.program=t,this.uniformGroup=e?e instanceof Zr?e:new Zr(e):new Zr({}),t.uniformData)this.uniformGroup.uniforms[r]instanceof Array&&(this.uniformGroup.uniforms[r]=new Float32Array(this.uniformGroup.uniforms[r]))}return t.prototype.checkUniformExists=function(t,e){if(e.uniforms[t])return!0;for(var r in e.uniforms){var i=e.uniforms[r];if(i.group&&this.checkUniformExists(t,i))return!0}return!1},t.prototype.destroy=function(){this.uniformGroup=null},Object.defineProperty(t.prototype,"uniforms",{get:function(){return this.uniformGroup.uniforms},enumerable:!1,configurable:!0}),t.from=function(e,r,i){return new t(Ri.from(e,r),i)},t}(),Ni=function(){function e(){this.data=0,this.blendMode=t.BLEND_MODES.NORMAL,this.polygonOffset=0,this.blend=!0}return Object.defineProperty(e.prototype,"blend",{get:function(){return!!(1&this.data)},set:function(t){!!(1&this.data)!==t&&(this.data^=1)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"offsets",{get:function(){return!!(2&this.data)},set:function(t){!!(2&this.data)!==t&&(this.data^=2)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"culling",{get:function(){return!!(4&this.data)},set:function(t){!!(4&this.data)!==t&&(this.data^=4)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"depthTest",{get:function(){return!!(8&this.data)},set:function(t){!!(8&this.data)!==t&&(this.data^=8)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"clockwiseFrontFace",{get:function(){return!!(16&this.data)},set:function(t){!!(16&this.data)!==t&&(this.data^=16)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"blendMode",{get:function(){return this._blendMode},set:function(e){this.blend=e!==t.BLEND_MODES.NONE,this._blendMode=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"polygonOffset",{get:function(){return this._polygonOffset},set:function(t){this.offsets=!!t,this._polygonOffset=t},enumerable:!1,configurable:!0}),e.for2d=function(){var t=new e;return t.depthTest=!1,t.blend=!0,t},e}(),Fi=function(t){function e(r,i,n){var o=this,s=Ri.from(r||e.defaultVertexSrc,i||e.defaultFragmentSrc);return(o=t.call(this,s,n)||this).padding=0,o.resolution=D.FILTER_RESOLUTION,o.enabled=!0,o.autoFit=!0,o.legacy=!!o.program.attributeData.aTextureCoord,o.state=new Ni,o}return pr(e,t),e.prototype.apply=function(t,e,r,i,n){t.applyFilter(this,e,r,i)},Object.defineProperty(e.prototype,"blendMode",{get:function(){return this.state.blendMode},set:function(t){this.state.blendMode=t},enumerable:!1,configurable:!0}),Object.defineProperty(e,"defaultVertexSrc",{get:function(){return"attribute vec2 aVertexPosition;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nuniform vec4 inputSize;\nuniform vec4 outputFrame;\n\nvec4 filterVertexPosition( void )\n{\n    vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n\n    return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n}\n\nvec2 filterTextureCoord( void )\n{\n    return aVertexPosition * (outputFrame.zw * inputSize.zw);\n}\n\nvoid main(void)\n{\n    gl_Position = filterVertexPosition();\n    vTextureCoord = filterTextureCoord();\n}\n"},enumerable:!1,configurable:!0}),Object.defineProperty(e,"defaultFragmentSrc",{get:function(){return"varying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\n\nvoid main(void){\n   gl_FragColor = texture2D(uSampler, vTextureCoord);\n}\n"},enumerable:!1,configurable:!0}),e}(Li),Bi="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\nuniform mat3 otherMatrix;\n\nvarying vec2 vMaskCoord;\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n\n    vTextureCoord = aTextureCoord;\n    vMaskCoord = ( otherMatrix * vec3( aTextureCoord, 1.0)  ).xy;\n}\n",Ui="varying vec2 vMaskCoord;\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform sampler2D mask;\nuniform float alpha;\nuniform float npmAlpha;\nuniform vec4 maskClamp;\n\nvoid main(void)\n{\n    float clip = step(3.5,\n        step(maskClamp.x, vMaskCoord.x) +\n        step(maskClamp.y, vMaskCoord.y) +\n        step(vMaskCoord.x, maskClamp.z) +\n        step(vMaskCoord.y, maskClamp.w));\n\n    vec4 original = texture2D(uSampler, vTextureCoord);\n    vec4 masky = texture2D(mask, vMaskCoord);\n    float alphaMul = 1.0 - npmAlpha * (1.0 - masky.a);\n\n    original *= (alphaMul * masky.r * alpha * clip);\n\n    gl_FragColor = original;\n}\n",ki=new Ie,Xi=function(){function t(t,e){this._texture=t,this.mapCoord=new Ie,this.uClampFrame=new Float32Array(4),this.uClampOffset=new Float32Array(2),this._textureID=-1,this._updateID=0,this.clampOffset=0,this.clampMargin=void 0===e?.5:e,this.isSimple=!1}return Object.defineProperty(t.prototype,"texture",{get:function(){return this._texture},set:function(t){this._texture=t,this._textureID=-1},enumerable:!1,configurable:!0}),t.prototype.multiplyUvs=function(t,e){void 0===e&&(e=t);for(var r=this.mapCoord,i=0;i<t.length;i+=2){var n=t[i],o=t[i+1];e[i]=n*r.a+o*r.c+r.tx,e[i+1]=n*r.b+o*r.d+r.ty}return e},t.prototype.update=function(t){var e=this._texture;if(!e||!e.valid)return!1;if(!t&&this._textureID===e._updateID)return!1;this._textureID=e._updateID,this._updateID++;var r=e._uvs;this.mapCoord.set(r.x1-r.x0,r.y1-r.y0,r.x3-r.x0,r.y3-r.y0,r.x0,r.y0);var i=e.orig,n=e.trim;n&&(ki.set(i.width/n.width,0,0,i.height/n.height,-n.x/n.width,-n.y/n.height),this.mapCoord.append(ki));var o=e.baseTexture,s=this.uClampFrame,a=this.clampMargin/o.resolution,h=this.clampOffset;return s[0]=(e._frame.x+a+h)/o.width,s[1]=(e._frame.y+a+h)/o.height,s[2]=(e._frame.x+e._frame.width-a+h)/o.width,s[3]=(e._frame.y+e._frame.height-a+h)/o.height,this.uClampOffset[0]=h/o.realWidth,this.uClampOffset[1]=h/o.realHeight,this.isSimple=e._frame.width===o.width&&e._frame.height===o.height&&0===e.rotate,!0},t}(),ji=function(t){function e(e){var r=this,i=new Ie;return r=t.call(this,Bi,Ui)||this,e.renderable=!1,r.maskSprite=e,r.maskMatrix=i,r}return pr(e,t),e.prototype.apply=function(t,e,r,i){var n=this.maskSprite,o=n._texture;o.valid&&(o.uvMatrix||(o.uvMatrix=new Xi(o,0)),o.uvMatrix.update(),this.uniforms.npmAlpha=o.baseTexture.alphaMode?0:1,this.uniforms.mask=o,this.uniforms.otherMatrix=t.calculateSpriteMatrix(this.maskMatrix,n).prepend(o.uvMatrix.mapCoord),this.uniforms.alpha=n.worldAlpha,this.uniforms.maskClamp=o.uvMatrix.uClampFrame,t.applyFilter(this,e,r,i))},e}(Fi),Hi=function(e){function r(t){var r=e.call(this,t)||this;return r.enableScissor=!1,r.alphaMaskPool=[],r.maskDataPool=[],r.maskStack=[],r.alphaMaskIndex=0,r}return pr(r,e),r.prototype.setMaskStack=function(t){this.maskStack=t,this.renderer.scissor.setMaskStack(t),this.renderer.stencil.setMaskStack(t)},r.prototype.push=function(e,r){var i=r;if(!i.isMaskData){var n=this.maskDataPool.pop()||new ui;n.pooled=!0,n.maskObject=r,i=n}switch(i.autoDetect&&this.detect(i),i.copyCountersOrReset(this.maskStack[this.maskStack.length-1]),i._target=e,i.type){case t.MASK_TYPES.SCISSOR:this.maskStack.push(i),this.renderer.scissor.push(i);break;case t.MASK_TYPES.STENCIL:this.maskStack.push(i),this.renderer.stencil.push(i);break;case t.MASK_TYPES.SPRITE:i.copyCountersOrReset(null),this.pushSpriteMask(i),this.maskStack.push(i)}},r.prototype.pop=function(e){var r=this.maskStack.pop();if(r&&r._target===e){switch(r.type){case t.MASK_TYPES.SCISSOR:this.renderer.scissor.pop();break;case t.MASK_TYPES.STENCIL:this.renderer.stencil.pop(r.maskObject);break;case t.MASK_TYPES.SPRITE:this.popSpriteMask()}r.reset(),r.pooled&&this.maskDataPool.push(r)}},r.prototype.detect=function(e){var r=e.maskObject;if(r.isSprite)e.type=t.MASK_TYPES.SPRITE;else if(e.type=t.MASK_TYPES.STENCIL,this.enableScissor&&r.isFastRect&&r.isFastRect()){var i=r.worldTransform,n=Math.atan2(i.b,i.a),o=Math.atan2(i.d,i.c);n=Math.round(n*(180/Math.PI)*100),o=((o=Math.round(o*(180/Math.PI)*100)-n)%18e3+18e3)%18e3,0===(n=(n%9e3+9e3)%9e3)&&9e3===o&&(e.type=t.MASK_TYPES.SCISSOR)}},r.prototype.pushSpriteMask=function(t){var e=t.maskObject,r=t._target,i=this.alphaMaskPool[this.alphaMaskIndex];i||(i=this.alphaMaskPool[this.alphaMaskIndex]=[new ji(e)]),i[0].resolution=this.renderer.resolution,i[0].maskSprite=e;var n=r.filterArea;r.filterArea=e.getBounds(!0),this.renderer.filter.push(r,i),r.filterArea=n,this.alphaMaskIndex++},r.prototype.popSpriteMask=function(){this.renderer.filter.pop(),this.alphaMaskIndex--},r}(Ar),Gi=function(t){function e(e){var r=t.call(this,e)||this;return r.maskStack=[],r.glConst=0,r}return pr(e,t),e.prototype.getStackLength=function(){return this.maskStack.length},e.prototype.setMaskStack=function(t){var e=this.renderer.gl,r=this.getStackLength();this.maskStack=t;var i=this.getStackLength();i!==r&&(0===i?e.disable(this.glConst):(e.enable(this.glConst),this._useCurrent()))},e.prototype._useCurrent=function(){},e.prototype.destroy=function(){t.prototype.destroy.call(this),this.maskStack=null},e}(Ar),Yi=function(t){function e(e){var r=t.call(this,e)||this;return r.glConst=WebGLRenderingContext.SCISSOR_TEST,r}return pr(e,t),e.prototype.getStackLength=function(){var t=this.maskStack[this.maskStack.length-1];return t?t._scissorCounter:0},e.prototype.push=function(t){var e=t.maskObject;e.renderable=!0;var r=t._scissorRect,i=e.getBounds(!0),n=this.renderer.gl;e.renderable=!1,r?i.fit(r):n.enable(n.SCISSOR_TEST),t._scissorCounter++,t._scissorRect=i,this._useCurrent()},e.prototype.pop=function(){var t=this.renderer.gl;this.getStackLength()>0?this._useCurrent():t.disable(t.SCISSOR_TEST)},e.prototype._useCurrent=function(){var t=this.maskStack[this.maskStack.length-1]._scissorRect,e=this.renderer.renderTexture.current,r=this.renderer.projection,i=r.transform,n=r.sourceFrame,o=r.destinationFrame,s=e?e.resolution:this.renderer.resolution,a=(t.x-n.x)*s+o.x,h=(t.y-n.y)*s+o.y,u=t.width*s,l=t.height*s;i&&(a+=i.tx*s,h+=i.ty*s),e||(h=this.renderer.height-l-h),this.renderer.gl.scissor(a,h,u,l)},e}(Gi),zi=function(t){function e(e){var r=t.call(this,e)||this;return r.glConst=WebGLRenderingContext.STENCIL_TEST,r}return pr(e,t),e.prototype.getStackLength=function(){var t=this.maskStack[this.maskStack.length-1];return t?t._stencilCounter:0},e.prototype.push=function(t){var e=t.maskObject,r=this.renderer.gl,i=t._stencilCounter;0===i&&(this.renderer.framebuffer.forceStencil(),r.enable(r.STENCIL_TEST)),t._stencilCounter++,r.colorMask(!1,!1,!1,!1),r.stencilFunc(r.EQUAL,i,this._getBitwiseMask()),r.stencilOp(r.KEEP,r.KEEP,r.INCR),e.renderable=!0,e.render(this.renderer),this.renderer.batch.flush(),e.renderable=!1,this._useCurrent()},e.prototype.pop=function(t){var e=this.renderer.gl;0===this.getStackLength()?(e.disable(e.STENCIL_TEST),e.clear(e.STENCIL_BUFFER_BIT),e.clearStencil(0)):(e.colorMask(!1,!1,!1,!1),e.stencilOp(e.KEEP,e.KEEP,e.DECR),t.renderable=!0,t.render(this.renderer),this.renderer.batch.flush(),t.renderable=!1,this._useCurrent())},e.prototype._useCurrent=function(){var t=this.renderer.gl;t.colorMask(!0,!0,!0,!0),t.stencilFunc(t.EQUAL,this.getStackLength(),this._getBitwiseMask()),t.stencilOp(t.KEEP,t.KEEP,t.KEEP)},e.prototype._getBitwiseMask=function(){return(1<<this.getStackLength())-1},e}(Gi),Vi=function(t){function e(e){var r=t.call(this,e)||this;return r.destinationFrame=null,r.sourceFrame=null,r.defaultFrame=null,r.projectionMatrix=new Ie,r.transform=null,r}return pr(e,t),e.prototype.update=function(t,e,r,i){this.destinationFrame=t||this.destinationFrame||this.defaultFrame,this.sourceFrame=e||this.sourceFrame||t,this.calculateProjection(this.destinationFrame,this.sourceFrame,r,i),this.transform&&this.projectionMatrix.append(this.transform);var n=this.renderer;n.globalUniforms.uniforms.projectionMatrix=this.projectionMatrix,n.globalUniforms.update(),n.shader.shader&&n.shader.syncUniformGroup(n.shader.shader.uniforms.globals)},e.prototype.calculateProjection=function(t,e,r,i){var n=this.projectionMatrix,o=i?-1:1;n.identity(),n.a=1/e.width*2,n.d=o*(1/e.height*2),n.tx=-1-e.x*n.a,n.ty=-o-e.y*n.d},e.prototype.setTransform=function(t){},e}(Ar),Wi=new xe,qi=new xe,Ki=new xe,Zi=function(t){function e(e){var r=t.call(this,e)||this;return r.clearColor=e._backgroundColorRgba,r.defaultMaskStack=[],r.current=null,r.sourceFrame=new xe,r.destinationFrame=new xe,r}return pr(e,t),e.prototype.bind=function(t,e,r){void 0===t&&(t=null);var i,n,o,s=this.renderer;this.current=t,t?(o=(i=t.baseTexture).resolution,e||(Wi.width=t.frame.width,Wi.height=t.frame.height,e=Wi),r||(qi.x=t.frame.x,qi.y=t.frame.y,qi.width=e.width,qi.height=e.height,r=qi),n=i.framebuffer):(o=s.resolution,e||(Wi.width=s.screen.width,Wi.height=s.screen.height,e=Wi),r||((r=Wi).width=e.width,r.height=e.height)),Ki.x=r.x*o,Ki.y=r.y*o,Ki.width=r.width*o,Ki.height=r.height*o,this.renderer.framebuffer.bind(n,Ki),this.renderer.projection.update(r,e,o,!n),t?this.renderer.mask.setMaskStack(i.maskStack):this.renderer.mask.setMaskStack(this.defaultMaskStack),this.sourceFrame.copyFrom(e),this.destinationFrame.copyFrom(r)},e.prototype.clear=function(t,e){t=this.current?t||this.current.baseTexture.clearColor:t||this.clearColor,this.renderer.framebuffer.clear(t[0],t[1],t[2],t[3],e)},e.prototype.resize=function(){this.bind(null)},e.prototype.reset=function(){this.bind(null)},e}(Ar),Ji=function(){return function(){}}(),Qi=function(){function t(t,e){this.program=t,this.uniformData=e,this.uniformGroups={}}return t.prototype.destroy=function(){this.uniformData=null,this.uniformGroups=null,this.program=null},t}(),$i=0,tn={textureCount:0},en=function(t){function e(e){var r=t.call(this,e)||this;return r.destroyed=!1,r.systemCheck(),r.gl=null,r.shader=null,r.program=null,r.cache={},r.id=$i++,r}return pr(e,t),e.prototype.systemCheck=function(){if(!function(){if("boolean"==typeof Ii)return Ii;try{var t=new Function("param1","param2","param3","return param1[param2] === param3;");Ii=!0===t({a:"b"},"a","b")}catch(t){Ii=!1}return Ii}())throw new Error("Current environment does not allow unsafe-eval, please use @pixi/unsafe-eval module to enable support.")},e.prototype.contextChange=function(t){this.gl=t,this.reset()},e.prototype.bind=function(t,e){t.uniforms.globals=this.renderer.globalUniforms;var r=t.program,i=r.glPrograms[this.renderer.CONTEXT_UID]||this.generateShader(t);return this.shader=t,this.program!==r&&(this.program=r,this.gl.useProgram(i.program)),e||(tn.textureCount=0,this.syncUniformGroup(t.uniformGroup,tn)),i},e.prototype.setUniforms=function(t){var e=this.shader.program,r=e.glPrograms[this.renderer.CONTEXT_UID];e.syncUniforms(r.uniformData,t,this.renderer)},e.prototype.syncUniformGroup=function(t,e){var r=this.getglProgram();t.static&&t.dirtyId===r.uniformGroups[t.id]||(r.uniformGroups[t.id]=t.dirtyId,this.syncUniforms(t,r,e))},e.prototype.syncUniforms=function(t,e,r){(t.syncUniforms[this.shader.program.id]||this.createSyncGroups(t))(e.uniformData,t.uniforms,this.renderer,r)},e.prototype.createSyncGroups=function(t){var e=this.getSignature(t,this.shader.program.uniformData);return this.cache[e]||(this.cache[e]=function(t,e){var r=["\n        var v = null;\n        var cv = null\n        var t = 0;\n        var gl = renderer.gl\n    "];for(var i in t.uniforms){var n=e[i];if(n){for(var o=t.uniforms[i],s=!1,a=0;a<Si.length;a++)if(Si[a].test(n,o)){r.push(Si[a].code(i,o)),s=!0;break}if(!s){var h=(1===n.size?wi:Pi)[n.type].replace("location",'ud["'+i+'"].location');r.push('\n            cv = ud["'+i+'"].value;\n            v = uv["'+i+'"];\n            '+h+";")}}else t.uniforms[i].group&&r.push('\n                    renderer.shader.syncUniformGroup(uv["'+i+'"], syncData);\n                ')}return new Function("ud","uv","renderer","syncData",r.join("\n"))}(t,this.shader.program.uniformData)),t.syncUniforms[this.shader.program.id]=this.cache[e],t.syncUniforms[this.shader.program.id]},e.prototype.getSignature=function(t,e){var r=t.uniforms,i=[];for(var n in r)i.push(n),e[n]&&i.push(e[n].type);return i.join("-")},e.prototype.getglProgram=function(){return this.shader?this.shader.program.glPrograms[this.renderer.CONTEXT_UID]:null},e.prototype.generateShader=function(t){var e=this.gl,r=t.program,i={};for(var n in r.attributeData)i[n]=r.attributeData[n].location;var o=ci(e,r.vertexSrc,r.fragmentSrc,i),s={};for(var n in r.uniformData){var a=r.uniformData[n];s[n]={location:e.getUniformLocation(o,n),value:pi(a.type,a.size)}}var h=new Qi(o,s);return r.glPrograms[this.renderer.CONTEXT_UID]=h,h},e.prototype.reset=function(){this.program=null,this.shader=null},e.prototype.destroy=function(){this.destroyed=!0},e}(Ar);var rn=0,nn=1,on=2,sn=3,an=4,hn=function(e){function r(r){var i=e.call(this,r)||this;return i.gl=null,i.stateId=0,i.polygonOffset=0,i.blendMode=t.BLEND_MODES.NONE,i._blendEq=!1,i.map=[],i.map[rn]=i.setBlend,i.map[nn]=i.setOffset,i.map[on]=i.setCullFace,i.map[sn]=i.setDepthTest,i.map[an]=i.setFrontFace,i.checks=[],i.defaultState=new Ni,i.defaultState.blend=!0,i}return pr(r,e),r.prototype.contextChange=function(e){this.gl=e,this.blendModes=function(e,r){return void 0===r&&(r=[]),r[t.BLEND_MODES.NORMAL]=[e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.ADD]=[e.ONE,e.ONE],r[t.BLEND_MODES.MULTIPLY]=[e.DST_COLOR,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.SCREEN]=[e.ONE,e.ONE_MINUS_SRC_COLOR,e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.OVERLAY]=[e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.DARKEN]=[e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.LIGHTEN]=[e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.COLOR_DODGE]=[e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.COLOR_BURN]=[e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.HARD_LIGHT]=[e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.SOFT_LIGHT]=[e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.DIFFERENCE]=[e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.EXCLUSION]=[e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.HUE]=[e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.SATURATION]=[e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.COLOR]=[e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.LUMINOSITY]=[e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.NONE]=[0,0],r[t.BLEND_MODES.NORMAL_NPM]=[e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.ADD_NPM]=[e.SRC_ALPHA,e.ONE,e.ONE,e.ONE],r[t.BLEND_MODES.SCREEN_NPM]=[e.SRC_ALPHA,e.ONE_MINUS_SRC_COLOR,e.ONE,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.SRC_IN]=[e.DST_ALPHA,e.ZERO],r[t.BLEND_MODES.SRC_OUT]=[e.ONE_MINUS_DST_ALPHA,e.ZERO],r[t.BLEND_MODES.SRC_ATOP]=[e.DST_ALPHA,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.DST_OVER]=[e.ONE_MINUS_DST_ALPHA,e.ONE],r[t.BLEND_MODES.DST_IN]=[e.ZERO,e.SRC_ALPHA],r[t.BLEND_MODES.DST_OUT]=[e.ZERO,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.DST_ATOP]=[e.ONE_MINUS_DST_ALPHA,e.SRC_ALPHA],r[t.BLEND_MODES.XOR]=[e.ONE_MINUS_DST_ALPHA,e.ONE_MINUS_SRC_ALPHA],r[t.BLEND_MODES.SUBTRACT]=[e.ONE,e.ONE,e.ONE,e.ONE,e.FUNC_REVERSE_SUBTRACT,e.FUNC_ADD],r}(e),this.set(this.defaultState),this.reset()},r.prototype.set=function(t){if(t=t||this.defaultState,this.stateId!==t.data){for(var e=this.stateId^t.data,r=0;e;)1&e&&this.map[r].call(this,!!(t.data&1<<r)),e>>=1,r++;this.stateId=t.data}for(r=0;r<this.checks.length;r++)this.checks[r](this,t)},r.prototype.forceState=function(t){t=t||this.defaultState;for(var e=0;e<this.map.length;e++)this.map[e].call(this,!!(t.data&1<<e));for(e=0;e<this.checks.length;e++)this.checks[e](this,t);this.stateId=t.data},r.prototype.setBlend=function(t){this.updateCheck(r.checkBlendMode,t),this.gl[t?"enable":"disable"](this.gl.BLEND)},r.prototype.setOffset=function(t){this.updateCheck(r.checkPolygonOffset,t),this.gl[t?"enable":"disable"](this.gl.POLYGON_OFFSET_FILL)},r.prototype.setDepthTest=function(t){this.gl[t?"enable":"disable"](this.gl.DEPTH_TEST)},r.prototype.setCullFace=function(t){this.gl[t?"enable":"disable"](this.gl.CULL_FACE)},r.prototype.setFrontFace=function(t){this.gl.frontFace(this.gl[t?"CW":"CCW"])},r.prototype.setBlendMode=function(t){if(t!==this.blendMode){this.blendMode=t;var e=this.blendModes[t],r=this.gl;2===e.length?r.blendFunc(e[0],e[1]):r.blendFuncSeparate(e[0],e[1],e[2],e[3]),6===e.length?(this._blendEq=!0,r.blendEquationSeparate(e[4],e[5])):this._blendEq&&(this._blendEq=!1,r.blendEquationSeparate(r.FUNC_ADD,r.FUNC_ADD))}},r.prototype.setPolygonOffset=function(t,e){this.gl.polygonOffset(t,e)},r.prototype.reset=function(){this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL,!1),this.forceState(this.defaultState),this._blendEq=!0,this.blendMode=-1,this.setBlendMode(0)},r.prototype.updateCheck=function(t,e){var r=this.checks.indexOf(t);e&&-1===r?this.checks.push(t):e||-1===r||this.checks.splice(r,1)},r.checkBlendMode=function(t,e){t.setBlendMode(e.blendMode)},r.checkPolygonOffset=function(t,e){t.setPolygonOffset(1,e.polygonOffset)},r}(Ar),un=function(e){function r(t){var r=e.call(this,t)||this;return r.count=0,r.checkCount=0,r.maxIdle=D.GC_MAX_IDLE,r.checkCountMax=D.GC_MAX_CHECK_COUNT,r.mode=D.GC_MODE,r}return pr(r,e),r.prototype.postrender=function(){this.renderer.renderingToScreen&&(this.count++,this.mode!==t.GC_MODES.MANUAL&&(this.checkCount++,this.checkCount>this.checkCountMax&&(this.checkCount=0,this.run())))},r.prototype.run=function(){for(var t=this.renderer.texture,e=t.managedTextures,r=!1,i=0;i<e.length;i++){var n=e[i];!n.framebuffer&&this.count-n.touched>this.maxIdle&&(t.destroyTexture(n,!0),e[i]=null,r=!0)}if(r){var o=0;for(i=0;i<e.length;i++)null!==e[i]&&(e[o++]=e[i]);e.length=o}},r.prototype.unload=function(t){var e=this.renderer.texture,r=t._texture;r&&!r.framebuffer&&e.destroyTexture(r);for(var i=t.children.length-1;i>=0;i--)this.unload(t.children[i])},r}(Ar),ln=function(){return function(t){this.texture=t,this.width=-1,this.height=-1,this.dirtyId=-1,this.dirtyStyleId=-1,this.mipmap=!1,this.wrapMode=33071,this.type=6408,this.internalFormat=5121}}(),cn=function(e){function r(t){var r=e.call(this,t)||this;return r.boundTextures=[],r.currentLocation=-1,r.managedTextures=[],r._unknownBoundTextures=!1,r.unknownTexture=new gr,r}return pr(r,e),r.prototype.contextChange=function(){var t=this.gl=this.renderer.gl;this.CONTEXT_UID=this.renderer.CONTEXT_UID,this.webGLVersion=this.renderer.context.webGLVersion;var e=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS);this.boundTextures.length=e;for(var r=0;r<e;r++)this.boundTextures[r]=null;this.emptyTextures={};var i=new ln(t.createTexture());t.bindTexture(t.TEXTURE_2D,i.texture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,new Uint8Array(4)),this.emptyTextures[t.TEXTURE_2D]=i,this.emptyTextures[t.TEXTURE_CUBE_MAP]=new ln(t.createTexture()),t.bindTexture(t.TEXTURE_CUBE_MAP,this.emptyTextures[t.TEXTURE_CUBE_MAP].texture);for(r=0;r<6;r++)t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,null);t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MIN_FILTER,t.LINEAR);for(r=0;r<this.boundTextures.length;r++)this.bind(null,r)},r.prototype.bind=function(t,e){void 0===e&&(e=0);var r=this.gl;if(t){if((t=t.castToBaseTexture()).parentTextureArray)return;if(t.valid){t.touched=this.renderer.textureGC.count;var i=t._glTextures[this.CONTEXT_UID]||this.initTexture(t);this.boundTextures[e]!==t&&(this.currentLocation!==e&&(this.currentLocation=e,r.activeTexture(r.TEXTURE0+e)),r.bindTexture(t.target,i.texture)),i.dirtyId!==t.dirtyId&&(this.currentLocation!==e&&(this.currentLocation=e,r.activeTexture(r.TEXTURE0+e)),this.updateTexture(t)),this.boundTextures[e]=t}}else this.currentLocation!==e&&(this.currentLocation=e,r.activeTexture(r.TEXTURE0+e)),r.bindTexture(r.TEXTURE_2D,this.emptyTextures[r.TEXTURE_2D].texture),this.boundTextures[e]=null},r.prototype.reset=function(){this._unknownBoundTextures=!0,this.currentLocation=-1;for(var t=0;t<this.boundTextures.length;t++)this.boundTextures[t]=this.unknownTexture},r.prototype.unbind=function(t){var e=this.gl,r=this.boundTextures;if(this._unknownBoundTextures){this._unknownBoundTextures=!1;for(var i=0;i<r.length;i++)r[i]===this.unknownTexture&&this.bind(null,i)}for(i=0;i<r.length;i++)r[i]===t&&(this.currentLocation!==i&&(e.activeTexture(e.TEXTURE0+i),this.currentLocation=i),e.bindTexture(t.target,this.emptyTextures[t.target].texture),r[i]=null)},r.prototype.initTexture=function(t){var e=new ln(this.gl.createTexture());return e.dirtyId=-1,t._glTextures[this.CONTEXT_UID]=e,this.managedTextures.push(t),t.on("dispose",this.destroyTexture,this),e},r.prototype.initTextureType=function(e,r){if(r.internalFormat=e.format,r.type=e.type,2===this.webGLVersion){var i=this.renderer.gl;e.type===i.FLOAT&&e.format===i.RGBA&&(r.internalFormat=i.RGBA32F),e.type===t.TYPES.HALF_FLOAT&&(r.type=i.HALF_FLOAT),r.type===i.HALF_FLOAT&&e.format===i.RGBA&&(r.internalFormat=i.RGBA16F)}},r.prototype.updateTexture=function(t){var e=t._glTextures[this.CONTEXT_UID];if(e){var r=this.renderer;if(this.initTextureType(t,e),t.resource&&t.resource.upload(r,t,e));else{var i=t.realWidth,n=t.realHeight,o=r.gl;(e.width!==i||e.height!==n||e.dirtyId<0)&&(e.width=i,e.height=n,o.texImage2D(t.target,0,e.internalFormat,i,n,0,t.format,e.type,null))}t.dirtyStyleId!==e.dirtyStyleId&&this.updateTextureStyle(t),e.dirtyId=t.dirtyId}},r.prototype.destroyTexture=function(t,e){var r=this.gl;if((t=t.castToBaseTexture())._glTextures[this.CONTEXT_UID]&&(this.unbind(t),r.deleteTexture(t._glTextures[this.CONTEXT_UID].texture),t.off("dispose",this.destroyTexture,this),delete t._glTextures[this.CONTEXT_UID],!e)){var i=this.managedTextures.indexOf(t);-1!==i&&te(this.managedTextures,i,1)}},r.prototype.updateTextureStyle=function(e){var r=e._glTextures[this.CONTEXT_UID];r&&(e.mipmap!==t.MIPMAP_MODES.POW2&&2===this.webGLVersion||e.isPowerOfTwo?r.mipmap=e.mipmap>=1:r.mipmap=!1,2===this.webGLVersion||e.isPowerOfTwo?r.wrapMode=e.wrapMode:r.wrapMode=t.WRAP_MODES.CLAMP,e.resource&&e.resource.style(this.renderer,e,r)||this.setStyle(e,r),r.dirtyStyleId=e.dirtyStyleId)},r.prototype.setStyle=function(e,r){var i=this.gl;if(r.mipmap&&i.generateMipmap(e.target),i.texParameteri(e.target,i.TEXTURE_WRAP_S,r.wrapMode),i.texParameteri(e.target,i.TEXTURE_WRAP_T,r.wrapMode),r.mipmap){i.texParameteri(e.target,i.TEXTURE_MIN_FILTER,e.scaleMode===t.SCALE_MODES.LINEAR?i.LINEAR_MIPMAP_LINEAR:i.NEAREST_MIPMAP_NEAREST);var n=this.renderer.context.extensions.anisotropicFiltering;if(n&&e.anisotropicLevel>0&&e.scaleMode===t.SCALE_MODES.LINEAR){var o=Math.min(e.anisotropicLevel,i.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT));i.texParameterf(e.target,n.TEXTURE_MAX_ANISOTROPY_EXT,o)}}else i.texParameteri(e.target,i.TEXTURE_MIN_FILTER,e.scaleMode===t.SCALE_MODES.LINEAR?i.LINEAR:i.NEAREST);i.texParameteri(e.target,i.TEXTURE_MAG_FILTER,e.scaleMode===t.SCALE_MODES.LINEAR?i.LINEAR:i.NEAREST)},r}(Ar),dn={FilterSystem:Qr,BatchSystem:ti,ContextSystem:ri,FramebufferSystem:oi,GeometrySystem:hi,MaskSystem:Hi,ScissorSystem:Yi,StencilSystem:zi,ProjectionSystem:Vi,RenderTextureSystem:Zi,ShaderSystem:en,StateSystem:hn,TextureGCSystem:un,TextureSystem:cn},pn=new Ie,fn=function(e){function r(r,i){void 0===r&&(r=t.RENDERER_TYPE.UNKNOWN);var n=e.call(this)||this;return(i=Object.assign({},D.RENDER_OPTIONS,i)).roundPixels&&(D.ROUND_PIXELS=i.roundPixels,oe("5.0.0","Renderer roundPixels option is deprecated, please use PIXI.settings.ROUND_PIXELS",2)),n.options=i,n.type=r,n.screen=new xe(0,0,i.width,i.height),n.view=i.view||document.createElement("canvas"),n.resolution=i.resolution||D.RESOLUTION,n.transparent=i.transparent,n.autoDensity=i.autoDensity||i.autoResize||!1,n.preserveDrawingBuffer=i.preserveDrawingBuffer,n.clearBeforeRender=i.clearBeforeRender,n._backgroundColor=0,n._backgroundColorRgba=[0,0,0,0],n._backgroundColorString="#000000",n.backgroundColor=i.backgroundColor||n._backgroundColor,n._lastObjectRendered=null,n.plugins={},n}return pr(r,e),r.prototype.initPlugins=function(t){for(var e in t)this.plugins[e]=new t[e](this)},Object.defineProperty(r.prototype,"width",{get:function(){return this.view.width},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"height",{get:function(){return this.view.height},enumerable:!1,configurable:!0}),r.prototype.resize=function(t,e){this.screen.width=t,this.screen.height=e,this.view.width=t*this.resolution,this.view.height=e*this.resolution,this.autoDensity&&(this.view.style.width=t+"px",this.view.style.height=e+"px"),this.emit("resize",t,e)},r.prototype.generateTexture=function(t,e,r,i){0===(i=i||t.getLocalBounds(null,!0)).width&&(i.width=1),0===i.height&&(i.height=1);var n=Fr.create({width:0|i.width,height:0|i.height,scaleMode:e,resolution:r});return pn.tx=-i.x,pn.ty=-i.y,this.render(t,n,!1,pn,!!t.parent),n},r.prototype.destroy=function(e){for(var r in this.plugins)this.plugins[r].destroy(),this.plugins[r]=null;e&&this.view.parentNode&&this.view.parentNode.removeChild(this.view);this.plugins=null,this.type=t.RENDERER_TYPE.UNKNOWN,this.view=null,this.screen=null,this._tempDisplayObjectParent=null,this.options=null,this._backgroundColorRgba=null,this._backgroundColorString=null,this._lastObjectRendered=null},Object.defineProperty(r.prototype,"backgroundColor",{get:function(){return this._backgroundColor},set:function(t){this._backgroundColor=t,this._backgroundColorString=Xt(t),kt(t,this._backgroundColorRgba)},enumerable:!1,configurable:!0}),r}(C),mn=function(e){function r(i){var n=e.call(this,t.RENDERER_TYPE.WEBGL,i)||this;return i=n.options,n.gl=null,n.CONTEXT_UID=0,n.runners={destroy:new ur("destroy"),contextChange:new ur("contextChange"),reset:new ur("reset"),update:new ur("update"),postrender:new ur("postrender"),prerender:new ur("prerender"),resize:new ur("resize")},n.globalUniforms=new Zr({projectionMatrix:new Ie},!0),n.addSystem(Hi,"mask").addSystem(ri,"context").addSystem(hn,"state").addSystem(en,"shader").addSystem(cn,"texture").addSystem(hi,"geometry").addSystem(oi,"framebuffer").addSystem(Yi,"scissor").addSystem(zi,"stencil").addSystem(Vi,"projection").addSystem(un,"textureGC").addSystem(Qr,"filter").addSystem(Zi,"renderTexture").addSystem(ti,"batch"),n.initPlugins(r.__plugins),i.context?n.context.initFromContext(i.context):n.context.initFromOptions({alpha:!!n.transparent,antialias:i.antialias,premultipliedAlpha:n.transparent&&"notMultiplied"!==n.transparent,stencil:!0,preserveDrawingBuffer:i.preserveDrawingBuffer,powerPreference:n.options.powerPreference}),n.renderingToScreen=!0,Bt(2===n.context.webGLVersion?"WebGL 2":"WebGL 1"),n.resize(n.options.width,n.options.height),n}return pr(r,e),r.create=function(t){if(Ut())return new r(t);throw new Error('WebGL unsupported in this browser, use "pixi.js-legacy" for fallback canvas2d support.')},r.prototype.addSystem=function(t,e){e||(e=t.name);var r=new t(this);if(this[e])throw new Error('Whoops! The name "'+e+'" is already in use');for(var i in this[e]=r,this.runners)this.runners[i].add(r);return this},r.prototype.render=function(t,e,r,i,n){if(this.renderingToScreen=!e,this.runners.prerender.emit(),this.emit("prerender"),this.projection.transform=i,!this.context.isLost){if(e||(this._lastObjectRendered=t),!n){var o=t.enableTempParent();t.updateTransform(),t.disableTempParent(o)}this.renderTexture.bind(e),this.batch.currentRenderer.start(),(void 0!==r?r:this.clearBeforeRender)&&this.renderTexture.clear(),t.render(this),this.batch.currentRenderer.flush(),e&&e.baseTexture.update(),this.runners.postrender.emit(),this.projection.transform=null,this.emit("postrender")}},r.prototype.resize=function(t,r){e.prototype.resize.call(this,t,r),this.runners.resize.emit(t,r)},r.prototype.reset=function(){return this.runners.reset.emit(),this},r.prototype.clear=function(){this.renderTexture.bind(),this.renderTexture.clear()},r.prototype.destroy=function(t){for(var r in this.runners.destroy.emit(),this.runners)this.runners[r].destroy();e.prototype.destroy.call(this,t),this.gl=null},r.registerPlugin=function(t,e){r.__plugins=r.__plugins||{},r.__plugins[t]=e},r}(fn);function vn(t){return mn.create(t)}var gn="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",yn="attribute vec2 aVertexPosition;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nuniform vec4 inputSize;\nuniform vec4 outputFrame;\n\nvec4 filterVertexPosition( void )\n{\n    vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n\n    return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n}\n\nvec2 filterTextureCoord( void )\n{\n    return aVertexPosition * (outputFrame.zw * inputSize.zw);\n}\n\nvoid main(void)\n{\n    gl_Position = filterVertexPosition();\n    vTextureCoord = filterTextureCoord();\n}\n",_n=function(){return function(){this.texArray=null,this.blend=0,this.type=t.DRAW_MODES.TRIANGLES,this.start=0,this.size=0,this.data=null}}(),xn=function(){function t(){this.elements=[],this.ids=[],this.count=0}return t.prototype.clear=function(){for(var t=0;t<this.count;t++)this.elements[t]=null;this.count=0},t}(),bn=function(){function t(t){this.rawBinaryData=new ArrayBuffer(t),this.uint32View=new Uint32Array(this.rawBinaryData),this.float32View=new Float32Array(this.rawBinaryData)}return Object.defineProperty(t.prototype,"int8View",{get:function(){return this._int8View||(this._int8View=new Int8Array(this.rawBinaryData)),this._int8View},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"uint8View",{get:function(){return this._uint8View||(this._uint8View=new Uint8Array(this.rawBinaryData)),this._uint8View},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"int16View",{get:function(){return this._int16View||(this._int16View=new Int16Array(this.rawBinaryData)),this._int16View},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"uint16View",{get:function(){return this._uint16View||(this._uint16View=new Uint16Array(this.rawBinaryData)),this._uint16View},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"int32View",{get:function(){return this._int32View||(this._int32View=new Int32Array(this.rawBinaryData)),this._int32View},enumerable:!1,configurable:!0}),t.prototype.view=function(t){return this[t+"View"]},t.prototype.destroy=function(){this.rawBinaryData=null,this._int8View=null,this._uint8View=null,this._int16View=null,this._uint16View=null,this._int32View=null,this.uint32View=null,this.float32View=null},t.sizeOf=function(t){switch(t){case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;default:throw new Error(t+" isn't a valid view type")}},t}(),En=function(e){function r(t){var r=e.call(this,t)||this;return r.shaderGenerator=null,r.geometryClass=null,r.vertexSize=null,r.state=Ni.for2d(),r.size=4*D.SPRITE_BATCH_SIZE,r._vertexCount=0,r._indexCount=0,r._bufferedElements=[],r._bufferedTextures=[],r._bufferSize=0,r._shader=null,r._packedGeometries=[],r._packedGeometryPoolSize=2,r._flushId=0,r._aBuffers={},r._iBuffers={},r.MAX_TEXTURES=1,r.renderer.on("prerender",r.onPrerender,r),t.runners.contextChange.add(r),r._dcIndex=0,r._aIndex=0,r._iIndex=0,r._attributeBuffer=null,r._indexBuffer=null,r._tempBoundTextures=[],r}return pr(r,e),r.prototype.contextChange=function(){var e=this.renderer.gl;D.PREFER_ENV===t.ENV.WEBGL_LEGACY?this.MAX_TEXTURES=1:(this.MAX_TEXTURES=Math.min(e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),D.SPRITE_MAX_TEXTURES),this.MAX_TEXTURES=Mi(this.MAX_TEXTURES,e)),this._shader=this.shaderGenerator.generateShader(this.MAX_TEXTURES);for(var r=0;r<this._packedGeometryPoolSize;r++)this._packedGeometries[r]=new this.geometryClass;this.initFlushBuffers()},r.prototype.initFlushBuffers=function(){for(var t=r._drawCallPool,e=r._textureArrayPool,i=this.size/4,n=Math.floor(i/this.MAX_TEXTURES)+1;t.length<i;)t.push(new _n);for(;e.length<n;)e.push(new xn);for(var o=0;o<this.MAX_TEXTURES;o++)this._tempBoundTextures[o]=null},r.prototype.onPrerender=function(){this._flushId=0},r.prototype.render=function(t){t._texture.valid&&(this._vertexCount+t.vertexData.length/2>this.size&&this.flush(),this._vertexCount+=t.vertexData.length/2,this._indexCount+=t.indices.length,this._bufferedTextures[this._bufferSize]=t._texture.baseTexture,this._bufferedElements[this._bufferSize++]=t)},r.prototype.buildTexturesAndDrawCalls=function(){var t=this._bufferedTextures,e=this.MAX_TEXTURES,i=r._textureArrayPool,n=this.renderer.batch,o=this._tempBoundTextures,s=this.renderer.textureGC.count,a=++gr._globalBatch,h=0,u=i[0],l=0;n.copyBoundTextures(o,e);for(var c=0;c<this._bufferSize;++c){var d=t[c];t[c]=null,d._batchEnabled!==a&&(u.count>=e&&(n.boundArray(u,o,a,e),this.buildDrawCalls(u,l,c),l=c,u=i[++h],++a),d._batchEnabled=a,d.touched=s,u.elements[u.count++]=d)}u.count>0&&(n.boundArray(u,o,a,e),this.buildDrawCalls(u,l,this._bufferSize),++h,++a);for(c=0;c<o.length;c++)o[c]=null;gr._globalBatch=a},r.prototype.buildDrawCalls=function(t,e,i){var n=this._bufferedElements,o=this._attributeBuffer,s=this._indexBuffer,a=this.vertexSize,h=r._drawCallPool,u=this._dcIndex,l=this._aIndex,c=this._iIndex,d=h[u];d.start=this._iIndex,d.texArray=t;for(var p=e;p<i;++p){var f=n[p],m=f._texture.baseTexture,v=Gt[m.alphaMode?1:0][f.blendMode];n[p]=null,e<p&&d.blend!==v&&(d.size=c-d.start,e=p,(d=h[++u]).texArray=t,d.start=c),this.packInterleavedGeometry(f,o,s,l,c),l+=f.vertexData.length/2*a,c+=f.indices.length,d.blend=v}e<i&&(d.size=c-d.start,++u),this._dcIndex=u,this._aIndex=l,this._iIndex=c},r.prototype.bindAndClearTexArray=function(t){for(var e=this.renderer.texture,r=0;r<t.count;r++)e.bind(t.elements[r],t.ids[r]),t.elements[r]=null;t.count=0},r.prototype.updateGeometry=function(){var t=this._packedGeometries,e=this._attributeBuffer,r=this._indexBuffer;D.CAN_UPLOAD_SAME_BUFFER?(t[this._flushId]._buffer.update(e.rawBinaryData),t[this._flushId]._indexBuffer.update(r),this.renderer.geometry.updateBuffers()):(this._packedGeometryPoolSize<=this._flushId&&(this._packedGeometryPoolSize++,t[this._flushId]=new this.geometryClass),t[this._flushId]._buffer.update(e.rawBinaryData),t[this._flushId]._indexBuffer.update(r),this.renderer.geometry.bind(t[this._flushId]),this.renderer.geometry.updateBuffers(),this._flushId++)},r.prototype.drawBatches=function(){for(var t=this._dcIndex,e=this.renderer,i=e.gl,n=e.state,o=r._drawCallPool,s=null,a=0;a<t;a++){var h=o[a],u=h.texArray,l=h.type,c=h.size,d=h.start,p=h.blend;s!==u&&(s=u,this.bindAndClearTexArray(u)),this.state.blendMode=p,n.set(this.state),i.drawElements(l,c,i.UNSIGNED_SHORT,2*d)}},r.prototype.flush=function(){0!==this._vertexCount&&(this._attributeBuffer=this.getAttributeBuffer(this._vertexCount),this._indexBuffer=this.getIndexBuffer(this._indexCount),this._aIndex=0,this._iIndex=0,this._dcIndex=0,this.buildTexturesAndDrawCalls(),this.updateGeometry(),this.drawBatches(),this._bufferSize=0,this._vertexCount=0,this._indexCount=0)},r.prototype.start=function(){this.renderer.state.set(this.state),this.renderer.shader.bind(this._shader),D.CAN_UPLOAD_SAME_BUFFER&&this.renderer.geometry.bind(this._packedGeometries[this._flushId])},r.prototype.stop=function(){this.flush()},r.prototype.destroy=function(){for(var t=0;t<this._packedGeometryPoolSize;t++)this._packedGeometries[t]&&this._packedGeometries[t].destroy();this.renderer.off("prerender",this.onPrerender,this),this._aBuffers=null,this._iBuffers=null,this._packedGeometries=null,this._attributeBuffer=null,this._indexBuffer=null,this._shader&&(this._shader.destroy(),this._shader=null),e.prototype.destroy.call(this)},r.prototype.getAttributeBuffer=function(t){var e=Jt(Math.ceil(t/8)),r=$t(e),i=8*e;this._aBuffers.length<=r&&(this._iBuffers.length=r+1);var n=this._aBuffers[i];return n||(this._aBuffers[i]=n=new bn(i*this.vertexSize*4)),n},r.prototype.getIndexBuffer=function(t){var e=Jt(Math.ceil(t/12)),r=$t(e),i=12*e;this._iBuffers.length<=r&&(this._iBuffers.length=r+1);var n=this._iBuffers[r];return n||(this._iBuffers[r]=n=new Uint16Array(i)),n},r.prototype.packInterleavedGeometry=function(t,e,r,i,n){for(var o=e.uint32View,s=e.float32View,a=i/this.vertexSize,h=t.uvs,u=t.indices,l=t.vertexData,c=t._texture.baseTexture._batchLocation,d=Math.min(t.worldAlpha,1),p=d<1&&t._texture.baseTexture.alphaMode?Vt(t._tintRGB,d):t._tintRGB+(255*d<<24),f=0;f<l.length;f+=2)s[i++]=l[f],s[i++]=l[f+1],s[i++]=h[f],s[i++]=h[f+1],o[i++]=p,s[i++]=c;for(f=0;f<u.length;f++)r[n++]=a+u[f]},r._drawCallPool=[],r._textureArrayPool=[],r}($r),Tn=function(){function t(t,e){if(this.vertexSrc=t,this.fragTemplate=e,this.programCache={},this.defaultGroupCache={},e.indexOf("%count%")<0)throw new Error('Fragment template must contain "%count%".');if(e.indexOf("%forloop%")<0)throw new Error('Fragment template must contain "%forloop%".')}return t.prototype.generateShader=function(t){if(!this.programCache[t]){for(var e=new Int32Array(t),r=0;r<t;r++)e[r]=r;this.defaultGroupCache[t]=Zr.from({uSamplers:e},!0);var i=this.fragTemplate;i=(i=i.replace(/%count%/gi,""+t)).replace(/%forloop%/gi,this.generateSampleSrc(t)),this.programCache[t]=new Ri(this.vertexSrc,i)}var n={tint:new Float32Array([1,1,1,1]),translationMatrix:new Ie,default:this.defaultGroupCache[t]};return new Li(this.programCache[t],n)},t.prototype.generateSampleSrc=function(t){var e="";e+="\n",e+="\n";for(var r=0;r<t;r++)r>0&&(e+="\nelse "),r<t-1&&(e+="if(vTextureId < "+r+".5)"),e+="\n{",e+="\n\tcolor = texture2D(uSamplers["+r+"], vTextureCoord);",e+="\n}";return e+="\n",e+="\n"},t}(),Sn=function(e){function r(r){void 0===r&&(r=!1);var i=e.call(this)||this;return i._buffer=new Xr(null,r,!1),i._indexBuffer=new Xr(null,r,!0),i.addAttribute("aVertexPosition",i._buffer,2,!1,t.TYPES.FLOAT).addAttribute("aTextureCoord",i._buffer,2,!1,t.TYPES.FLOAT).addAttribute("aColor",i._buffer,4,!0,t.TYPES.UNSIGNED_BYTE).addAttribute("aTextureId",i._buffer,1,!0,t.TYPES.FLOAT).addIndex(i._indexBuffer),i}return pr(r,e),r}(Vr),wn="precision highp float;\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\nattribute float aTextureId;\n\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform vec4 tint;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying float vTextureId;\n\nvoid main(void){\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n\n    vTextureCoord = aTextureCoord;\n    vTextureId = aTextureId;\n    vColor = aColor * tint;\n}\n",Pn="varying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying float vTextureId;\nuniform sampler2D uSamplers[%count%];\n\nvoid main(void){\n    vec4 color;\n    %forloop%\n    gl_FragColor = color * vColor;\n}\n",In=function(){function t(){}return t.create=function(t){var e=Object.assign({vertex:wn,fragment:Pn,geometryClass:Sn,vertexSize:6},t),r=e.vertex,i=e.fragment,n=e.vertexSize,o=e.geometryClass;return function(t){function e(e){var s=t.call(this,e)||this;return s.shaderGenerator=new Tn(r,i),s.geometryClass=o,s.vertexSize=n,s}return pr(e,t),e}(En)},Object.defineProperty(t,"defaultVertexSrc",{get:function(){return wn},enumerable:!1,configurable:!0}),Object.defineProperty(t,"defaultFragmentTemplate",{get:function(){return Pn},enumerable:!1,configurable:!0}),t}(),An=In.create(),On=function(){function t(e){var r=this;e=Object.assign({forceCanvas:!1},e),this.renderer=vn(e),this.stage=new Ge,t._plugins.forEach(function(t){t.init.call(r,e)})}return t.registerPlugin=function(e){t._plugins.push(e)},t.prototype.render=function(){this.renderer.render(this.stage)},Object.defineProperty(t.prototype,"view",{get:function(){return this.renderer.view},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"screen",{get:function(){return this.renderer.screen},enumerable:!1,configurable:!0}),t.prototype.destroy=function(e,r){var i=this,n=t._plugins.slice(0);n.reverse(),n.forEach(function(t){t.destroy.call(i)}),this.stage.destroy(r),this.stage=null,this.renderer.destroy(e),this.renderer=null},t}();On._plugins=[];var Mn=function(){function t(){}return t.init=function(t){var e=this;Object.defineProperty(this,"resizeTo",{set:function(t){window.removeEventListener("resize",this.queueResize),this._resizeTo=t,t&&(window.addEventListener("resize",this.queueResize),this.resize())},get:function(){return this._resizeTo}}),this.queueResize=function(){e._resizeTo&&(e.cancelResize(),e._resizeId=requestAnimationFrame(function(){return e.resize()}))},this.cancelResize=function(){e._resizeId&&(cancelAnimationFrame(e._resizeId),e._resizeId=null)},this.resize=function(){if(e._resizeTo){var t,r;if(e.cancelResize(),e._resizeTo===window)t=window.innerWidth,r=window.innerHeight;else{var i=e._resizeTo;t=i.clientWidth,r=i.clientHeight}e.renderer.resize(t,r)}},this._resizeId=null,this._resizeTo=null,this.resizeTo=t.resizeTo||null},t.destroy=function(){this.cancelResize(),this.cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null},t}();On.registerPlugin(Mn);var Dn=new xe,Cn=function(){function t(t){this.renderer=t,t.extract=this}return t.prototype.image=function(t,e,r){var i=new Image;return i.src=this.base64(t,e,r),i},t.prototype.base64=function(t,e,r){return this.canvas(t).toDataURL(e,r)},t.prototype.canvas=function(e){var r,i,n,o=this.renderer,s=!1,a=!1;e&&(e instanceof Fr?n=e:(n=this.renderer.generateTexture(e),a=!0)),n?(r=n.baseTexture.resolution,i=n.frame,s=!1,o.renderTexture.bind(n)):(r=this.renderer.resolution,s=!0,(i=Dn).width=this.renderer.width,i.height=this.renderer.height,o.renderTexture.bind(null));var h=Math.floor(i.width*r+1e-4),u=Math.floor(i.height*r+1e-4),l=new ue(h,u,1),c=new Uint8Array(4*h*u),d=o.gl;d.readPixels(i.x*r,i.y*r,h,u,d.RGBA,d.UNSIGNED_BYTE,c);var p=l.context.getImageData(0,0,h,u);if(t.arrayPostDivide(c,p.data),l.context.putImageData(p,0,0),s){var f=new ue(l.width,l.height,1);f.context.scale(1,-1),f.context.drawImage(l.canvas,0,-u),l.destroy(),l=f}return a&&n.destroy(!0),l.canvas},t.prototype.pixels=function(e){var r,i,n,o=this.renderer,s=!1;e&&(e instanceof Fr?n=e:(n=this.renderer.generateTexture(e),s=!0)),n?(r=n.baseTexture.resolution,i=n.frame,o.renderTexture.bind(n)):(r=o.resolution,(i=Dn).width=o.width,i.height=o.height,o.renderTexture.bind(null));var a=i.width*r,h=i.height*r,u=new Uint8Array(4*a*h),l=o.gl;return l.readPixels(i.x*r,i.y*r,a,h,l.RGBA,l.UNSIGNED_BYTE,u),s&&n.destroy(!0),t.arrayPostDivide(u,u),u},t.prototype.destroy=function(){this.renderer.extract=null,this.renderer=null},t.arrayPostDivide=function(t,e){for(var r=0;r<t.length;r+=4){var i=e[r+3]=t[r+3];0!==i?(e[r]=Math.round(Math.min(255*t[r]/i,255)),e[r+1]=Math.round(Math.min(255*t[r+1]/i,255)),e[r+2]=Math.round(Math.min(255*t[r+2]/i,255))):(e[r]=t[r],e[r+1]=t[r+1],e[r+2]=t[r+2])}},t}();var Rn=function(t,e){if(t){e=e||{};for(var r={key:["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"],q:{name:"queryKey",parser:/(?:^|&)([^&=]*)=?([^&]*)/g},parser:{strict:/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,loose:/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/}},i=r.parser[e.strictMode?"strict":"loose"].exec(t),n={},o=14;o--;)n[r.key[o]]=i[o]||"";return n[r.q.name]={},n[r.key[12]].replace(r.q.parser,function(t,e,i){e&&(n[r.q.name][e]=i)}),n}},Ln=function(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}(r(function(t,e){Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,r,i){return r&&t(e.prototype,r),i&&t(e,i),e}}();function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var n=function(){function t(e,r,n){void 0===r&&(r=!1),i(this,t),this._fn=e,this._once=r,this._thisArg=n,this._next=this._prev=this._owner=null}return r(t,[{key:"detach",value:function(){return null!==this._owner&&(this._owner.detach(this),!0)}}]),t}();function o(t,e){return t._head?(t._tail._next=e,e._prev=t._tail,t._tail=e):(t._head=e,t._tail=e),e._owner=t,e}var s=function(){function t(){i(this,t),this._head=this._tail=void 0}return r(t,[{key:"handlers",value:function(){var t=!(arguments.length<=0||void 0===arguments[0])&&arguments[0],e=this._head;if(t)return!!e;for(var r=[];e;)r.push(e),e=e._next;return r}},{key:"has",value:function(t){if(!(t instanceof n))throw new Error("MiniSignal#has(): First arg must be a MiniSignalBinding object.");return t._owner===this}},{key:"dispatch",value:function(){var t=arguments,e=this._head;if(!e)return!1;for(;e;)e._once&&this.detach(e),e._fn.apply(e._thisArg,t),e=e._next;return!0}},{key:"add",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?null:arguments[1];if("function"!=typeof t)throw new Error("MiniSignal#add(): First arg must be a Function.");return o(this,new n(t,!1,e))}},{key:"once",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?null:arguments[1];if("function"!=typeof t)throw new Error("MiniSignal#once(): First arg must be a Function.");return o(this,new n(t,!0,e))}},{key:"detach",value:function(t){if(!(t instanceof n))throw new Error("MiniSignal#detach(): First arg must be a MiniSignalBinding object.");return t._owner!==this?this:(t._prev&&(t._prev._next=t._next),t._next&&(t._next._prev=t._prev),t===this._head?(this._head=t._next,null===t._next&&(this._tail=null)):t===this._tail&&(this._tail=t._prev,this._tail._next=null),t._owner=null,this)}},{key:"detachAll",value:function(){var t=this._head;if(!t)return this;for(this._head=this._tail=null;t;)t._owner=null,t=t._next;return this}}]),t}();s.MiniSignalBinding=n,e.default=s,t.exports=e.default}));function Nn(){}function Fn(t,e,r,i){var n=0,o=t.length;!function s(a){a||n===o?r&&r(a):i?setTimeout(function(){e(t[n++],s)},1):e(t[n++],s)}()}function Bn(t){return function(){if(null===t)throw new Error("Callback was already called.");var e=t;t=null,e.apply(this,arguments)}}function Un(t,e){if(null==e)e=1;else if(0===e)throw new Error("Concurrency must not be zero");var r=0,i={_tasks:[],concurrency:e,saturated:Nn,unsaturated:Nn,buffer:e/4,empty:Nn,drain:Nn,error:Nn,started:!1,paused:!1,push:function(t,e){n(t,!1,e)},kill:function(){r=0,i.drain=Nn,i.started=!1,i._tasks=[]},unshift:function(t,e){n(t,!0,e)},process:function(){for(;!i.paused&&r<i.concurrency&&i._tasks.length;){var e=i._tasks.shift();0===i._tasks.length&&i.empty(),(r+=1)===i.concurrency&&i.saturated(),t(e.data,Bn(o(e)))}},length:function(){return i._tasks.length},running:function(){return r},idle:function(){return i._tasks.length+r===0},pause:function(){!0!==i.paused&&(i.paused=!0)},resume:function(){if(!1!==i.paused){i.paused=!1;for(var t=1;t<=i.concurrency;t++)i.process()}}};function n(t,e,r){if(null!=r&&"function"!=typeof r)throw new Error("task callback must be a function");if(i.started=!0,null==t&&i.idle())setTimeout(function(){return i.drain()},1);else{var n={data:t,callback:"function"==typeof r?r:Nn};e?i._tasks.unshift(n):i._tasks.push(n),setTimeout(function(){return i.process()},1)}}function o(t){return function(){r-=1,t.callback.apply(t,arguments),null!=arguments[0]&&i.error(arguments[0],t.data),r<=i.concurrency-i.buffer&&i.unsaturated(),i.idle()&&i.drain(),i.process()}}return i}var kn={};function Xn(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function jn(t,e,r){return e&&Xn(t.prototype,e),r&&Xn(t,r),t}var Hn=!(!window.XDomainRequest||"withCredentials"in new XMLHttpRequest),Gn=null;function Yn(){}var zn=function(){function t(e,r,i){if("string"!=typeof e||"string"!=typeof r)throw new Error("Both name and url are required for constructing a resource.");i=i||{},this._flags=0,this._setFlag(t.STATUS_FLAGS.DATA_URL,0===r.indexOf("data:")),this.name=e,this.url=r,this.extension=this._getExtension(),this.data=null,this.crossOrigin=!0===i.crossOrigin?"anonymous":i.crossOrigin,this.timeout=i.timeout||0,this.loadType=i.loadType||this._determineLoadType(),this.xhrType=i.xhrType,this.metadata=i.metadata||{},this.error=null,this.xhr=null,this.children=[],this.type=t.TYPE.UNKNOWN,this.progressChunk=0,this._dequeue=Yn,this._onLoadBinding=null,this._elementTimer=0,this._boundComplete=this.complete.bind(this),this._boundOnError=this._onError.bind(this),this._boundOnProgress=this._onProgress.bind(this),this._boundOnTimeout=this._onTimeout.bind(this),this._boundXhrOnError=this._xhrOnError.bind(this),this._boundXhrOnTimeout=this._xhrOnTimeout.bind(this),this._boundXhrOnAbort=this._xhrOnAbort.bind(this),this._boundXhrOnLoad=this._xhrOnLoad.bind(this),this.onStart=new Ln,this.onProgress=new Ln,this.onComplete=new Ln,this.onAfterMiddleware=new Ln}t.setExtensionLoadType=function(e,r){Vn(t._loadTypeMap,e,r)},t.setExtensionXhrType=function(e,r){Vn(t._xhrTypeMap,e,r)};var e=t.prototype;return e.complete=function(){this._clearEvents(),this._finish()},e.abort=function(e){if(!this.error){if(this.error=new Error(e),this._clearEvents(),this.xhr)this.xhr.abort();else if(this.xdr)this.xdr.abort();else if(this.data)if(this.data.src)this.data.src=t.EMPTY_GIF;else for(;this.data.firstChild;)this.data.removeChild(this.data.firstChild);this._finish()}},e.load=function(e){var r=this;if(!this.isLoading)if(this.isComplete)e&&setTimeout(function(){return e(r)},1);else switch(e&&this.onComplete.once(e),this._setFlag(t.STATUS_FLAGS.LOADING,!0),this.onStart.dispatch(this),!1!==this.crossOrigin&&"string"==typeof this.crossOrigin||(this.crossOrigin=this._determineCrossOrigin(this.url)),this.loadType){case t.LOAD_TYPE.IMAGE:this.type=t.TYPE.IMAGE,this._loadElement("image");break;case t.LOAD_TYPE.AUDIO:this.type=t.TYPE.AUDIO,this._loadSourceElement("audio");break;case t.LOAD_TYPE.VIDEO:this.type=t.TYPE.VIDEO,this._loadSourceElement("video");break;case t.LOAD_TYPE.XHR:default:Hn&&this.crossOrigin?this._loadXdr():this._loadXhr()}},e._hasFlag=function(t){return 0!=(this._flags&t)},e._setFlag=function(t,e){this._flags=e?this._flags|t:this._flags&~t},e._clearEvents=function(){clearTimeout(this._elementTimer),this.data&&this.data.removeEventListener&&(this.data.removeEventListener("error",this._boundOnError,!1),this.data.removeEventListener("load",this._boundComplete,!1),this.data.removeEventListener("progress",this._boundOnProgress,!1),this.data.removeEventListener("canplaythrough",this._boundComplete,!1)),this.xhr&&(this.xhr.removeEventListener?(this.xhr.removeEventListener("error",this._boundXhrOnError,!1),this.xhr.removeEventListener("timeout",this._boundXhrOnTimeout,!1),this.xhr.removeEventListener("abort",this._boundXhrOnAbort,!1),this.xhr.removeEventListener("progress",this._boundOnProgress,!1),this.xhr.removeEventListener("load",this._boundXhrOnLoad,!1)):(this.xhr.onerror=null,this.xhr.ontimeout=null,this.xhr.onprogress=null,this.xhr.onload=null))},e._finish=function(){if(this.isComplete)throw new Error("Complete called again for an already completed resource.");this._setFlag(t.STATUS_FLAGS.COMPLETE,!0),this._setFlag(t.STATUS_FLAGS.LOADING,!1),this.onComplete.dispatch(this)},e._loadElement=function(t){this.metadata.loadElement?this.data=this.metadata.loadElement:"image"===t&&void 0!==window.Image?this.data=new Image:this.data=document.createElement(t),this.crossOrigin&&(this.data.crossOrigin=this.crossOrigin),this.metadata.skipSource||(this.data.src=this.url),this.data.addEventListener("error",this._boundOnError,!1),this.data.addEventListener("load",this._boundComplete,!1),this.data.addEventListener("progress",this._boundOnProgress,!1),this.timeout&&(this._elementTimer=setTimeout(this._boundOnTimeout,this.timeout))},e._loadSourceElement=function(t){if(this.metadata.loadElement?this.data=this.metadata.loadElement:"audio"===t&&void 0!==window.Audio?this.data=new Audio:this.data=document.createElement(t),null!==this.data){if(this.crossOrigin&&(this.data.crossOrigin=this.crossOrigin),!this.metadata.skipSource)if(navigator.isCocoonJS)this.data.src=Array.isArray(this.url)?this.url[0]:this.url;else if(Array.isArray(this.url))for(var e=this.metadata.mimeType,r=0;r<this.url.length;++r)this.data.appendChild(this._createSource(t,this.url[r],Array.isArray(e)?e[r]:e));else{var i=this.metadata.mimeType;this.data.appendChild(this._createSource(t,this.url,Array.isArray(i)?i[0]:i))}this.data.addEventListener("error",this._boundOnError,!1),this.data.addEventListener("load",this._boundComplete,!1),this.data.addEventListener("progress",this._boundOnProgress,!1),this.data.addEventListener("canplaythrough",this._boundComplete,!1),this.data.load(),this.timeout&&(this._elementTimer=setTimeout(this._boundOnTimeout,this.timeout))}else this.abort("Unsupported element: "+t)},e._loadXhr=function(){"string"!=typeof this.xhrType&&(this.xhrType=this._determineXhrType());var e=this.xhr=new XMLHttpRequest;e.open("GET",this.url,!0),e.timeout=this.timeout,this.xhrType===t.XHR_RESPONSE_TYPE.JSON||this.xhrType===t.XHR_RESPONSE_TYPE.DOCUMENT?e.responseType=t.XHR_RESPONSE_TYPE.TEXT:e.responseType=this.xhrType,e.addEventListener("error",this._boundXhrOnError,!1),e.addEventListener("timeout",this._boundXhrOnTimeout,!1),e.addEventListener("abort",this._boundXhrOnAbort,!1),e.addEventListener("progress",this._boundOnProgress,!1),e.addEventListener("load",this._boundXhrOnLoad,!1),e.send()},e._loadXdr=function(){"string"!=typeof this.xhrType&&(this.xhrType=this._determineXhrType());var t=this.xhr=new XDomainRequest;t.timeout=this.timeout||5e3,t.onerror=this._boundXhrOnError,t.ontimeout=this._boundXhrOnTimeout,t.onprogress=this._boundOnProgress,t.onload=this._boundXhrOnLoad,t.open("GET",this.url,!0),setTimeout(function(){return t.send()},1)},e._createSource=function(t,e,r){r||(r=t+"/"+this._getExtension(e));var i=document.createElement("source");return i.src=e,i.type=r,i},e._onError=function(t){this.abort("Failed to load element using: "+t.target.nodeName)},e._onProgress=function(t){t&&t.lengthComputable&&this.onProgress.dispatch(this,t.loaded/t.total)},e._onTimeout=function(){this.abort("Load timed out.")},e._xhrOnError=function(){var t=this.xhr;this.abort(Wn(t)+" Request failed. Status: "+t.status+', text: "'+t.statusText+'"')},e._xhrOnTimeout=function(){var t=this.xhr;this.abort(Wn(t)+" Request timed out.")},e._xhrOnAbort=function(){var t=this.xhr;this.abort(Wn(t)+" Request was aborted by the user.")},e._xhrOnLoad=function(){var e=this.xhr,r="",i=void 0===e.status?200:e.status;if(""!==e.responseType&&"text"!==e.responseType&&void 0!==e.responseType||(r=e.responseText),0===i&&(r.length>0||e.responseType===t.XHR_RESPONSE_TYPE.BUFFER)?i=200:1223===i&&(i=204),2===(i/100|0)){if(this.xhrType===t.XHR_RESPONSE_TYPE.TEXT)this.data=r,this.type=t.TYPE.TEXT;else if(this.xhrType===t.XHR_RESPONSE_TYPE.JSON)try{this.data=JSON.parse(r),this.type=t.TYPE.JSON}catch(t){return void this.abort("Error trying to parse loaded json: "+t)}else if(this.xhrType===t.XHR_RESPONSE_TYPE.DOCUMENT)try{if(window.DOMParser){var n=new DOMParser;this.data=n.parseFromString(r,"text/xml")}else{var o=document.createElement("div");o.innerHTML=r,this.data=o}this.type=t.TYPE.XML}catch(t){return void this.abort("Error trying to parse loaded xml: "+t)}else this.data=e.response||r;this.complete()}else this.abort("["+e.status+"] "+e.statusText+": "+e.responseURL)},e._determineCrossOrigin=function(t,e){if(0===t.indexOf("data:"))return"";if(window.origin!==window.location.origin)return"anonymous";e=e||window.location,Gn||(Gn=document.createElement("a")),Gn.href=t;var r=!(t=Rn(Gn.href,{strictMode:!0})).port&&""===e.port||t.port===e.port,i=t.protocol?t.protocol+":":"";return t.host===e.hostname&&r&&i===e.protocol?"":"anonymous"},e._determineXhrType=function(){return t._xhrTypeMap[this.extension]||t.XHR_RESPONSE_TYPE.TEXT},e._determineLoadType=function(){return t._loadTypeMap[this.extension]||t.LOAD_TYPE.XHR},e._getExtension=function(){var t=this.url,e="";if(this.isDataUrl){var r=t.indexOf("/");e=t.substring(r+1,t.indexOf(";",r))}else{var i=t.indexOf("?"),n=t.indexOf("#"),o=Math.min(i>-1?i:t.length,n>-1?n:t.length);e=(t=t.substring(0,o)).substring(t.lastIndexOf(".")+1)}return e.toLowerCase()},e._getMimeFromXhrType=function(e){switch(e){case t.XHR_RESPONSE_TYPE.BUFFER:return"application/octet-binary";case t.XHR_RESPONSE_TYPE.BLOB:return"application/blob";case t.XHR_RESPONSE_TYPE.DOCUMENT:return"application/xml";case t.XHR_RESPONSE_TYPE.JSON:return"application/json";case t.XHR_RESPONSE_TYPE.DEFAULT:case t.XHR_RESPONSE_TYPE.TEXT:default:return"text/plain"}},jn(t,[{key:"isDataUrl",get:function(){return this._hasFlag(t.STATUS_FLAGS.DATA_URL)}},{key:"isComplete",get:function(){return this._hasFlag(t.STATUS_FLAGS.COMPLETE)}},{key:"isLoading",get:function(){return this._hasFlag(t.STATUS_FLAGS.LOADING)}}]),t}();function Vn(t,e,r){e&&0===e.indexOf(".")&&(e=e.substring(1)),e&&(t[e]=r)}function Wn(t){return t.toString().replace("object ","")}zn.STATUS_FLAGS={NONE:0,DATA_URL:1,COMPLETE:2,LOADING:4},zn.TYPE={UNKNOWN:0,JSON:1,XML:2,IMAGE:3,AUDIO:4,VIDEO:5,TEXT:6},zn.LOAD_TYPE={XHR:1,IMAGE:2,AUDIO:3,VIDEO:4},zn.XHR_RESPONSE_TYPE={DEFAULT:"text",BUFFER:"arraybuffer",BLOB:"blob",DOCUMENT:"document",JSON:"json",TEXT:"text"},zn._loadTypeMap={gif:zn.LOAD_TYPE.IMAGE,png:zn.LOAD_TYPE.IMAGE,bmp:zn.LOAD_TYPE.IMAGE,jpg:zn.LOAD_TYPE.IMAGE,jpeg:zn.LOAD_TYPE.IMAGE,tif:zn.LOAD_TYPE.IMAGE,tiff:zn.LOAD_TYPE.IMAGE,webp:zn.LOAD_TYPE.IMAGE,tga:zn.LOAD_TYPE.IMAGE,svg:zn.LOAD_TYPE.IMAGE,"svg+xml":zn.LOAD_TYPE.IMAGE,mp3:zn.LOAD_TYPE.AUDIO,ogg:zn.LOAD_TYPE.AUDIO,wav:zn.LOAD_TYPE.AUDIO,mp4:zn.LOAD_TYPE.VIDEO,webm:zn.LOAD_TYPE.VIDEO},zn._xhrTypeMap={xhtml:zn.XHR_RESPONSE_TYPE.DOCUMENT,html:zn.XHR_RESPONSE_TYPE.DOCUMENT,htm:zn.XHR_RESPONSE_TYPE.DOCUMENT,xml:zn.XHR_RESPONSE_TYPE.DOCUMENT,tmx:zn.XHR_RESPONSE_TYPE.DOCUMENT,svg:zn.XHR_RESPONSE_TYPE.DOCUMENT,tsx:zn.XHR_RESPONSE_TYPE.DOCUMENT,gif:zn.XHR_RESPONSE_TYPE.BLOB,png:zn.XHR_RESPONSE_TYPE.BLOB,bmp:zn.XHR_RESPONSE_TYPE.BLOB,jpg:zn.XHR_RESPONSE_TYPE.BLOB,jpeg:zn.XHR_RESPONSE_TYPE.BLOB,tif:zn.XHR_RESPONSE_TYPE.BLOB,tiff:zn.XHR_RESPONSE_TYPE.BLOB,webp:zn.XHR_RESPONSE_TYPE.BLOB,tga:zn.XHR_RESPONSE_TYPE.BLOB,json:zn.XHR_RESPONSE_TYPE.JSON,text:zn.XHR_RESPONSE_TYPE.TEXT,txt:zn.XHR_RESPONSE_TYPE.TEXT,ttf:zn.XHR_RESPONSE_TYPE.BUFFER,otf:zn.XHR_RESPONSE_TYPE.BUFFER},zn.EMPTY_GIF="data:image/gif;base64,R0lGODlhAQABAIAAAP///wAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==";var qn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";var Kn=window.URL||window.webkitURL;var Zn={caching:function(t,e){var r=this;kn[t.url]?(t.data=kn[t.url],t.complete()):t.onComplete.once(function(){return kn[r.url]=r.data}),e()},parsing:function(t,e){if(t.data){if(t.xhr&&t.xhrType===zn.XHR_RESPONSE_TYPE.BLOB)if(window.Blob&&"string"!=typeof t.data){if(0===t.data.type.indexOf("image")){var r=Kn.createObjectURL(t.data);return t.blob=t.data,t.data=new Image,t.data.src=r,t.type=zn.TYPE.IMAGE,void(t.data.onload=function(){Kn.revokeObjectURL(r),t.data.onload=null,e()})}}else{var i=t.xhr.getResponseHeader("content-type");if(i&&0===i.indexOf("image"))return t.data=new Image,t.data.src="data:"+i+";base64,"+function(t){for(var e="",r=0;r<t.length;){for(var i=[0,0,0],n=[0,0,0,0],o=0;o<i.length;++o)r<t.length?i[o]=255&t.charCodeAt(r++):i[o]=0;switch(n[0]=i[0]>>2,n[1]=(3&i[0])<<4|i[1]>>4,n[2]=(15&i[1])<<2|i[2]>>6,n[3]=63&i[2],r-(t.length-1)){case 2:n[3]=64,n[2]=64;break;case 1:n[3]=64}for(var s=0;s<n.length;++s)e+=qn.charAt(n[s])}return e}(t.xhr.responseText),t.type=zn.TYPE.IMAGE,void(t.data.onload=function(){t.data.onload=null,e()})}e()}else e()}},Jn=/(#[\w-]+)?$/,Qn=function(){function t(e,r){var i=this;void 0===e&&(e=""),void 0===r&&(r=10),this.baseUrl=e,this.progress=0,this.loading=!1,this.defaultQueryString="",this._beforeMiddleware=[],this._afterMiddleware=[],this._resourcesParsing=[],this._boundLoadResource=function(t,e){return i._loadResource(t,e)},this._queue=Un(this._boundLoadResource,r),this._queue.pause(),this.resources={},this.onProgress=new Ln,this.onError=new Ln,this.onLoad=new Ln,this.onStart=new Ln,this.onComplete=new Ln;for(var n=0;n<t._defaultBeforeMiddleware.length;++n)this.pre(t._defaultBeforeMiddleware[n]);for(var o=0;o<t._defaultAfterMiddleware.length;++o)this.use(t._defaultAfterMiddleware[o])}var e=t.prototype;return e.add=function(t,e,r,i){if(Array.isArray(t)){for(var n=0;n<t.length;++n)this.add(t[n]);return this}if("object"==typeof t&&(i=e||t.callback||t.onComplete,r=t,e=t.url,t=t.name||t.key||t.url),"string"!=typeof e&&(i=r,r=e,e=t),"string"!=typeof e)throw new Error("No url passed to add resource to loader.");if("function"==typeof r&&(i=r,r=null),this.loading&&(!r||!r.parentResource))throw new Error("Cannot add resources while the loader is running.");if(this.resources[t])throw new Error('Resource named "'+t+'" already exists.');if(e=this._prepareUrl(e),this.resources[t]=new zn(t,e,r),"function"==typeof i&&this.resources[t].onAfterMiddleware.once(i),this.loading){for(var o=r.parentResource,s=[],a=0;a<o.children.length;++a)o.children[a].isComplete||s.push(o.children[a]);var h=o.progressChunk*(s.length+1)/(s.length+2);o.children.push(this.resources[t]),o.progressChunk=h;for(var u=0;u<s.length;++u)s[u].progressChunk=h;this.resources[t].progressChunk=h}return this._queue.push(this.resources[t]),this},e.pre=function(t){return this._beforeMiddleware.push(t),this},e.use=function(t){return this._afterMiddleware.push(t),this},e.reset=function(){for(var t in this.progress=0,this.loading=!1,this._queue.kill(),this._queue.pause(),this.resources){var e=this.resources[t];e._onLoadBinding&&e._onLoadBinding.detach(),e.isLoading&&e.abort()}return this.resources={},this},e.load=function(t){if("function"==typeof t&&this.onComplete.once(t),this.loading)return this;if(this._queue.idle())this._onStart(),this._onComplete();else{for(var e=100/this._queue._tasks.length,r=0;r<this._queue._tasks.length;++r)this._queue._tasks[r].data.progressChunk=e;this._onStart(),this._queue.resume()}return this},e._prepareUrl=function(t){var e,r=Rn(t,{strictMode:!0});if(e=r.protocol||!r.path||0===t.indexOf("//")?t:this.baseUrl.length&&this.baseUrl.lastIndexOf("/")!==this.baseUrl.length-1&&"/"!==t.charAt(0)?this.baseUrl+"/"+t:this.baseUrl+t,this.defaultQueryString){var i=Jn.exec(e)[0];-1!==(e=e.substr(0,e.length-i.length)).indexOf("?")?e+="&"+this.defaultQueryString:e+="?"+this.defaultQueryString,e+=i}return e},e._loadResource=function(t,e){var r=this;t._dequeue=e,Fn(this._beforeMiddleware,function(e,i){e.call(r,t,function(){i(t.isComplete?{}:null)})},function(){t.isComplete?r._onLoad(t):(t._onLoadBinding=t.onComplete.once(r._onLoad,r),t.load())},!0)},e._onStart=function(){this.progress=0,this.loading=!0,this.onStart.dispatch(this)},e._onComplete=function(){this.progress=100,this.loading=!1,this.onComplete.dispatch(this,this.resources)},e._onLoad=function(t){var e=this;t._onLoadBinding=null,this._resourcesParsing.push(t),t._dequeue(),Fn(this._afterMiddleware,function(r,i){r.call(e,t,i)},function(){t.onAfterMiddleware.dispatch(t),e.progress=Math.min(100,e.progress+t.progressChunk),e.onProgress.dispatch(e,t),t.error?e.onError.dispatch(t.error,e,t):e.onLoad.dispatch(e,t),e._resourcesParsing.splice(e._resourcesParsing.indexOf(t),1),e._queue.idle()&&0===e._resourcesParsing.length&&e._onComplete()},!0)},jn(t,[{key:"concurrency",get:function(){return this._queue.concurrency},set:function(t){this._queue.concurrency=t}}]),t}();Qn._defaultBeforeMiddleware=[],Qn._defaultAfterMiddleware=[],Qn.pre=function(t){return Qn._defaultBeforeMiddleware.push(t),Qn},Qn.use=function(t){return Qn._defaultAfterMiddleware.push(t),Qn};var $n=zn,to=function(t,e){return(to=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};var eo=function(){function t(){}return t.use=function(t,e){t.data&&t.type===zn.TYPE.IMAGE&&(t.texture=Lr.fromLoader(t.data,t.url,t.name)),e()},t}(),ro=function(t){function e(r,i){for(var n=t.call(this,r,i)||this,o=0;o<e._plugins.length;++o){var s=e._plugins[o],a=s.pre,h=s.use;a&&n.pre(a),h&&n.use(h)}return n._protected=!1,n}return function(t,e){function r(){this.constructor=t}to(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(e,t),e.prototype.destroy=function(){this._protected||this.reset()},Object.defineProperty(e,"shared",{get:function(){var t=e._shared;return t||((t=new e)._protected=!0,e._shared=t),t},enumerable:!1,configurable:!0}),e.registerPlugin=function(t){return e._plugins.push(t),t.add&&t.add(),e},e._plugins=[],e}(Qn);ro.registerPlugin({use:Zn.parsing}),ro.registerPlugin(eo);var io=function(){function t(){}return t.init=function(t){t=Object.assign({sharedLoader:!1},t),this.loader=t.sharedLoader?ro.shared:new ro},t.destroy=function(){this.loader&&(this.loader.destroy(),this.loader=null)},t}(),no=function(t,e){return(no=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};function oo(t,e){function r(){this.constructor=t}no(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var so,ao,ho=function(e){function r(r,i,n,o){void 0===r&&(r=1500),void 0===n&&(n=16384),void 0===o&&(o=!1);var s=e.call(this)||this;return n>16384&&(n=16384),s._properties=[!1,!0,!1,!1,!1],s._maxSize=r,s._batchSize=n,s._buffers=null,s._bufferUpdateIDs=[],s._updateID=0,s.interactiveChildren=!1,s.blendMode=t.BLEND_MODES.NORMAL,s.autoResize=o,s.roundPixels=!0,s.baseTexture=null,s.setProperties(i),s._tint=0,s.tintRgb=new Float32Array(4),s.tint=16777215,s}return oo(r,e),r.prototype.setProperties=function(t){t&&(this._properties[0]="vertices"in t||"scale"in t?!!t.vertices||!!t.scale:this._properties[0],this._properties[1]="position"in t?!!t.position:this._properties[1],this._properties[2]="rotation"in t?!!t.rotation:this._properties[2],this._properties[3]="uvs"in t?!!t.uvs:this._properties[3],this._properties[4]="tint"in t||"alpha"in t?!!t.tint||!!t.alpha:this._properties[4])},r.prototype.updateTransform=function(){this.displayObjectUpdateTransform()},Object.defineProperty(r.prototype,"tint",{get:function(){return this._tint},set:function(t){this._tint=t,kt(t,this.tintRgb)},enumerable:!1,configurable:!0}),r.prototype.render=function(t){var e=this;this.visible&&!(this.worldAlpha<=0)&&this.children.length&&this.renderable&&(this.baseTexture||(this.baseTexture=this.children[0]._texture.baseTexture,this.baseTexture.valid||this.baseTexture.once("update",function(){return e.onChildrenChange(0)})),t.batch.setObjectRenderer(t.plugins.particle),t.plugins.particle.render(this))},r.prototype.onChildrenChange=function(t){for(var e=Math.floor(t/this._batchSize);this._bufferUpdateIDs.length<e;)this._bufferUpdateIDs.push(0);this._bufferUpdateIDs[e]=++this._updateID},r.prototype.dispose=function(){if(this._buffers){for(var t=0;t<this._buffers.length;++t)this._buffers[t].destroy();this._buffers=null}},r.prototype.destroy=function(t){e.prototype.destroy.call(this,t),this.dispose(),this._properties=null,this._buffers=null,this._bufferUpdateIDs=null},r}(Ge),uo=function(){function e(e,r,i){this.geometry=new Vr,this.indexBuffer=null,this.size=i,this.dynamicProperties=[],this.staticProperties=[];for(var n=0;n<e.length;++n){var o=e[n];o={attributeName:o.attributeName,size:o.size,uploadFunction:o.uploadFunction,type:o.type||t.TYPES.FLOAT,offset:o.offset},r[n]?this.dynamicProperties.push(o):this.staticProperties.push(o)}this.staticStride=0,this.staticBuffer=null,this.staticData=null,this.staticDataUint32=null,this.dynamicStride=0,this.dynamicBuffer=null,this.dynamicData=null,this.dynamicDataUint32=null,this._updateID=0,this.initBuffers()}return e.prototype.initBuffers=function(){var e=this.geometry,r=0;this.indexBuffer=new Xr(qt(this.size),!0,!0),e.addIndex(this.indexBuffer),this.dynamicStride=0;for(var i=0;i<this.dynamicProperties.length;++i){(a=this.dynamicProperties[i]).offset=r,r+=a.size,this.dynamicStride+=a.size}var n=new ArrayBuffer(this.size*this.dynamicStride*4*4);this.dynamicData=new Float32Array(n),this.dynamicDataUint32=new Uint32Array(n),this.dynamicBuffer=new Xr(this.dynamicData,!1,!1);var o=0;this.staticStride=0;for(i=0;i<this.staticProperties.length;++i){(a=this.staticProperties[i]).offset=o,o+=a.size,this.staticStride+=a.size}var s=new ArrayBuffer(this.size*this.staticStride*4*4);this.staticData=new Float32Array(s),this.staticDataUint32=new Uint32Array(s),this.staticBuffer=new Xr(this.staticData,!0,!1);for(i=0;i<this.dynamicProperties.length;++i){var a=this.dynamicProperties[i];e.addAttribute(a.attributeName,this.dynamicBuffer,0,a.type===t.TYPES.UNSIGNED_BYTE,a.type,4*this.dynamicStride,4*a.offset)}for(i=0;i<this.staticProperties.length;++i){a=this.staticProperties[i];e.addAttribute(a.attributeName,this.staticBuffer,0,a.type===t.TYPES.UNSIGNED_BYTE,a.type,4*this.staticStride,4*a.offset)}},e.prototype.uploadDynamic=function(e,r,i){for(var n=0;n<this.dynamicProperties.length;n++){var o=this.dynamicProperties[n];o.uploadFunction(e,r,i,o.type===t.TYPES.UNSIGNED_BYTE?this.dynamicDataUint32:this.dynamicData,this.dynamicStride,o.offset)}this.dynamicBuffer._updateID++},e.prototype.uploadStatic=function(e,r,i){for(var n=0;n<this.staticProperties.length;n++){var o=this.staticProperties[n];o.uploadFunction(e,r,i,o.type===t.TYPES.UNSIGNED_BYTE?this.staticDataUint32:this.staticData,this.staticStride,o.offset)}this.staticBuffer._updateID++},e.prototype.destroy=function(){this.indexBuffer=null,this.dynamicProperties=null,this.dynamicBuffer=null,this.dynamicData=null,this.dynamicDataUint32=null,this.staticProperties=null,this.staticBuffer=null,this.staticData=null,this.staticDataUint32=null,this.geometry.destroy()},e}(),lo="varying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler;\n\nvoid main(void){\n    vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n    gl_FragColor = color;\n}",co="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nattribute vec2 aPositionCoord;\nattribute float aRotation;\n\nuniform mat3 translationMatrix;\nuniform vec4 uColor;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nvoid main(void){\n    float x = (aVertexPosition.x) * cos(aRotation) - (aVertexPosition.y) * sin(aRotation);\n    float y = (aVertexPosition.x) * sin(aRotation) + (aVertexPosition.y) * cos(aRotation);\n\n    vec2 v = vec2(x, y);\n    v = v + aPositionCoord;\n\n    gl_Position = vec4((translationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\n\n    vTextureCoord = aTextureCoord;\n    vColor = aColor * uColor;\n}\n",po=function(e){function r(r){var i=e.call(this,r)||this;return i.shader=null,i.properties=null,i.tempMatrix=new Ie,i.properties=[{attributeName:"aVertexPosition",size:2,uploadFunction:i.uploadVertices,offset:0},{attributeName:"aPositionCoord",size:2,uploadFunction:i.uploadPosition,offset:0},{attributeName:"aRotation",size:1,uploadFunction:i.uploadRotation,offset:0},{attributeName:"aTextureCoord",size:2,uploadFunction:i.uploadUvs,offset:0},{attributeName:"aColor",size:1,type:t.TYPES.UNSIGNED_BYTE,uploadFunction:i.uploadTint,offset:0}],i.shader=Li.from(co,lo,{}),i.state=Ni.for2d(),i}return oo(r,e),r.prototype.render=function(t){var e=t.children,r=t._maxSize,i=t._batchSize,n=this.renderer,o=e.length;if(0!==o){o>r&&!t.autoResize&&(o=r);var s=t._buffers;s||(s=t._buffers=this.generateBuffers(t));var a=e[0]._texture.baseTexture;this.state.blendMode=Yt(t.blendMode,a.alphaMode),n.state.set(this.state);var h=n.gl,u=t.worldTransform.copyTo(this.tempMatrix);u.prepend(n.globalUniforms.uniforms.projectionMatrix),this.shader.uniforms.translationMatrix=u.toArray(!0),this.shader.uniforms.uColor=zt(t.tintRgb,t.worldAlpha,this.shader.uniforms.uColor,a.alphaMode),this.shader.uniforms.uSampler=a,this.renderer.shader.bind(this.shader);for(var l=!1,c=0,d=0;c<o;c+=i,d+=1){var p=o-c;p>i&&(p=i),d>=s.length&&s.push(this._generateOneMoreBuffer(t));var f=s[d];f.uploadDynamic(e,c,p);var m=t._bufferUpdateIDs[d]||0;(l=l||f._updateID<m)&&(f._updateID=t._updateID,f.uploadStatic(e,c,p)),n.geometry.bind(f.geometry),h.drawElements(h.TRIANGLES,6*p,h.UNSIGNED_SHORT,0)}}},r.prototype.generateBuffers=function(t){for(var e=[],r=t._maxSize,i=t._batchSize,n=t._properties,o=0;o<r;o+=i)e.push(new uo(this.properties,n,i));return e},r.prototype._generateOneMoreBuffer=function(t){var e=t._batchSize,r=t._properties;return new uo(this.properties,r,e)},r.prototype.uploadVertices=function(t,e,r,i,n,o){for(var s=0,a=0,h=0,u=0,l=0;l<r;++l){var c=t[e+l],d=c._texture,p=c.scale.x,f=c.scale.y,m=d.trim,v=d.orig;m?(s=(a=m.x-c.anchor.x*v.width)+m.width,h=(u=m.y-c.anchor.y*v.height)+m.height):(s=v.width*(1-c.anchor.x),a=v.width*-c.anchor.x,h=v.height*(1-c.anchor.y),u=v.height*-c.anchor.y),i[o]=a*p,i[o+1]=u*f,i[o+n]=s*p,i[o+n+1]=u*f,i[o+2*n]=s*p,i[o+2*n+1]=h*f,i[o+3*n]=a*p,i[o+3*n+1]=h*f,o+=4*n}},r.prototype.uploadPosition=function(t,e,r,i,n,o){for(var s=0;s<r;s++){var a=t[e+s].position;i[o]=a.x,i[o+1]=a.y,i[o+n]=a.x,i[o+n+1]=a.y,i[o+2*n]=a.x,i[o+2*n+1]=a.y,i[o+3*n]=a.x,i[o+3*n+1]=a.y,o+=4*n}},r.prototype.uploadRotation=function(t,e,r,i,n,o){for(var s=0;s<r;s++){var a=t[e+s].rotation;i[o]=a,i[o+n]=a,i[o+2*n]=a,i[o+3*n]=a,o+=4*n}},r.prototype.uploadUvs=function(t,e,r,i,n,o){for(var s=0;s<r;++s){var a=t[e+s]._texture._uvs;a?(i[o]=a.x0,i[o+1]=a.y0,i[o+n]=a.x1,i[o+n+1]=a.y1,i[o+2*n]=a.x2,i[o+2*n+1]=a.y2,i[o+3*n]=a.x3,i[o+3*n+1]=a.y3,o+=4*n):(i[o]=0,i[o+1]=0,i[o+n]=0,i[o+n+1]=0,i[o+2*n]=0,i[o+2*n+1]=0,i[o+3*n]=0,i[o+3*n+1]=0,o+=4*n)}},r.prototype.uploadTint=function(t,e,r,i,n,o){for(var s=0;s<r;++s){var a=t[e+s],h=a._texture.baseTexture.alphaMode>0,u=a.alpha,l=u<1&&h?Vt(a._tintRGB,u):a._tintRGB+(255*u<<24);i[o]=l,i[o+n]=l,i[o+2*n]=l,i[o+3*n]=l,o+=4*n}},r.prototype.destroy=function(){e.prototype.destroy.call(this),this.shader&&(this.shader.destroy(),this.shader=null),this.tempMatrix=null},r}($r);(so=t.LINE_JOIN||(t.LINE_JOIN={})).MITER="miter",so.BEVEL="bevel",so.ROUND="round",(ao=t.LINE_CAP||(t.LINE_CAP={})).BUTT="butt",ao.ROUND="round",ao.SQUARE="square";var fo={adaptive:!0,maxLength:10,minSegments:8,maxSegments:2048,epsilon:1e-4,_segmentsCount:function(t,e){if(void 0===e&&(e=20),!this.adaptive||!t||isNaN(t))return e;var r=Math.ceil(t/this.maxLength);return r<this.minSegments?r=this.minSegments:r>this.maxSegments&&(r=this.maxSegments),r}},mo=function(){function t(){this.color=16777215,this.alpha=1,this.texture=Lr.WHITE,this.matrix=null,this.visible=!1,this.reset()}return t.prototype.clone=function(){var e=new t;return e.color=this.color,e.alpha=this.alpha,e.texture=this.texture,e.matrix=this.matrix,e.visible=this.visible,e},t.prototype.reset=function(){this.color=16777215,this.alpha=1,this.texture=Lr.WHITE,this.matrix=null,this.visible=!1},t.prototype.destroy=function(){this.texture=null,this.matrix=null},t}(),vo=function(t,e){return(vo=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};function go(t,e){function r(){this.constructor=t}vo(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var yo={build:function(t){t.points=t.shape.points.slice()},triangulate:function(t,e){var r=t.points,i=t.holes,n=e.points,o=e.indices;if(r.length>=6){for(var s=[],a=0;a<i.length;a++){var h=i[a];s.push(r.length/2),r=r.concat(h.points)}var u=R(r,s,2);if(!u)return;var l=n.length/2;for(a=0;a<u.length;a+=3)o.push(u[a]+l),o.push(u[a+1]+l),o.push(u[a+2]+l);for(a=0;a<r.length;a++)n.push(r[a])}}},_o={build:function(e){var r,i,n=e.shape,o=e.points,s=n.x,a=n.y;if(o.length=0,e.type===t.SHAPES.CIRC)r=n.radius,i=n.radius;else{var h=e.shape;r=h.width,i=h.height}if(0!==r&&0!==i){var u=Math.floor(30*Math.sqrt(n.radius))||Math.floor(15*Math.sqrt(r+i));u/=2.3;for(var l=2*Math.PI/u,c=0;c<u-.5;c++)o.push(s+Math.sin(-l*c)*r,a+Math.cos(-l*c)*i);o.push(o[0],o[1])}},triangulate:function(t,e){var r=t.points,i=e.points,n=e.indices,o=i.length/2,s=o,a=t.shape,h=t.matrix,u=a.x,l=a.y;i.push(t.matrix?h.a*u+h.c*l+h.tx:u,t.matrix?h.b*u+h.d*l+h.ty:l);for(var c=0;c<r.length;c+=2)i.push(r[c],r[c+1]),n.push(o++,s,o)}},xo={build:function(t){var e=t.shape,r=e.x,i=e.y,n=e.width,o=e.height,s=t.points;s.length=0,s.push(r,i,r+n,i,r+n,i+o,r,i+o)},triangulate:function(t,e){var r=t.points,i=e.points,n=i.length/2;i.push(r[0],r[1],r[2],r[3],r[6],r[7],r[4],r[5]),e.indices.push(n,n+1,n+2,n+1,n+2,n+3)}};function bo(t,e,r){return t+(e-t)*r}function Eo(t,e,r,i,n,o,s){void 0===s&&(s=[]);for(var a=s,h=0,u=0,l=0,c=0,d=0,p=0,f=0,m=0;f<=20;++f)h=bo(t,r,m=f/20),u=bo(e,i,m),l=bo(r,n,m),c=bo(i,o,m),d=bo(h,l,m),p=bo(u,c,m),a.push(d,p);return a}var To={build:function(t){var e=t.shape,r=t.points,i=e.x,n=e.y,o=e.width,s=e.height,a=Math.max(0,Math.min(e.radius,Math.min(o,s)/2));r.length=0,a?(Eo(i,n+a,i,n,i+a,n,r),Eo(i+o-a,n,i+o,n,i+o,n+a,r),Eo(i+o,n+s-a,i+o,n+s,i+o-a,n+s,r),Eo(i+a,n+s,i,n+s,i,n+s-a,r)):r.push(i,n,i+o,n,i+o,n+s,i,n+s)},triangulate:function(t,e){for(var r=t.points,i=e.points,n=e.indices,o=i.length/2,s=R(r,null,2),a=0,h=s.length;a<h;a+=3)n.push(s[a]+o),n.push(s[a+1]+o),n.push(s[a+2]+o);for(a=0,h=r.length;a<h;a++)i.push(r[a],r[++a])}};function So(t,e,r,i,n,o,s,a){var h,u;s?(h=i,u=-r):(h=-i,u=r);var l=t-r*n+h,c=e-i*n+u,d=t+r*o+h,p=e+i*o+u;return a.push(l,c),a.push(d,p),2}function wo(t,e,r,i,n,o,s,a){var h=r-t,u=i-e,l=Math.atan2(h,u),c=Math.atan2(n-t,o-e);a&&l<c?l+=2*Math.PI:!a&&l>c&&(c+=2*Math.PI);var d=l,p=c-l,f=Math.abs(p),m=Math.sqrt(h*h+u*u),v=1+(15*f*Math.sqrt(m)/Math.PI>>0),g=p/v;if(d+=g,a){s.push(t,e),s.push(r,i);for(var y=1,_=d;y<v;y++,_+=g)s.push(t,e),s.push(t+Math.sin(_)*m,e+Math.cos(_)*m);s.push(t,e),s.push(n,o)}else{s.push(r,i),s.push(t,e);for(y=1,_=d;y<v;y++,_+=g)s.push(t+Math.sin(_)*m,e+Math.cos(_)*m),s.push(t,e);s.push(n,o),s.push(t,e)}return 2*v}function Po(e,r){e.lineStyle.native?function(e,r){var i=0,n=e.shape,o=e.points||n.points,s=n.type!==t.SHAPES.POLY||n.closeStroke;if(0!==o.length){var a=r.points,h=r.indices,u=o.length/2,l=a.length/2,c=l;for(a.push(o[0],o[1]),i=1;i<u;i++)a.push(o[2*i],o[2*i+1]),h.push(c,c+1),c++;s&&h.push(c,l)}}(e,r):function(e,r){var i=e.shape,n=e.points||i.points.slice(),o=r.closePointEps;if(0!==n.length){var s=e.lineStyle,a=new we(n[0],n[1]),h=new we(n[n.length-2],n[n.length-1]),u=i.type!==t.SHAPES.POLY||i.closeStroke,l=Math.abs(a.x-h.x)<o&&Math.abs(a.y-h.y)<o;if(u){n=n.slice(),l&&(n.pop(),n.pop(),h.set(n[n.length-2],n[n.length-1]));var c=.5*(a.x+h.x),d=.5*(h.y+a.y);n.unshift(c,d),n.push(c,d)}var p=r.points,f=n.length/2,m=n.length,v=p.length/2,g=s.width/2,y=g*g,_=s.miterLimit*s.miterLimit,x=n[0],b=n[1],E=n[2],T=n[3],S=0,w=0,P=-(b-T),I=x-E,A=0,O=0,M=Math.sqrt(P*P+I*I);P/=M,I/=M,P*=g,I*=g;var D=s.alignment,C=2*(1-D),R=2*D;u||(s.cap===t.LINE_CAP.ROUND?m+=wo(x-P*(C-R)*.5,b-I*(C-R)*.5,x-P*C,b-I*C,x+P*R,b+I*R,p,!0)+2:s.cap===t.LINE_CAP.SQUARE&&(m+=So(x,b,P,I,C,R,!0,p))),p.push(x-P*C,b-I*C),p.push(x+P*R,b+I*R);for(var L=1;L<f-1;++L){x=n[2*(L-1)],b=n[2*(L-1)+1],E=n[2*L],T=n[2*L+1],S=n[2*(L+1)],w=n[2*(L+1)+1],P=-(b-T),I=x-E,P/=M=Math.sqrt(P*P+I*I),I/=M,P*=g,I*=g,A=-(T-w),O=E-S,A/=M=Math.sqrt(A*A+O*O),O/=M,A*=g,O*=g;var N=E-x,F=b-T,B=E-S,U=w-T,k=F*B-U*N,X=k<0;if(Math.abs(k)<.1)p.push(E-P*C,T-I*C),p.push(E+P*R,T+I*R);else{var j=(-P+x)*(-I+T)-(-P+E)*(-I+b),H=(-A+S)*(-O+T)-(-A+E)*(-O+w),G=(N*H-B*j)/k,Y=(U*j-F*H)/k,z=(G-E)*(G-E)+(Y-T)*(Y-T),V=E+(G-E)*C,W=T+(Y-T)*C,q=E-(G-E)*R,K=T-(Y-T)*R,Z=X?C:R;z<=Math.min(N*N+F*F,B*B+U*U)+Z*Z*y?s.join===t.LINE_JOIN.BEVEL||z/y>_?(X?(p.push(V,W),p.push(E+P*R,T+I*R),p.push(V,W),p.push(E+A*R,T+O*R)):(p.push(E-P*C,T-I*C),p.push(q,K),p.push(E-A*C,T-O*C),p.push(q,K)),m+=2):s.join===t.LINE_JOIN.ROUND?X?(p.push(V,W),p.push(E+P*R,T+I*R),m+=wo(E,T,E+P*R,T+I*R,E+A*R,T+O*R,p,!0)+4,p.push(V,W),p.push(E+A*R,T+O*R)):(p.push(E-P*C,T-I*C),p.push(q,K),m+=wo(E,T,E-P*C,T-I*C,E-A*C,T-O*C,p,!1)+4,p.push(E-A*C,T-O*C),p.push(q,K)):(p.push(V,W),p.push(q,K)):(p.push(E-P*C,T-I*C),p.push(E+P*R,T+I*R),s.join===t.LINE_JOIN.BEVEL||z/y>_||(s.join===t.LINE_JOIN.ROUND?m+=X?wo(E,T,E+P*R,T+I*R,E+A*R,T+O*R,p,!0)+2:wo(E,T,E-P*C,T-I*C,E-A*C,T-O*C,p,!1)+2:(X?(p.push(q,K),p.push(q,K)):(p.push(V,W),p.push(V,W)),m+=2)),p.push(E-A*C,T-O*C),p.push(E+A*R,T+O*R),m+=2)}}x=n[2*(f-2)],b=n[2*(f-2)+1],E=n[2*(f-1)],P=-(b-(T=n[2*(f-1)+1])),I=x-E,P/=M=Math.sqrt(P*P+I*I),I/=M,P*=g,I*=g,p.push(E-P*C,T-I*C),p.push(E+P*R,T+I*R),u||(s.cap===t.LINE_CAP.ROUND?m+=wo(E-P*(C-R)*.5,T-I*(C-R)*.5,E-P*C,T-I*C,E+P*R,T+I*R,p,!1)+2:s.cap===t.LINE_CAP.SQUARE&&(m+=So(E,T,P,I,C,R,!1,p)));var J=r.indices,Q=fo.epsilon*fo.epsilon;for(L=v;L<m+v-2;++L)x=p[2*L],b=p[2*L+1],E=p[2*(L+1)],T=p[2*(L+1)+1],S=p[2*(L+2)],w=p[2*(L+2)+1],Math.abs(x*(T-w)+E*(w-b)+S*(b-T))<Q||J.push(L,L+1,L+2)}}(e,r)}var Io,Ao=function(t){function e(e,r,i,n,o,s){void 0===s&&(s=0);o=o||n/2;for(var a=-1*Math.PI/2+s,h=2*i,u=ge/h,l=[],c=0;c<h;c++){var d=c%2?o:n,p=c*u+a;l.push(e+d*Math.cos(p),r+d*Math.sin(p))}return t.call(this,l)||this}return go(e,t),e}(Te),Oo=function(){function t(){}return t.curveTo=function(t,e,r,i,n,o){var s=o[o.length-2],a=o[o.length-1]-e,h=s-t,u=i-e,l=r-t,c=Math.abs(a*l-h*u);if(c<1e-8||0===n)return o[o.length-2]===t&&o[o.length-1]===e||o.push(t,e),null;var d=a*a+h*h,p=u*u+l*l,f=a*u+h*l,m=n*Math.sqrt(d)/c,v=n*Math.sqrt(p)/c,g=m*f/d,y=v*f/p,_=m*l+v*h,x=m*u+v*a,b=h*(v+g),E=a*(v+g),T=l*(m+y),S=u*(m+y);return{cx:_+t,cy:x+e,radius:n,startAngle:Math.atan2(E-x,b-_),endAngle:Math.atan2(S-x,T-_),anticlockwise:h*u>l*a}},t.arc=function(t,e,r,i,n,o,s,a,h){for(var u=s-o,l=fo._segmentsCount(Math.abs(u)*n,40*Math.ceil(Math.abs(u)/ge)),c=u/(2*l),d=2*c,p=Math.cos(c),f=Math.sin(c),m=l-1,v=m%1/m,g=0;g<=m;++g){var y=c+o+d*(g+v*g),_=Math.cos(y),x=-Math.sin(y);h.push((p*_+f*x)*n+r,(p*-x+f*_)*n+i)}},t}(),Mo=function(){function t(){}return t.curveLength=function(t,e,r,i,n,o,s,a){for(var h=0,u=0,l=0,c=0,d=0,p=0,f=0,m=0,v=0,g=0,y=0,_=t,x=e,b=1;b<=10;++b)g=_-(m=(f=(p=(d=1-(u=b/10))*d)*d)*t+3*p*u*r+3*d*(l=u*u)*n+(c=l*u)*s),y=x-(v=f*e+3*p*u*i+3*d*l*o+c*a),_=m,x=v,h+=Math.sqrt(g*g+y*y);return h},t.curveTo=function(e,r,i,n,o,s,a){var h=a[a.length-2],u=a[a.length-1];a.length-=2;var l=fo._segmentsCount(t.curveLength(h,u,e,r,i,n,o,s)),c=0,d=0,p=0,f=0,m=0;a.push(h,u);for(var v=1,g=0;v<=l;++v)p=(d=(c=1-(g=v/l))*c)*c,m=(f=g*g)*g,a.push(p*h+3*d*g*e+3*c*f*i+m*o,p*u+3*d*g*r+3*c*f*n+m*s)},t}(),Do=function(){function t(){}return t.curveLength=function(t,e,r,i,n,o){var s=t-2*r+n,a=e-2*i+o,h=2*r-2*t,u=2*i-2*e,l=4*(s*s+a*a),c=4*(s*h+a*u),d=h*h+u*u,p=2*Math.sqrt(l+c+d),f=Math.sqrt(l),m=2*l*f,v=2*Math.sqrt(d),g=c/f;return(m*p+f*c*(p-v)+(4*d*l-c*c)*Math.log((2*f+g+p)/(g+v)))/(4*m)},t.curveTo=function(e,r,i,n,o){for(var s=o[o.length-2],a=o[o.length-1],h=fo._segmentsCount(t.curveLength(s,a,e,r,i,n)),u=0,l=0,c=1;c<=h;++c){var d=c/h;u=s+(e-s)*d,l=a+(r-a)*d,o.push(u+(e+(i-e)*d-u)*d,l+(r+(n-r)*d-l)*d)}},t}(),Co=function(){function t(){this.reset()}return t.prototype.begin=function(t,e,r){this.reset(),this.style=t,this.start=e,this.attribStart=r},t.prototype.end=function(t,e){this.attribSize=e-this.attribStart,this.size=t-this.start},t.prototype.reset=function(){this.style=null,this.size=0,this.start=0,this.attribStart=0,this.attribSize=0},t}(),Ro=((Io={})[t.SHAPES.POLY]=yo,Io[t.SHAPES.CIRC]=_o,Io[t.SHAPES.ELIP]=_o,Io[t.SHAPES.RECT]=xo,Io[t.SHAPES.RREC]=To,Io),Lo=[],No=[],Fo={buildPoly:yo,buildCircle:_o,buildRectangle:xo,buildRoundedRectangle:To,FILL_COMMANDS:Ro,BATCH_POOL:Lo,DRAW_CALL_POOL:No,buildLine:Po,Star:Ao,ArcUtils:Oo,BezierUtils:Mo,QuadraticUtils:Do,BatchPart:Co},Bo=function(){function t(t,e,r,i){void 0===e&&(e=null),void 0===r&&(r=null),void 0===i&&(i=null),this.shape=t,this.lineStyle=r,this.fillStyle=e,this.matrix=i,this.type=t.type,this.points=[],this.holes=[]}return t.prototype.clone=function(){return new t(this.shape,this.fillStyle,this.lineStyle,this.matrix)},t.prototype.destroy=function(){this.shape=null,this.holes.length=0,this.holes=null,this.points.length=0,this.points=null,this.lineStyle=null,this.fillStyle=null},t}(),Uo=new we,ko=new Be,Xo=function(e){function r(){var t=e.call(this)||this;return t.uvsFloat32=null,t.indicesUint16=null,t.points=[],t.colors=[],t.uvs=[],t.indices=[],t.textureIds=[],t.graphicsData=[],t.dirty=0,t.batchDirty=-1,t.cacheDirty=-1,t.clearDirty=0,t.drawCalls=[],t.batches=[],t.shapeIndex=0,t._bounds=new Be,t.boundsDirty=-1,t.boundsPadding=0,t.batchable=!1,t.indicesUint16=null,t.uvsFloat32=null,t.closePointEps=1e-4,t}return go(r,e),Object.defineProperty(r.prototype,"bounds",{get:function(){return this.boundsDirty!==this.dirty&&(this.boundsDirty=this.dirty,this.calculateBounds()),this._bounds},enumerable:!1,configurable:!0}),r.prototype.invalidate=function(){this.boundsDirty=-1,this.dirty++,this.batchDirty++,this.shapeIndex=0,this.points.length=0,this.colors.length=0,this.uvs.length=0,this.indices.length=0,this.textureIds.length=0;for(var t=0;t<this.drawCalls.length;t++)this.drawCalls[t].texArray.clear(),No.push(this.drawCalls[t]);this.drawCalls.length=0;for(t=0;t<this.batches.length;t++){var e=this.batches[t];e.reset(),Lo.push(e)}this.batches.length=0},r.prototype.clear=function(){return this.graphicsData.length>0&&(this.invalidate(),this.clearDirty++,this.graphicsData.length=0),this},r.prototype.drawShape=function(t,e,r,i){void 0===e&&(e=null),void 0===r&&(r=null),void 0===i&&(i=null);var n=new Bo(t,e,r,i);return this.graphicsData.push(n),this.dirty++,this},r.prototype.drawHole=function(t,e){if(void 0===e&&(e=null),!this.graphicsData.length)return null;var r=new Bo(t,null,null,e),i=this.graphicsData[this.graphicsData.length-1];return r.lineStyle=i.lineStyle,i.holes.push(r),this.dirty++,this},r.prototype.destroy=function(){e.prototype.destroy.call(this);for(var t=0;t<this.graphicsData.length;++t)this.graphicsData[t].destroy();this.points.length=0,this.points=null,this.colors.length=0,this.colors=null,this.uvs.length=0,this.uvs=null,this.indices.length=0,this.indices=null,this.indexBuffer.destroy(),this.indexBuffer=null,this.graphicsData.length=0,this.graphicsData=null,this.drawCalls.length=0,this.drawCalls=null,this.batches.length=0,this.batches=null,this._bounds=null},r.prototype.containsPoint=function(t){for(var e=this.graphicsData,r=0;r<e.length;++r){var i=e[r];if(i.fillStyle.visible&&(i.shape&&(i.matrix?i.matrix.applyInverse(t,Uo):Uo.copyFrom(t),i.shape.contains(Uo.x,Uo.y)))){var n=!1;if(i.holes)for(var o=0;o<i.holes.length;o++){if(i.holes[o].shape.contains(Uo.x,Uo.y)){n=!0;break}}if(!n)return!0}}return!1},r.prototype.updateBatches=function(e){if(this.graphicsData.length){if(this.validateBatching()){this.cacheDirty=this.dirty;var r=this.uvs,i=this.graphicsData,n=null,o=null;this.batches.length>0&&(o=(n=this.batches[this.batches.length-1]).style);for(var s=this.shapeIndex;s<i.length;s++){this.shapeIndex++;var a=i[s],h=a.fillStyle,u=a.lineStyle;Ro[a.type].build(a),a.matrix&&this.transformPoints(a.points,a.matrix);for(var l=0;l<2;l++){var c=0===l?h:u;if(c.visible){var d=c.texture.baseTexture,p=this.indices.length,f=this.points.length/2;d.wrapMode=t.WRAP_MODES.REPEAT,0===l?this.processFill(a):this.processLine(a);var m=this.points.length/2-f;0!==m&&(n&&!this._compareStyles(o,c)&&(n.end(p,f),n=null),n||((n=Lo.pop()||new Co).begin(c,p,f),this.batches.push(n),o=c),this.addUvs(this.points,r,c.texture,f,m,c.matrix))}}}var v=this.indices.length,g=this.points.length/2;if(n&&n.end(v,g),0!==this.batches.length){if(this.indicesUint16&&this.indices.length===this.indicesUint16.length)this.indicesUint16.set(this.indices);else{var y=g>65535&&e;this.indicesUint16=y?new Uint32Array(this.indices):new Uint16Array(this.indices)}this.batchable=this.isBatchable(),this.batchable?this.packBatches():this.buildDrawCalls()}else this.batchable=!0}}else this.batchable=!0},r.prototype._compareStyles=function(t,e){return!(!t||!e)&&(t.texture.baseTexture===e.texture.baseTexture&&(t.color+t.alpha===e.color+e.alpha&&!!t.native==!!e.native))},r.prototype.validateBatching=function(){if(this.dirty===this.cacheDirty||!this.graphicsData.length)return!1;for(var t=0,e=this.graphicsData.length;t<e;t++){var r=this.graphicsData[t],i=r.fillStyle,n=r.lineStyle;if(i&&!i.texture.baseTexture.valid)return!1;if(n&&!n.texture.baseTexture.valid)return!1}return!0},r.prototype.packBatches=function(){this.batchDirty++,this.uvsFloat32=new Float32Array(this.uvs);for(var t=this.batches,e=0,r=t.length;e<r;e++)for(var i=t[e],n=0;n<i.size;n++){var o=i.start+n;this.indicesUint16[o]=this.indicesUint16[o]-i.attribStart}},r.prototype.isBatchable=function(){if(this.points.length>131070)return!1;for(var t=this.batches,e=0;e<t.length;e++)if(t[e].style.native)return!1;return this.points.length<2*r.BATCHABLE_SIZE},r.prototype.buildDrawCalls=function(){for(var e=++gr._globalBatch,r=0;r<this.drawCalls.length;r++)this.drawCalls[r].texArray.clear(),No.push(this.drawCalls[r]);this.drawCalls.length=0;var i=this.colors,n=this.textureIds,o=No.pop();o||((o=new _n).texArray=new xn),o.texArray.count=0,o.start=0,o.size=0,o.type=t.DRAW_MODES.TRIANGLES;var s=0,a=null,h=0,u=!1,l=t.DRAW_MODES.TRIANGLES,c=0;this.drawCalls.push(o);for(r=0;r<this.batches.length;r++){var d=this.batches[r],p=d.style,f=p.texture.baseTexture;u!==!!p.native&&(l=(u=!!p.native)?t.DRAW_MODES.LINES:t.DRAW_MODES.TRIANGLES,a=null,s=8,e++),a!==f&&(a=f,f._batchEnabled!==e&&(8===s&&(e++,s=0,o.size>0&&((o=No.pop())||((o=new _n).texArray=new xn),this.drawCalls.push(o)),o.start=c,o.size=0,o.texArray.count=0,o.type=l),f.touched=1,f._batchEnabled=e,f._batchLocation=s,f.wrapMode=10497,o.texArray.elements[o.texArray.count++]=f,s++)),o.size+=d.size,c+=d.size,h=f._batchLocation,this.addColors(i,p.color,p.alpha,d.attribSize),this.addTextureIds(n,h,d.attribSize)}gr._globalBatch=e,this.packAttributes()},r.prototype.packAttributes=function(){for(var t=this.points,e=this.uvs,r=this.colors,i=this.textureIds,n=new ArrayBuffer(3*t.length*4),o=new Float32Array(n),s=new Uint32Array(n),a=0,h=0;h<t.length/2;h++)o[a++]=t[2*h],o[a++]=t[2*h+1],o[a++]=e[2*h],o[a++]=e[2*h+1],s[a++]=r[h],o[a++]=i[h];this._buffer.update(n),this._indexBuffer.update(this.indicesUint16)},r.prototype.processFill=function(t){t.holes.length?(this.processHoles(t.holes),yo.triangulate(t,this)):Ro[t.type].triangulate(t,this)},r.prototype.processLine=function(t){Po(t,this);for(var e=0;e<t.holes.length;e++)Po(t.holes[e],this)},r.prototype.processHoles=function(t){for(var e=0;e<t.length;e++){var r=t[e];Ro[r.type].build(r),r.matrix&&this.transformPoints(r.points,r.matrix)}},r.prototype.calculateBounds=function(){var e=this._bounds,r=ko,i=Ie.IDENTITY;this._bounds.clear(),r.clear();for(var n=0;n<this.graphicsData.length;n++){var o=this.graphicsData[n],s=o.shape,a=o.type,h=o.lineStyle,u=o.matrix||Ie.IDENTITY,l=0;if(h&&h.visible){var c=h.alignment;l=h.width,a===t.SHAPES.POLY?l*=.5+Math.abs(.5-c):l*=Math.max(0,c)}if(i!==u&&(r.isEmpty()||(e.addBoundsMatrix(r,i),r.clear()),i=u),a===t.SHAPES.RECT||a===t.SHAPES.RREC){var d=s;r.addFramePad(d.x,d.y,d.x+d.width,d.y+d.height,l,l)}else if(a===t.SHAPES.CIRC){var p=s;r.addFramePad(p.x,p.y,p.x,p.y,p.radius+l,p.radius+l)}else if(a===t.SHAPES.ELIP){var f=s;r.addFramePad(f.x,f.y,f.x,f.y,f.width+l,f.height+l)}else{var m=s;e.addVerticesMatrix(i,m.points,0,m.points.length,l,l)}}r.isEmpty()||e.addBoundsMatrix(r,i),e.pad(this.boundsPadding,this.boundsPadding)},r.prototype.transformPoints=function(t,e){for(var r=0;r<t.length/2;r++){var i=t[2*r],n=t[2*r+1];t[2*r]=e.a*i+e.c*n+e.tx,t[2*r+1]=e.b*i+e.d*n+e.ty}},r.prototype.addColors=function(t,e,r,i){for(var n=Vt((e>>16)+(65280&e)+((255&e)<<16),r);i-- >0;)t.push(n)},r.prototype.addTextureIds=function(t,e,r){for(;r-- >0;)t.push(e)},r.prototype.addUvs=function(t,e,r,i,n,o){void 0===o&&(o=null);for(var s=0,a=e.length,h=r.frame;s<n;){var u=t[2*(i+s)],l=t[2*(i+s)+1];if(o){var c=o.a*u+o.c*l+o.tx;l=o.b*u+o.d*l+o.ty,u=c}s++,e.push(u/h.width,l/h.height)}var d=r.baseTexture;(h.width<d.width||h.height<d.height)&&this.adjustUvs(e,r,a,n)},r.prototype.adjustUvs=function(t,e,r,i){for(var n=e.baseTexture,o=r+2*i,s=e.frame,a=s.width/n.width,h=s.height/n.height,u=s.x/s.width,l=s.y/s.height,c=Math.floor(t[r]+1e-6),d=Math.floor(t[r+1]+1e-6),p=r+2;p<o;p+=2)c=Math.min(c,Math.floor(t[p]+1e-6)),d=Math.min(d,Math.floor(t[p+1]+1e-6));u-=c,l-=d;for(p=r;p<o;p+=2)t[p]=(t[p]+u)*a,t[p+1]=(t[p+1]+l)*h},r.BATCHABLE_SIZE=100,r}(Sn),jo=function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.width=0,r.alignment=.5,r.native=!1,r.cap=t.LINE_CAP.BUTT,r.join=t.LINE_JOIN.MITER,r.miterLimit=10,r}return go(r,e),r.prototype.clone=function(){var t=new r;return t.color=this.color,t.alpha=this.alpha,t.texture=this.texture,t.matrix=this.matrix,t.visible=this.visible,t.width=this.width,t.alignment=this.alignment,t.native=this.native,t.cap=this.cap,t.join=this.join,t.miterLimit=this.miterLimit,t},r.prototype.reset=function(){e.prototype.reset.call(this),this.color=0,this.alignment=.5,this.width=0,this.native=!1},r}(mo),Ho=new Float32Array(3),Go={},Yo=function(e){function r(r){void 0===r&&(r=null);var i=e.call(this)||this;return i._geometry=r||new Xo,i._geometry.refCount++,i.shader=null,i.state=Ni.for2d(),i._fillStyle=new mo,i._lineStyle=new jo,i._matrix=null,i._holeMode=!1,i.currentPath=null,i.batches=[],i.batchTint=-1,i.batchDirty=-1,i.vertexData=null,i.pluginName="batch",i._transformID=-1,i.tint=16777215,i.blendMode=t.BLEND_MODES.NORMAL,i}return go(r,e),Object.defineProperty(r.prototype,"geometry",{get:function(){return this._geometry},enumerable:!1,configurable:!0}),r.prototype.clone=function(){return this.finishPoly(),new r(this._geometry)},Object.defineProperty(r.prototype,"blendMode",{get:function(){return this.state.blendMode},set:function(t){this.state.blendMode=t},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"tint",{get:function(){return this._tint},set:function(t){this._tint=t},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"fill",{get:function(){return this._fillStyle},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"line",{get:function(){return this._lineStyle},enumerable:!1,configurable:!0}),r.prototype.lineStyle=function(t){if(void 0===t&&(t=null),"number"==typeof t){var e=arguments;t={width:e[0]||0,color:e[1]||0,alpha:void 0!==e[2]?e[2]:1,alignment:void 0!==e[3]?e[3]:.5,native:!!e[4]}}return this.lineTextureStyle(t)},r.prototype.lineTextureStyle=function(e){if("number"==typeof e){oe("v5.2.0","Please use object-based options for Graphics#lineTextureStyle");var r=arguments,i=r[0],n=r[1],o=r[2],s=r[3],a=r[4],h=r[5],u=r[6];e={width:i,texture:n,color:o,alpha:s,matrix:a,alignment:h,native:u},Object.keys(e).forEach(function(t){return void 0===e[t]&&delete e[t]})}e=Object.assign({width:0,texture:Lr.WHITE,color:e&&e.texture?16777215:0,alpha:1,matrix:null,alignment:.5,native:!1,cap:t.LINE_CAP.BUTT,join:t.LINE_JOIN.MITER,miterLimit:10},e),this.currentPath&&this.startPoly();var l=e.width>0&&e.alpha>0;return l?(e.matrix&&(e.matrix=e.matrix.clone(),e.matrix.invert()),Object.assign(this._lineStyle,{visible:l},e)):this._lineStyle.reset(),this},r.prototype.startPoly=function(){if(this.currentPath){var t=this.currentPath.points,e=this.currentPath.points.length;e>2&&(this.drawShape(this.currentPath),this.currentPath=new Te,this.currentPath.closeStroke=!1,this.currentPath.points.push(t[e-2],t[e-1]))}else this.currentPath=new Te,this.currentPath.closeStroke=!1},r.prototype.finishPoly=function(){this.currentPath&&(this.currentPath.points.length>2?(this.drawShape(this.currentPath),this.currentPath=null):this.currentPath.points.length=0)},r.prototype.moveTo=function(t,e){return this.startPoly(),this.currentPath.points[0]=t,this.currentPath.points[1]=e,this},r.prototype.lineTo=function(t,e){this.currentPath||this.moveTo(0,0);var r=this.currentPath.points,i=r[r.length-2],n=r[r.length-1];return i===t&&n===e||r.push(t,e),this},r.prototype._initCurve=function(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.currentPath?0===this.currentPath.points.length&&(this.currentPath.points=[t,e]):this.moveTo(t,e)},r.prototype.quadraticCurveTo=function(t,e,r,i){this._initCurve();var n=this.currentPath.points;return 0===n.length&&this.moveTo(0,0),Do.curveTo(t,e,r,i,n),this},r.prototype.bezierCurveTo=function(t,e,r,i,n,o){return this._initCurve(),Mo.curveTo(t,e,r,i,n,o,this.currentPath.points),this},r.prototype.arcTo=function(t,e,r,i,n){this._initCurve(t,e);var o=this.currentPath.points,s=Oo.curveTo(t,e,r,i,n,o);if(s){var a=s.cx,h=s.cy,u=s.radius,l=s.startAngle,c=s.endAngle,d=s.anticlockwise;this.arc(a,h,u,l,c,d)}return this},r.prototype.arc=function(t,e,r,i,n,o){if(void 0===o&&(o=!1),i===n)return this;if(!o&&n<=i?n+=ge:o&&i<=n&&(i+=ge),0===n-i)return this;var s=t+Math.cos(i)*r,a=e+Math.sin(i)*r,h=this._geometry.closePointEps,u=this.currentPath?this.currentPath.points:null;if(u){var l=Math.abs(u[u.length-2]-s),c=Math.abs(u[u.length-1]-a);l<h&&c<h||u.push(s,a)}else this.moveTo(s,a),u=this.currentPath.points;return Oo.arc(s,a,t,e,r,i,n,o,u),this},r.prototype.beginFill=function(t,e){return void 0===t&&(t=0),void 0===e&&(e=1),this.beginTextureFill({texture:Lr.WHITE,color:t,alpha:e})},r.prototype.beginTextureFill=function(t){if(t instanceof Lr){oe("v5.2.0","Please use object-based options for Graphics#beginTextureFill");var e=arguments,r=e[0],i=e[1],n=e[2],o=e[3];t={texture:r,color:i,alpha:n,matrix:o},Object.keys(t).forEach(function(e){return void 0===t[e]&&delete t[e]})}t=Object.assign({texture:Lr.WHITE,color:16777215,alpha:1,matrix:null},t),this.currentPath&&this.startPoly();var s=t.alpha>0;return s?(t.matrix&&(t.matrix=t.matrix.clone(),t.matrix.invert()),Object.assign(this._fillStyle,{visible:s},t)):this._fillStyle.reset(),this},r.prototype.endFill=function(){return this.finishPoly(),this._fillStyle.reset(),this},r.prototype.drawRect=function(t,e,r,i){return this.drawShape(new xe(t,e,r,i))},r.prototype.drawRoundedRect=function(t,e,r,i,n){return this.drawShape(new Se(t,e,r,i,n))},r.prototype.drawCircle=function(t,e,r){return this.drawShape(new be(t,e,r))},r.prototype.drawEllipse=function(t,e,r,i){return this.drawShape(new Ee(t,e,r,i))},r.prototype.drawPolygon=function(){for(var t,e=arguments,r=[],i=0;i<arguments.length;i++)r[i]=e[i];var n=!0,o=r[0];o.points?(n=o.closeStroke,t=o.points):t=Array.isArray(r[0])?r[0]:r;var s=new Te(t);return s.closeStroke=n,this.drawShape(s),this},r.prototype.drawShape=function(t){return this._holeMode?this._geometry.drawHole(t,this._matrix):this._geometry.drawShape(t,this._fillStyle.clone(),this._lineStyle.clone(),this._matrix),this},r.prototype.drawStar=function(t,e,r,i,n,o){return void 0===o&&(o=0),this.drawPolygon(new Ao(t,e,r,i,n,o))},r.prototype.clear=function(){return this._geometry.clear(),this._lineStyle.reset(),this._fillStyle.reset(),this._boundsID++,this._matrix=null,this._holeMode=!1,this.currentPath=null,this},r.prototype.isFastRect=function(){var e=this._geometry.graphicsData;return 1===e.length&&e[0].shape.type===t.SHAPES.RECT&&!(e[0].lineStyle.visible&&e[0].lineStyle.width)},r.prototype._render=function(t){this.finishPoly();var e=this._geometry,r=t.context.supports.uint32Indices;e.updateBatches(r),e.batchable?(this.batchDirty!==e.batchDirty&&this._populateBatches(),this._renderBatched(t)):(t.batch.flush(),this._renderDirect(t))},r.prototype._populateBatches=function(){var t=this._geometry,e=this.blendMode,r=t.batches.length;this.batchTint=-1,this._transformID=-1,this.batchDirty=t.batchDirty,this.batches.length=r,this.vertexData=new Float32Array(t.points);for(var i=0;i<r;i++){var n=t.batches[i],o=n.style.color,s=new Float32Array(this.vertexData.buffer,4*n.attribStart*2,2*n.attribSize),a=new Float32Array(t.uvsFloat32.buffer,4*n.attribStart*2,2*n.attribSize),h={vertexData:s,blendMode:e,indices:new Uint16Array(t.indicesUint16.buffer,2*n.start,n.size),uvs:a,_batchRGB:kt(o),_tintRGB:o,_texture:n.style.texture,alpha:n.style.alpha,worldAlpha:1};this.batches[i]=h}},r.prototype._renderBatched=function(t){if(this.batches.length){t.batch.setObjectRenderer(t.plugins[this.pluginName]),this.calculateVertices(),this.calculateTints();for(var e=0,r=this.batches.length;e<r;e++){var i=this.batches[e];i.worldAlpha=this.worldAlpha*i.alpha,t.plugins[this.pluginName].render(i)}}},r.prototype._renderDirect=function(t){var e=this._resolveDirectShader(t),r=this._geometry,i=this.tint,n=this.worldAlpha,o=e.uniforms,s=r.drawCalls;o.translationMatrix=this.transform.worldTransform,o.tint[0]=(i>>16&255)/255*n,o.tint[1]=(i>>8&255)/255*n,o.tint[2]=(255&i)/255*n,o.tint[3]=n,t.shader.bind(e),t.geometry.bind(r,e),t.state.set(this.state);for(var a=0,h=s.length;a<h;a++)this._renderDrawCallDirect(t,r.drawCalls[a])},r.prototype._renderDrawCallDirect=function(t,e){for(var r=e.texArray,i=e.type,n=e.size,o=e.start,s=r.count,a=0;a<s;a++)t.texture.bind(r.elements[a],a);t.geometry.draw(i,n,o)},r.prototype._resolveDirectShader=function(t){var e=this.shader,r=this.pluginName;if(!e){if(!Go[r]){for(var i=t.plugins.batch.MAX_TEXTURES,n=new Int32Array(i),o=0;o<i;o++)n[o]=o;var s={tint:new Float32Array([1,1,1,1]),translationMatrix:new Ie,default:Zr.from({uSamplers:n},!0)},a=t.plugins[r]._shader.program;Go[r]=new Li(a,s)}e=Go[r]}return e},r.prototype._calculateBounds=function(){this.finishPoly();var t=this._geometry;if(t.graphicsData.length){var e=t.bounds,r=e.minX,i=e.minY,n=e.maxX,o=e.maxY;this._bounds.addFrame(this.transform,r,i,n,o)}},r.prototype.containsPoint=function(t){return this.worldTransform.applyInverse(t,r._TEMP_POINT),this._geometry.containsPoint(r._TEMP_POINT)},r.prototype.calculateTints=function(){if(this.batchTint!==this.tint){this.batchTint=this.tint;for(var t=kt(this.tint,Ho),e=0;e<this.batches.length;e++){var r=this.batches[e],i=r._batchRGB,n=(t[0]*i[0]*255<<16)+(t[1]*i[1]*255<<8)+(0|t[2]*i[2]*255);r._tintRGB=(n>>16)+(65280&n)+((255&n)<<16)}}},r.prototype.calculateVertices=function(){var t=this.transform._worldID;if(this._transformID!==t){this._transformID=t;for(var e=this.transform.worldTransform,r=e.a,i=e.b,n=e.c,o=e.d,s=e.tx,a=e.ty,h=this._geometry.points,u=this.vertexData,l=0,c=0;c<h.length;c+=2){var d=h[c],p=h[c+1];u[l++]=r*d+n*p+s,u[l++]=o*p+i*d+a}}},r.prototype.closePath=function(){var t=this.currentPath;return t&&(t.closeStroke=!0),this},r.prototype.setMatrix=function(t){return this._matrix=t,this},r.prototype.beginHole=function(){return this.finishPoly(),this._holeMode=!0,this},r.prototype.endHole=function(){return this.finishPoly(),this._holeMode=!1,this},r.prototype.destroy=function(t){this._geometry.refCount--,0===this._geometry.refCount&&this._geometry.dispose(),this._matrix=null,this.currentPath=null,this._lineStyle.destroy(),this._lineStyle=null,this._fillStyle.destroy(),this._fillStyle=null,this._geometry=null,this.shader=null,this.vertexData=null,this.batches.length=0,this.batches=null,e.prototype.destroy.call(this,t)},r._TEMP_POINT=new we,r}(Ge),zo=function(t,e){return(zo=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};var Vo,Wo=new we,qo=new Uint16Array([0,1,2,0,2,3]),Ko=function(e){function r(r){var i=e.call(this)||this;return i._anchor=new Pe(i._onAnchorUpdate,i,r?r.defaultAnchor.x:0,r?r.defaultAnchor.y:0),i._texture=null,i._width=0,i._height=0,i._tint=null,i._tintRGB=null,i.tint=16777215,i.blendMode=t.BLEND_MODES.NORMAL,i._cachedTint=16777215,i.uvs=null,i.texture=r||Lr.EMPTY,i.vertexData=new Float32Array(8),i.vertexTrimmedData=null,i._transformID=-1,i._textureID=-1,i._transformTrimmedID=-1,i._textureTrimmedID=-1,i.indices=qo,i.pluginName="batch",i.isSprite=!0,i._roundPixels=D.ROUND_PIXELS,i}return function(t,e){function r(){this.constructor=t}zo(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(r,e),r.prototype._onTextureUpdate=function(){this._textureID=-1,this._textureTrimmedID=-1,this._cachedTint=16777215,this._width&&(this.scale.x=ee(this.scale.x)*this._width/this._texture.orig.width),this._height&&(this.scale.y=ee(this.scale.y)*this._height/this._texture.orig.height)},r.prototype._onAnchorUpdate=function(){this._transformID=-1,this._transformTrimmedID=-1},r.prototype.calculateVertices=function(){var t=this._texture;if(this._transformID!==this.transform._worldID||this._textureID!==t._updateID){this._textureID!==t._updateID&&(this.uvs=this._texture._uvs.uvsFloat32),this._transformID=this.transform._worldID,this._textureID=t._updateID;var e=this.transform.worldTransform,r=e.a,i=e.b,n=e.c,o=e.d,s=e.tx,a=e.ty,h=this.vertexData,u=t.trim,l=t.orig,c=this._anchor,d=0,p=0,f=0,m=0;if(u?(d=(p=u.x-c._x*l.width)+u.width,f=(m=u.y-c._y*l.height)+u.height):(d=(p=-c._x*l.width)+l.width,f=(m=-c._y*l.height)+l.height),h[0]=r*p+n*m+s,h[1]=o*m+i*p+a,h[2]=r*d+n*m+s,h[3]=o*m+i*d+a,h[4]=r*d+n*f+s,h[5]=o*f+i*d+a,h[6]=r*p+n*f+s,h[7]=o*f+i*p+a,this._roundPixels)for(var v=D.RESOLUTION,g=0;g<h.length;++g)h[g]=Math.round((h[g]*v|0)/v)}},r.prototype.calculateTrimmedVertices=function(){if(this.vertexTrimmedData){if(this._transformTrimmedID===this.transform._worldID&&this._textureTrimmedID===this._texture._updateID)return}else this.vertexTrimmedData=new Float32Array(8);this._transformTrimmedID=this.transform._worldID,this._textureTrimmedID=this._texture._updateID;var t=this._texture,e=this.vertexTrimmedData,r=t.orig,i=this._anchor,n=this.transform.worldTransform,o=n.a,s=n.b,a=n.c,h=n.d,u=n.tx,l=n.ty,c=-i._x*r.width,d=c+r.width,p=-i._y*r.height,f=p+r.height;e[0]=o*c+a*p+u,e[1]=h*p+s*c+l,e[2]=o*d+a*p+u,e[3]=h*p+s*d+l,e[4]=o*d+a*f+u,e[5]=h*f+s*d+l,e[6]=o*c+a*f+u,e[7]=h*f+s*c+l},r.prototype._render=function(t){this.calculateVertices(),t.batch.setObjectRenderer(t.plugins[this.pluginName]),t.plugins[this.pluginName].render(this)},r.prototype._calculateBounds=function(){var t=this._texture.trim,e=this._texture.orig;!t||t.width===e.width&&t.height===e.height?(this.calculateVertices(),this._bounds.addQuad(this.vertexData)):(this.calculateTrimmedVertices(),this._bounds.addQuad(this.vertexTrimmedData))},r.prototype.getLocalBounds=function(t){return 0===this.children.length?(this._bounds.minX=this._texture.orig.width*-this._anchor._x,this._bounds.minY=this._texture.orig.height*-this._anchor._y,this._bounds.maxX=this._texture.orig.width*(1-this._anchor._x),this._bounds.maxY=this._texture.orig.height*(1-this._anchor._y),t||(this._localBoundsRect||(this._localBoundsRect=new xe),t=this._localBoundsRect),this._bounds.getRectangle(t)):e.prototype.getLocalBounds.call(this,t)},r.prototype.containsPoint=function(t){this.worldTransform.applyInverse(t,Wo);var e=this._texture.orig.width,r=this._texture.orig.height,i=-e*this.anchor.x,n=0;return Wo.x>=i&&Wo.x<i+e&&(n=-r*this.anchor.y,Wo.y>=n&&Wo.y<n+r)},r.prototype.destroy=function(t){if(e.prototype.destroy.call(this,t),this._texture.off("update",this._onTextureUpdate,this),this._anchor=null,"boolean"==typeof t?t:t&&t.texture){var r="boolean"==typeof t?t:t&&t.baseTexture;this._texture.destroy(!!r)}this._texture=null},r.from=function(t,e){return new r(t instanceof Lr?t:Lr.from(t,e))},Object.defineProperty(r.prototype,"roundPixels",{get:function(){return this._roundPixels},set:function(t){this._roundPixels!==t&&(this._transformID=-1),this._roundPixels=t},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"width",{get:function(){return Math.abs(this.scale.x)*this._texture.orig.width},set:function(t){var e=ee(this.scale.x)||1;this.scale.x=e*t/this._texture.orig.width,this._width=t},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"height",{get:function(){return Math.abs(this.scale.y)*this._texture.orig.height},set:function(t){var e=ee(this.scale.y)||1;this.scale.y=e*t/this._texture.orig.height,this._height=t},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"anchor",{get:function(){return this._anchor},set:function(t){this._anchor.copyFrom(t)},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"tint",{get:function(){return this._tint},set:function(t){this._tint=t,this._tintRGB=(t>>16)+(65280&t)+((255&t)<<16)},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"texture",{get:function(){return this._texture},set:function(t){this._texture!==t&&(this._texture&&this._texture.off("update",this._onTextureUpdate,this),this._texture=t||Lr.EMPTY,this._cachedTint=16777215,this._textureID=-1,this._textureTrimmedID=-1,t&&(t.baseTexture.valid?this._onTextureUpdate():t.once("update",this._onTextureUpdate,this)))},enumerable:!1,configurable:!0}),r}(Ge),Zo=function(t,e){return(Zo=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};(Vo=t.TEXT_GRADIENT||(t.TEXT_GRADIENT={}))[Vo.LINEAR_VERTICAL=0]="LINEAR_VERTICAL",Vo[Vo.LINEAR_HORIZONTAL=1]="LINEAR_HORIZONTAL";var Jo={align:"left",breakWords:!1,dropShadow:!1,dropShadowAlpha:1,dropShadowAngle:Math.PI/6,dropShadowBlur:0,dropShadowColor:"black",dropShadowDistance:5,fill:"black",fillGradientType:t.TEXT_GRADIENT.LINEAR_VERTICAL,fillGradientStops:[],fontFamily:"Arial",fontSize:26,fontStyle:"normal",fontVariant:"normal",fontWeight:"normal",letterSpacing:0,lineHeight:0,lineJoin:"miter",miterLimit:10,padding:0,stroke:"black",strokeThickness:0,textBaseline:"alphabetic",trim:!1,whiteSpace:"pre",wordWrap:!1,wordWrapWidth:100,leading:0},Qo=["serif","sans-serif","monospace","cursive","fantasy","system-ui"],$o=function(){function t(t){this.styleID=0,this.reset(),rs(this,t,t)}return t.prototype.clone=function(){var e={};return rs(e,this,Jo),new t(e)},t.prototype.reset=function(){rs(this,Jo,Jo)},Object.defineProperty(t.prototype,"align",{get:function(){return this._align},set:function(t){this._align!==t&&(this._align=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"breakWords",{get:function(){return this._breakWords},set:function(t){this._breakWords!==t&&(this._breakWords=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"dropShadow",{get:function(){return this._dropShadow},set:function(t){this._dropShadow!==t&&(this._dropShadow=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"dropShadowAlpha",{get:function(){return this._dropShadowAlpha},set:function(t){this._dropShadowAlpha!==t&&(this._dropShadowAlpha=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"dropShadowAngle",{get:function(){return this._dropShadowAngle},set:function(t){this._dropShadowAngle!==t&&(this._dropShadowAngle=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"dropShadowBlur",{get:function(){return this._dropShadowBlur},set:function(t){this._dropShadowBlur!==t&&(this._dropShadowBlur=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"dropShadowColor",{get:function(){return this._dropShadowColor},set:function(t){var e=es(t);this._dropShadowColor!==e&&(this._dropShadowColor=e,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"dropShadowDistance",{get:function(){return this._dropShadowDistance},set:function(t){this._dropShadowDistance!==t&&(this._dropShadowDistance=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"fill",{get:function(){return this._fill},set:function(t){var e=es(t);this._fill!==e&&(this._fill=e,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"fillGradientType",{get:function(){return this._fillGradientType},set:function(t){this._fillGradientType!==t&&(this._fillGradientType=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"fillGradientStops",{get:function(){return this._fillGradientStops},set:function(t){(function(t,e){if(!Array.isArray(t)||!Array.isArray(e))return!1;if(t.length!==e.length)return!1;for(var r=0;r<t.length;++r)if(t[r]!==e[r])return!1;return!0})(this._fillGradientStops,t)||(this._fillGradientStops=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"fontFamily",{get:function(){return this._fontFamily},set:function(t){this.fontFamily!==t&&(this._fontFamily=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"fontSize",{get:function(){return this._fontSize},set:function(t){this._fontSize!==t&&(this._fontSize=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"fontStyle",{get:function(){return this._fontStyle},set:function(t){this._fontStyle!==t&&(this._fontStyle=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"fontVariant",{get:function(){return this._fontVariant},set:function(t){this._fontVariant!==t&&(this._fontVariant=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"fontWeight",{get:function(){return this._fontWeight},set:function(t){this._fontWeight!==t&&(this._fontWeight=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"letterSpacing",{get:function(){return this._letterSpacing},set:function(t){this._letterSpacing!==t&&(this._letterSpacing=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lineHeight",{get:function(){return this._lineHeight},set:function(t){this._lineHeight!==t&&(this._lineHeight=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"leading",{get:function(){return this._leading},set:function(t){this._leading!==t&&(this._leading=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lineJoin",{get:function(){return this._lineJoin},set:function(t){this._lineJoin!==t&&(this._lineJoin=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"miterLimit",{get:function(){return this._miterLimit},set:function(t){this._miterLimit!==t&&(this._miterLimit=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"padding",{get:function(){return this._padding},set:function(t){this._padding!==t&&(this._padding=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stroke",{get:function(){return this._stroke},set:function(t){var e=es(t);this._stroke!==e&&(this._stroke=e,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"strokeThickness",{get:function(){return this._strokeThickness},set:function(t){this._strokeThickness!==t&&(this._strokeThickness=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"textBaseline",{get:function(){return this._textBaseline},set:function(t){this._textBaseline!==t&&(this._textBaseline=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"trim",{get:function(){return this._trim},set:function(t){this._trim!==t&&(this._trim=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"whiteSpace",{get:function(){return this._whiteSpace},set:function(t){this._whiteSpace!==t&&(this._whiteSpace=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"wordWrap",{get:function(){return this._wordWrap},set:function(t){this._wordWrap!==t&&(this._wordWrap=t,this.styleID++)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"wordWrapWidth",{get:function(){return this._wordWrapWidth},set:function(t){this._wordWrapWidth!==t&&(this._wordWrapWidth=t,this.styleID++)},enumerable:!1,configurable:!0}),t.prototype.toFontString=function(){var t="number"==typeof this.fontSize?this.fontSize+"px":this.fontSize,e=this.fontFamily;Array.isArray(this.fontFamily)||(e=this.fontFamily.split(","));for(var r=e.length-1;r>=0;r--){var i=e[r].trim();!/([\"\'])[^\'\"]+\1/.test(i)&&Qo.indexOf(i)<0&&(i='"'+i+'"'),e[r]=i}return this.fontStyle+" "+this.fontVariant+" "+this.fontWeight+" "+t+" "+e.join(",")},t}();function ts(t){return"number"==typeof t?Xt(t):("string"==typeof t&&0===t.indexOf("0x")&&(t=t.replace("0x","#")),t)}function es(t){if(Array.isArray(t)){for(var e=0;e<t.length;++e)t[e]=ts(t[e]);return t}return ts(t)}function rs(t,e,r){for(var i in r)Array.isArray(e[i])?t[i]=e[i].slice():t[i]=e[i]}var is=function(){function t(t,e,r,i,n,o,s,a,h){this.text=t,this.style=e,this.width=r,this.height=i,this.lines=n,this.lineWidths=o,this.lineHeight=s,this.maxLineWidth=a,this.fontProperties=h}return t.measureText=function(e,r,i,n){void 0===n&&(n=t._canvas),i=null==i?r.wordWrap:i;var o=r.toFontString(),s=t.measureFont(o);0===s.fontSize&&(s.fontSize=r.fontSize,s.ascent=r.fontSize);var a=n.getContext("2d");a.font=o;for(var h=(i?t.wordWrap(e,r,n):e).split(/(?:\r\n|\r|\n)/),u=new Array(h.length),l=0,c=0;c<h.length;c++){var d=a.measureText(h[c]).width+(h[c].length-1)*r.letterSpacing;u[c]=d,l=Math.max(l,d)}var p=l+r.strokeThickness;r.dropShadow&&(p+=r.dropShadowDistance);var f=r.lineHeight||s.fontSize+r.strokeThickness,m=Math.max(f,s.fontSize+r.strokeThickness)+(h.length-1)*(f+r.leading);return r.dropShadow&&(m+=r.dropShadowDistance),new t(e,r,p,m,h,u,f+r.leading,l,s)},t.wordWrap=function(e,r,i){void 0===i&&(i=t._canvas);for(var n=i.getContext("2d"),o=0,s="",a="",h=Object.create(null),u=r.letterSpacing,l=r.whiteSpace,c=t.collapseSpaces(l),d=t.collapseNewlines(l),p=!c,f=r.wordWrapWidth+u,m=t.tokenize(e),v=0;v<m.length;v++){var g=m[v];if(t.isNewline(g)){if(!d){a+=t.addLine(s),p=!c,s="",o=0;continue}g=" "}if(c){var y=t.isBreakingSpace(g),_=t.isBreakingSpace(s[s.length-1]);if(y&&_)continue}var x=t.getFromCache(g,u,h,n);if(x>f)if(""!==s&&(a+=t.addLine(s),s="",o=0),t.canBreakWords(g,r.breakWords))for(var b=t.wordWrapSplit(g),E=0;E<b.length;E++){for(var T=b[E],S=1;b[E+S];){var w=b[E+S],P=T[T.length-1];if(t.canBreakChars(P,w,g,E,r.breakWords))break;T+=w,S++}E+=T.length-1;var I=t.getFromCache(T,u,h,n);I+o>f&&(a+=t.addLine(s),p=!1,s="",o=0),s+=T,o+=I}else{s.length>0&&(a+=t.addLine(s),s="",o=0);var A=v===m.length-1;a+=t.addLine(g,!A),p=!1,s="",o=0}else x+o>f&&(p=!1,a+=t.addLine(s),s="",o=0),(s.length>0||!t.isBreakingSpace(g)||p)&&(s+=g,o+=x)}return a+=t.addLine(s,!1)},t.addLine=function(e,r){return void 0===r&&(r=!0),e=t.trimRight(e),e=r?e+"\n":e},t.getFromCache=function(t,e,r,i){var n=r[t];if("number"!=typeof n){var o=t.length*e;n=i.measureText(t).width+o,r[t]=n}return n},t.collapseSpaces=function(t){return"normal"===t||"pre-line"===t},t.collapseNewlines=function(t){return"normal"===t},t.trimRight=function(e){if("string"!=typeof e)return"";for(var r=e.length-1;r>=0;r--){var i=e[r];if(!t.isBreakingSpace(i))break;e=e.slice(0,-1)}return e},t.isNewline=function(e){return"string"==typeof e&&t._newlines.indexOf(e.charCodeAt(0))>=0},t.isBreakingSpace=function(e){return"string"==typeof e&&t._breakingSpaces.indexOf(e.charCodeAt(0))>=0},t.tokenize=function(e){var r=[],i="";if("string"!=typeof e)return r;for(var n=0;n<e.length;n++){var o=e[n];t.isBreakingSpace(o)||t.isNewline(o)?(""!==i&&(r.push(i),i=""),r.push(o)):i+=o}return""!==i&&r.push(i),r},t.canBreakWords=function(t,e){return e},t.canBreakChars=function(t,e,r,i,n){return!0},t.wordWrapSplit=function(t){return t.split("")},t.measureFont=function(e){if(t._fonts[e])return t._fonts[e];var r={ascent:0,descent:0,fontSize:0},i=t._canvas,n=t._context;n.font=e;var o=t.METRICS_STRING+t.BASELINE_SYMBOL,s=Math.ceil(n.measureText(o).width),a=Math.ceil(n.measureText(t.BASELINE_SYMBOL).width),h=2*a;a=a*t.BASELINE_MULTIPLIER|0,i.width=s,i.height=h,n.fillStyle="#f00",n.fillRect(0,0,s,h),n.font=e,n.textBaseline="alphabetic",n.fillStyle="#000",n.fillText(o,0,a);var u=n.getImageData(0,0,s,h).data,l=u.length,c=4*s,d=0,p=0,f=!1;for(d=0;d<a;++d){for(var m=0;m<c;m+=4)if(255!==u[p+m]){f=!0;break}if(f)break;p+=c}for(r.ascent=a-d,p=l-c,f=!1,d=h;d>a;--d){for(m=0;m<c;m+=4)if(255!==u[p+m]){f=!0;break}if(f)break;p-=c}return r.descent=d-a,r.fontSize=r.ascent+r.descent,t._fonts[e]=r,r},t.clearMetrics=function(e){void 0===e&&(e=""),e?delete t._fonts[e]:t._fonts={}},t}(),ns=function(){try{var t=new OffscreenCanvas(0,0),e=t.getContext("2d");return e&&e.measureText?t:document.createElement("canvas")}catch(t){return document.createElement("canvas")}}();ns.width=ns.height=10,is._canvas=ns,is._context=ns.getContext("2d"),is._fonts={},is.METRICS_STRING="|ÉqÅ",is.BASELINE_SYMBOL="M",is.BASELINE_MULTIPLIER=1.4,is._newlines=[10,13],is._breakingSpaces=[9,32,8192,8193,8194,8195,8196,8197,8198,8200,8201,8202,8287,12288];var os={texture:!0,children:!1,baseTexture:!0},ss=function(e){function r(t,r,i){var n=this,o=!1;i||(i=document.createElement("canvas"),o=!0),i.width=3,i.height=3;var s=Lr.from(i);return s.orig=new xe,s.trim=new xe,(n=e.call(this,s)||this)._ownCanvas=o,n.canvas=i,n.context=n.canvas.getContext("2d"),n._resolution=D.RESOLUTION,n._autoResolution=!0,n._text=null,n._style=null,n._styleListener=null,n._font="",n.text=t,n.style=r,n.localStyleID=-1,n}return function(t,e){function r(){this.constructor=t}Zo(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(r,e),r.prototype.updateText=function(t){var e=this._style;if(this.localStyleID!==e.styleID&&(this.dirty=!0,this.localStyleID=e.styleID),this.dirty||!t){this._font=this._style.toFontString();var r,i,n=this.context,o=is.measureText(this._text||" ",this._style,this._style.wordWrap,this.canvas),s=o.width,a=o.height,h=o.lines,u=o.lineHeight,l=o.lineWidths,c=o.maxLineWidth,d=o.fontProperties;this.canvas.width=Math.ceil((Math.max(1,s)+2*e.padding)*this._resolution),this.canvas.height=Math.ceil((Math.max(1,a)+2*e.padding)*this._resolution),n.scale(this._resolution,this._resolution),n.clearRect(0,0,this.canvas.width,this.canvas.height),n.font=this._font,n.lineWidth=e.strokeThickness,n.textBaseline=e.textBaseline,n.lineJoin=e.lineJoin,n.miterLimit=e.miterLimit;for(var p=e.dropShadow?2:1,f=0;f<p;++f){var m=e.dropShadow&&0===f,v=m?Math.ceil(Math.max(1,a)+2*e.padding):0,g=v*this._resolution;if(m){n.fillStyle="black",n.strokeStyle="black";var y=e.dropShadowColor,_=kt("number"==typeof y?y:jt(y));n.shadowColor="rgba("+255*_[0]+","+255*_[1]+","+255*_[2]+","+e.dropShadowAlpha+")",n.shadowBlur=e.dropShadowBlur,n.shadowOffsetX=Math.cos(e.dropShadowAngle)*e.dropShadowDistance,n.shadowOffsetY=Math.sin(e.dropShadowAngle)*e.dropShadowDistance+g}else n.fillStyle=this._generateFillStyle(e,h,o),n.strokeStyle=e.stroke,n.shadowColor="black",n.shadowBlur=0,n.shadowOffsetX=0,n.shadowOffsetY=0;for(var x=0;x<h.length;x++)r=e.strokeThickness/2,i=e.strokeThickness/2+x*u+d.ascent,"right"===e.align?r+=c-l[x]:"center"===e.align&&(r+=(c-l[x])/2),e.stroke&&e.strokeThickness&&this.drawLetterSpacing(h[x],r+e.padding,i+e.padding-v,!0),e.fill&&this.drawLetterSpacing(h[x],r+e.padding,i+e.padding-v)}this.updateTexture()}},r.prototype.drawLetterSpacing=function(t,e,r,i){void 0===i&&(i=!1);var n=this._style.letterSpacing;if(0!==n)for(var o=e,s=Array.from?Array.from(t):t.split(""),a=this.context.measureText(t).width,h=0,u=0;u<s.length;++u){var l=s[u];i?this.context.strokeText(l,o,r):this.context.fillText(l,o,r),o+=a-(h=this.context.measureText(t.substring(u+1)).width)+n,a=h}else i?this.context.strokeText(t,e,r):this.context.fillText(t,e,r)},r.prototype.updateTexture=function(){var t=this.canvas;if(this._style.trim){var e=le(t);e.data&&(t.width=e.width,t.height=e.height,this.context.putImageData(e.data,0,0))}var r=this._texture,i=this._style,n=i.trim?0:i.padding,o=r.baseTexture;r.trim.width=r._frame.width=Math.ceil(t.width/this._resolution),r.trim.height=r._frame.height=Math.ceil(t.height/this._resolution),r.trim.x=-n,r.trim.y=-n,r.orig.width=r._frame.width-2*n,r.orig.height=r._frame.height-2*n,this._onTextureUpdate(),o.setRealSize(t.width,t.height,this._resolution),this._recursivePostUpdateTransform(),this.dirty=!1},r.prototype._render=function(t){this._autoResolution&&this._resolution!==t.resolution&&(this._resolution=t.resolution,this.dirty=!0),this.updateText(!0),e.prototype._render.call(this,t)},r.prototype.getLocalBounds=function(t){return this.updateText(!0),e.prototype.getLocalBounds.call(this,t)},r.prototype._calculateBounds=function(){this.updateText(!0),this.calculateVertices(),this._bounds.addQuad(this.vertexData)},r.prototype._generateFillStyle=function(e,r,i){var n,o=e.fill;if(!Array.isArray(o))return o;if(1===o.length)return o[0];var s=e.dropShadow?e.dropShadowDistance:0,a=e.padding||0,h=Math.ceil(this.canvas.width/this._resolution)-s-2*a,u=Math.ceil(this.canvas.height/this._resolution)-s-2*a,l=o.slice(),c=e.fillGradientStops.slice();if(!c.length)for(var d=l.length+1,p=1;p<d;++p)c.push(p/d);if(l.unshift(o[0]),c.unshift(0),l.push(o[o.length-1]),c.push(1),e.fillGradientType===t.TEXT_GRADIENT.LINEAR_VERTICAL){n=this.context.createLinearGradient(h/2,a,h/2,u+a);var f=0,m=(i.fontProperties.fontSize+e.strokeThickness)/u;for(p=0;p<r.length;p++)for(var v=i.lineHeight*p,g=0;g<l.length;g++){var y=v/u+("number"==typeof c[g]?c[g]:g/l.length)*m,_=Math.max(f,y);_=Math.min(_,1),n.addColorStop(_,l[g]),f=_}}else{n=this.context.createLinearGradient(a,u/2,h+a,u/2);var x=l.length+1,b=1;for(p=0;p<l.length;p++){var E=void 0;E="number"==typeof c[p]?c[p]:b/x,n.addColorStop(E,l[p]),b++}}return n},r.prototype.destroy=function(t){"boolean"==typeof t&&(t={children:t}),t=Object.assign({},os,t),e.prototype.destroy.call(this,t),this._ownCanvas&&(this.canvas.height=this.canvas.width=0),this.context=null,this.canvas=null,this._style=null},Object.defineProperty(r.prototype,"width",{get:function(){return this.updateText(!0),Math.abs(this.scale.x)*this._texture.orig.width},set:function(t){this.updateText(!0);var e=ee(this.scale.x)||1;this.scale.x=e*t/this._texture.orig.width,this._width=t},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"height",{get:function(){return this.updateText(!0),Math.abs(this.scale.y)*this._texture.orig.height},set:function(t){this.updateText(!0);var e=ee(this.scale.y)||1;this.scale.y=e*t/this._texture.orig.height,this._height=t},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"style",{get:function(){return this._style},set:function(t){t=t||{},this._style=t instanceof $o?t:new $o(t),this.localStyleID=-1,this.dirty=!0},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"text",{get:function(){return this._text},set:function(t){t=String(null==t?"":t),this._text!==t&&(this._text=t,this.dirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"resolution",{get:function(){return this._resolution},set:function(t){this._autoResolution=!1,this._resolution!==t&&(this._resolution=t,this.dirty=!0)},enumerable:!1,configurable:!0}),r}(Ko);D.UPLOADS_PER_FRAME=4;var as=function(t,e){return(as=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};var hs=function(){function t(t){this.maxItemsPerFrame=t,this.itemsLeft=0}return t.prototype.beginFrame=function(){this.itemsLeft=this.maxItemsPerFrame},t.prototype.allowedToUpload=function(){return this.itemsLeft-- >0},t}();function us(t,e){var r=!1;if(t&&t._textures&&t._textures.length)for(var i=0;i<t._textures.length;i++)if(t._textures[i]instanceof Lr){var n=t._textures[i].baseTexture;-1===e.indexOf(n)&&(e.push(n),r=!0)}return r}function ls(t,e){if(t.baseTexture instanceof gr){var r=t.baseTexture;return-1===e.indexOf(r)&&e.push(r),!0}return!1}function cs(t,e){if(t._texture&&t._texture instanceof Lr){var r=t._texture.baseTexture;return-1===e.indexOf(r)&&e.push(r),!0}return!1}function ds(t,e){return e instanceof ss&&(e.updateText(!0),!0)}function ps(t,e){if(e instanceof $o){var r=e.toFontString();return is.measureFont(r),!0}return!1}function fs(t,e){if(t instanceof ss){-1===e.indexOf(t.style)&&e.push(t.style),-1===e.indexOf(t)&&e.push(t);var r=t._texture.baseTexture;return-1===e.indexOf(r)&&e.push(r),!0}return!1}function ms(t,e){return t instanceof $o&&(-1===e.indexOf(t)&&e.push(t),!0)}var vs=function(){function e(t){var e=this;this.limiter=new hs(D.UPLOADS_PER_FRAME),this.renderer=t,this.uploadHookHelper=null,this.queue=[],this.addHooks=[],this.uploadHooks=[],this.completes=[],this.ticking=!1,this.delayedTick=function(){e.queue&&e.prepareItems()},this.registerFindHook(fs),this.registerFindHook(ms),this.registerFindHook(us),this.registerFindHook(ls),this.registerFindHook(cs),this.registerUploadHook(ds),this.registerUploadHook(ps)}return e.prototype.upload=function(e,r){"function"==typeof e&&(r=e,e=null),e&&this.add(e),this.queue.length?(r&&this.completes.push(r),this.ticking||(this.ticking=!0,Qe.system.addOnce(this.tick,this,t.UPDATE_PRIORITY.UTILITY))):r&&r()},e.prototype.tick=function(){setTimeout(this.delayedTick,0)},e.prototype.prepareItems=function(){for(this.limiter.beginFrame();this.queue.length&&this.limiter.allowedToUpload();){var e=this.queue[0],r=!1;if(e&&!e._destroyed)for(var i=0,n=this.uploadHooks.length;i<n;i++)if(this.uploadHooks[i](this.uploadHookHelper,e)){this.queue.shift(),r=!0;break}r||this.queue.shift()}if(this.queue.length)Qe.system.addOnce(this.tick,this,t.UPDATE_PRIORITY.UTILITY);else{this.ticking=!1;var o=this.completes.slice(0);this.completes.length=0;for(i=0,n=o.length;i<n;i++)o[i]()}},e.prototype.registerFindHook=function(t){return t&&this.addHooks.push(t),this},e.prototype.registerUploadHook=function(t){return t&&this.uploadHooks.push(t),this},e.prototype.add=function(t){for(var e=0,r=this.addHooks.length;e<r&&!this.addHooks[e](t,this.queue);e++);if(t instanceof Ge)for(e=t.children.length-1;e>=0;e--)this.add(t.children[e]);return this},e.prototype.destroy=function(){this.ticking&&Qe.system.remove(this.tick,this),this.ticking=!1,this.addHooks=null,this.uploadHooks=null,this.renderer=null,this.completes=null,this.queue=null,this.limiter=null,this.uploadHookHelper=null},e}();function gs(t,e){return e instanceof gr&&(e._glTextures[t.CONTEXT_UID]||t.texture.bind(e),!0)}function ys(t,e){if(!(e instanceof Yo))return!1;var r=e.geometry;e.finishPoly(),r.updateBatches();for(var i=r.batches,n=0;n<i.length;n++){var o=i[n].style.texture;o&&gs(t,o.baseTexture)}return r.batchable||t.geometry.bind(r,e._resolveDirectShader(t)),!0}function _s(t,e){return t instanceof Yo&&(e.push(t),!0)}var xs=function(t){function e(e){var r=t.call(this,e)||this;return r.uploadHookHelper=r.renderer,r.registerFindHook(_s),r.registerUploadHook(gs),r.registerUploadHook(ys),r}return function(t,e){function r(){this.constructor=t}as(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(e,t),e}(vs),bs=function(){function t(t){this.maxMilliseconds=t,this.frameStart=0}return t.prototype.beginFrame=function(){this.frameStart=Date.now()},t.prototype.allowedToUpload=function(){return Date.now()-this.frameStart<this.maxMilliseconds},t}(),Es=function(){function t(t,e,r){void 0===r&&(r=null),this._texture=t instanceof Lr?t:null,this.baseTexture=t instanceof gr?t:this._texture.baseTexture,this.textures={},this.animations={},this.data=e;var i=this.baseTexture.resource;this.resolution=this._updateResolution(r||(i?i.url:null)),this._frames=this.data.frames,this._frameKeys=Object.keys(this._frames),this._batchIndex=0,this._callback=null}return t.prototype._updateResolution=function(t){void 0===t&&(t=null);var e=this.data.meta.scale,r=fe(t,null);return null===r&&(r=void 0!==e?parseFloat(e):1),1!==r&&this.baseTexture.setResolution(r),r},t.prototype.parse=function(e){this._batchIndex=0,this._callback=e,this._frameKeys.length<=t.BATCH_SIZE?(this._processFrames(0),this._processAnimations(),this._parseComplete()):this._nextBatch()},t.prototype._processFrames=function(e){for(var r=e,i=t.BATCH_SIZE;r-e<i&&r<this._frameKeys.length;){var n=this._frameKeys[r],o=this._frames[n],s=o.frame;if(s){var a=null,h=null,u=!1!==o.trimmed&&o.sourceSize?o.sourceSize:o.frame,l=new xe(0,0,Math.floor(u.w)/this.resolution,Math.floor(u.h)/this.resolution);a=o.rotated?new xe(Math.floor(s.x)/this.resolution,Math.floor(s.y)/this.resolution,Math.floor(s.h)/this.resolution,Math.floor(s.w)/this.resolution):new xe(Math.floor(s.x)/this.resolution,Math.floor(s.y)/this.resolution,Math.floor(s.w)/this.resolution,Math.floor(s.h)/this.resolution),!1!==o.trimmed&&o.spriteSourceSize&&(h=new xe(Math.floor(o.spriteSourceSize.x)/this.resolution,Math.floor(o.spriteSourceSize.y)/this.resolution,Math.floor(s.w)/this.resolution,Math.floor(s.h)/this.resolution)),this.textures[n]=new Lr(this.baseTexture,a,l,h,o.rotated?2:0,o.anchor),Lr.addToCache(this.textures[n],n)}r++}},t.prototype._processAnimations=function(){var t=this.data.animations||{};for(var e in t){this.animations[e]=[];for(var r=0;r<t[e].length;r++){var i=t[e][r];this.animations[e].push(this.textures[i])}}},t.prototype._parseComplete=function(){var t=this._callback;this._callback=null,this._batchIndex=0,t.call(this,this.textures)},t.prototype._nextBatch=function(){var e=this;this._processFrames(this._batchIndex*t.BATCH_SIZE),this._batchIndex++,setTimeout(function(){e._batchIndex*t.BATCH_SIZE<e._frameKeys.length?e._nextBatch():(e._processAnimations(),e._parseComplete())},0)},t.prototype.destroy=function(t){var e;for(var r in void 0===t&&(t=!1),this.textures)this.textures[r].destroy();this._frames=null,this._frameKeys=null,this.data=null,this.textures=null,t&&(null===(e=this._texture)||void 0===e||e.destroy(),this.baseTexture.destroy()),this._texture=null,this.baseTexture=null},t.BATCH_SIZE=1e3,t}(),Ts=function(){function t(){}return t.use=function(e,r){var i=e.name+"_image";if(e.data&&e.type===$n.TYPE.JSON&&e.data.frames&&!this.resources[i]){var n={crossOrigin:e.crossOrigin,metadata:e.metadata.imageMetadata,parentResource:e},o=t.getResourcePath(e,this.baseUrl);this.add(i,o,n,function(t){if(t.error)r(t.error);else{var i=new Es(t.texture,e.data,e.url);i.parse(function(){e.spritesheet=i,e.textures=i.textures,r()})}})}else r()},t.getResourcePath=function(t,e){return t.isDataUrl?t.data.meta.image:Rt.resolve(t.url.replace(e,""),t.data.meta.image)},t}(),Ss=function(t,e){return(Ss=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};function ws(t,e){function r(){this.constructor=t}Ss(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var Ps=new we,Is=function(t){function e(e,r,i){void 0===r&&(r=100),void 0===i&&(i=100);var n=t.call(this,e)||this;return n.tileTransform=new Fe,n._width=r,n._height=i,n.uvMatrix=n.texture.uvMatrix||new Xi(e),n.pluginName="tilingSprite",n.uvRespectAnchor=!1,n}return ws(e,t),Object.defineProperty(e.prototype,"clampMargin",{get:function(){return this.uvMatrix.clampMargin},set:function(t){this.uvMatrix.clampMargin=t,this.uvMatrix.update(!0)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"tileScale",{get:function(){return this.tileTransform.scale},set:function(t){this.tileTransform.scale.copyFrom(t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"tilePosition",{get:function(){return this.tileTransform.position},set:function(t){this.tileTransform.position.copyFrom(t)},enumerable:!1,configurable:!0}),e.prototype._onTextureUpdate=function(){this.uvMatrix&&(this.uvMatrix.texture=this._texture),this._cachedTint=16777215},e.prototype._render=function(t){var e=this._texture;e&&e.valid&&(this.tileTransform.updateLocalTransform(),this.uvMatrix.update(),t.batch.setObjectRenderer(t.plugins[this.pluginName]),t.plugins[this.pluginName].render(this))},e.prototype._calculateBounds=function(){var t=this._width*-this._anchor._x,e=this._height*-this._anchor._y,r=this._width*(1-this._anchor._x),i=this._height*(1-this._anchor._y);this._bounds.addFrame(this.transform,t,e,r,i)},e.prototype.getLocalBounds=function(e){return 0===this.children.length?(this._bounds.minX=this._width*-this._anchor._x,this._bounds.minY=this._height*-this._anchor._y,this._bounds.maxX=this._width*(1-this._anchor._x),this._bounds.maxY=this._height*(1-this._anchor._y),e||(this._localBoundsRect||(this._localBoundsRect=new xe),e=this._localBoundsRect),this._bounds.getRectangle(e)):t.prototype.getLocalBounds.call(this,e)},e.prototype.containsPoint=function(t){this.worldTransform.applyInverse(t,Ps);var e=this._width,r=this._height,i=-e*this.anchor._x;if(Ps.x>=i&&Ps.x<i+e){var n=-r*this.anchor._y;if(Ps.y>=n&&Ps.y<n+r)return!0}return!1},e.prototype.destroy=function(e){t.prototype.destroy.call(this,e),this.tileTransform=null,this.uvMatrix=null},e.from=function(t,r){return"number"==typeof r&&(oe("5.3.0","TilingSprite.from use options instead of width and height args"),r={width:r,height:arguments[2]}),new e(Lr.from(t,r),r.width,r.height)},Object.defineProperty(e.prototype,"width",{get:function(){return this._width},set:function(t){this._width=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return this._height},set:function(t){this._height=t},enumerable:!1,configurable:!0}),e}(Ko),As="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform mat3 uTransform;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n\n    vTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;\n}\n",Os="varying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform vec4 uColor;\nuniform mat3 uMapCoord;\nuniform vec4 uClampFrame;\nuniform vec2 uClampOffset;\n\nvoid main(void)\n{\n    vec2 coord = vTextureCoord + ceil(uClampOffset - vTextureCoord);\n    coord = (uMapCoord * vec3(coord, 1.0)).xy;\n    coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);\n\n    vec4 texSample = texture2D(uSampler, coord);\n    gl_FragColor = texSample * uColor;\n}\n",Ms="varying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform vec4 uColor;\n\nvoid main(void)\n{\n    vec4 sample = texture2D(uSampler, vTextureCoord);\n    gl_FragColor = sample * uColor;\n}\n",Ds=new Ie,Cs=function(e){function r(t){var r=e.call(this,t)||this,i={globals:r.renderer.globalUniforms};return r.shader=Li.from(As,Os,i),r.simpleShader=Li.from(As,Ms,i),r.quad=new qr,r.state=Ni.for2d(),r}return ws(r,e),r.prototype.render=function(e){var r=this.renderer,i=this.quad,n=i.vertices;n[0]=n[6]=e._width*-e.anchor.x,n[1]=n[3]=e._height*-e.anchor.y,n[2]=n[4]=e._width*(1-e.anchor.x),n[5]=n[7]=e._height*(1-e.anchor.y),e.uvRespectAnchor&&((n=i.uvs)[0]=n[6]=-e.anchor.x,n[1]=n[3]=-e.anchor.y,n[2]=n[4]=1-e.anchor.x,n[5]=n[7]=1-e.anchor.y),i.invalidate();var o=e._texture,s=o.baseTexture,a=e.tileTransform.localTransform,h=e.uvMatrix,u=s.isPowerOfTwo&&o.frame.width===s.width&&o.frame.height===s.height;u&&(s._glTextures[r.CONTEXT_UID]?u=s.wrapMode!==t.WRAP_MODES.CLAMP:s.wrapMode===t.WRAP_MODES.CLAMP&&(s.wrapMode=t.WRAP_MODES.REPEAT));var l=u?this.simpleShader:this.shader,c=o.width,d=o.height,p=e._width,f=e._height;Ds.set(a.a*c/p,a.b*c/f,a.c*d/p,a.d*d/f,a.tx/p,a.ty/f),Ds.invert(),u?Ds.prepend(h.mapCoord):(l.uniforms.uMapCoord=h.mapCoord.toArray(!0),l.uniforms.uClampFrame=h.uClampFrame,l.uniforms.uClampOffset=h.uClampOffset),l.uniforms.uTransform=Ds.toArray(!0),l.uniforms.uColor=Wt(e.tint,e.worldAlpha,l.uniforms.uColor,s.alphaMode),l.uniforms.translationMatrix=e.transform.worldTransform.toArray(!0),l.uniforms.uSampler=o,r.shader.bind(l),r.geometry.bind(i),this.state.blendMode=Yt(e.blendMode,s.alphaMode),r.state.set(this.state),r.geometry.draw(this.renderer.gl.TRIANGLES,6,0)},r}($r),Rs=function(t,e){return(Rs=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};function Ls(t,e){function r(){this.constructor=t}Rs(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var Ns=function(){function t(t,e){this.uvBuffer=t,this.uvMatrix=e,this.data=null,this._bufferUpdateId=-1,this._textureUpdateId=-1,this._updateID=0}return t.prototype.update=function(t){if(t||this._bufferUpdateId!==this.uvBuffer._updateID||this._textureUpdateId!==this.uvMatrix._updateID){this._bufferUpdateId=this.uvBuffer._updateID,this._textureUpdateId=this.uvMatrix._updateID;var e=this.uvBuffer.data;this.data&&this.data.length===e.length||(this.data=new Float32Array(e.length)),this.uvMatrix.multiplyUvs(e,this.data),this._updateID++}},t}(),Fs=new we,Bs=new Te,Us=function(e){function r(r,i,n,o){void 0===o&&(o=t.DRAW_MODES.TRIANGLES);var s=e.call(this)||this;return s.geometry=r,r.refCount++,s.shader=i,s.state=n||Ni.for2d(),s.drawMode=o,s.start=0,s.size=0,s.uvs=null,s.indices=null,s.vertexData=new Float32Array(1),s.vertexDirty=0,s._transformID=-1,s._roundPixels=D.ROUND_PIXELS,s.batchUvs=null,s}return Ls(r,e),Object.defineProperty(r.prototype,"uvBuffer",{get:function(){return this.geometry.buffers[1]},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"verticesBuffer",{get:function(){return this.geometry.buffers[0]},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"material",{get:function(){return this.shader},set:function(t){this.shader=t},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"blendMode",{get:function(){return this.state.blendMode},set:function(t){this.state.blendMode=t},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"roundPixels",{get:function(){return this._roundPixels},set:function(t){this._roundPixels!==t&&(this._transformID=-1),this._roundPixels=t},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"tint",{get:function(){return this.shader.tint},set:function(t){this.shader.tint=t},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"texture",{get:function(){return this.shader.texture},set:function(t){this.shader.texture=t},enumerable:!1,configurable:!0}),r.prototype._render=function(e){var i=this.geometry.buffers[0].data;this.shader.batchable&&this.drawMode===t.DRAW_MODES.TRIANGLES&&i.length<2*r.BATCHABLE_SIZE?this._renderToBatch(e):this._renderDefault(e)},r.prototype._renderDefault=function(t){var e=this.shader;e.alpha=this.worldAlpha,e.update&&e.update(),t.batch.flush(),e.program.uniformData.translationMatrix&&(e.uniforms.translationMatrix=this.transform.worldTransform.toArray(!0)),t.shader.bind(e),t.state.set(this.state),t.geometry.bind(this.geometry,e),t.geometry.draw(this.drawMode,this.size,this.start,this.geometry.instanceCount)},r.prototype._renderToBatch=function(t){var e=this.geometry;this.shader.uvMatrix&&(this.shader.uvMatrix.update(),this.calculateUvs()),this.calculateVertices(),this.indices=e.indexBuffer.data,this._tintRGB=this.shader._tintRGB,this._texture=this.shader.texture;var r=this.material.pluginName;t.batch.setObjectRenderer(t.plugins[r]),t.plugins[r].render(this)},r.prototype.calculateVertices=function(){var t=this.geometry,e=t.buffers[0].data;if(t.vertexDirtyId!==this.vertexDirty||this._transformID!==this.transform._worldID){this._transformID=this.transform._worldID,this.vertexData.length!==e.length&&(this.vertexData=new Float32Array(e.length));for(var r=this.transform.worldTransform,i=r.a,n=r.b,o=r.c,s=r.d,a=r.tx,h=r.ty,u=this.vertexData,l=0;l<u.length/2;l++){var c=e[2*l],d=e[2*l+1];u[2*l]=i*c+o*d+a,u[2*l+1]=n*c+s*d+h}if(this._roundPixels){var p=D.RESOLUTION;for(l=0;l<u.length;++l)u[l]=Math.round((u[l]*p|0)/p)}this.vertexDirty=t.vertexDirtyId}},r.prototype.calculateUvs=function(){var t=this.geometry.buffers[1];this.shader.uvMatrix.isSimple?this.uvs=t.data:(this.batchUvs||(this.batchUvs=new Ns(t,this.shader.uvMatrix)),this.batchUvs.update(),this.uvs=this.batchUvs.data)},r.prototype._calculateBounds=function(){this.calculateVertices(),this._bounds.addVertexData(this.vertexData,0,this.vertexData.length)},r.prototype.containsPoint=function(t){if(!this.getBounds().contains(t.x,t.y))return!1;this.worldTransform.applyInverse(t,Fs);for(var e=this.geometry.getBuffer("aVertexPosition").data,r=Bs.points,i=this.geometry.getIndex().data,n=i.length,o=4===this.drawMode?3:1,s=0;s+2<n;s+=o){var a=2*i[s],h=2*i[s+1],u=2*i[s+2];if(r[0]=e[a],r[1]=e[a+1],r[2]=e[h],r[3]=e[h+1],r[4]=e[u],r[5]=e[u+1],Bs.contains(Fs.x,Fs.y))return!0}return!1},r.prototype.destroy=function(t){e.prototype.destroy.call(this,t),this.geometry.refCount--,0===this.geometry.refCount&&this.geometry.dispose(),this.geometry=null,this.shader=null,this.state=null,this.uvs=null,this.indices=null,this.vertexData=null},r.BATCHABLE_SIZE=100,r}(Ge),ks="varying vec2 vTextureCoord;\nuniform vec4 uColor;\n\nuniform sampler2D uSampler;\n\nvoid main(void)\n{\n    gl_FragColor = texture2D(uSampler, vTextureCoord) * uColor;\n}\n",Xs="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform mat3 uTextureMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n\n    vTextureCoord = (uTextureMatrix * vec3(aTextureCoord, 1.0)).xy;\n}\n",js=function(t){function e(e,r){var i=this,n={uSampler:e,alpha:1,uTextureMatrix:Ie.IDENTITY,uColor:new Float32Array([1,1,1,1])};return(r=Object.assign({tint:16777215,alpha:1,pluginName:"batch"},r)).uniforms&&Object.assign(n,r.uniforms),(i=t.call(this,r.program||Ri.from(Xs,ks),n)||this)._colorDirty=!1,i.uvMatrix=new Xi(e),i.batchable=void 0===r.program,i.pluginName=r.pluginName,i.tint=r.tint,i.alpha=r.alpha,i}return Ls(e,t),Object.defineProperty(e.prototype,"texture",{get:function(){return this.uniforms.uSampler},set:function(t){this.uniforms.uSampler!==t&&(this.uniforms.uSampler=t,this.uvMatrix.texture=t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"alpha",{get:function(){return this._alpha},set:function(t){t!==this._alpha&&(this._alpha=t,this._colorDirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"tint",{get:function(){return this._tint},set:function(t){t!==this._tint&&(this._tint=t,this._tintRGB=(t>>16)+(65280&t)+((255&t)<<16),this._colorDirty=!0)},enumerable:!1,configurable:!0}),e.prototype.update=function(){if(this._colorDirty){this._colorDirty=!1;var t=this.texture.baseTexture;Wt(this._tint,this._alpha,this.uniforms.uColor,t.alphaMode)}this.uvMatrix.update()&&(this.uniforms.uTextureMatrix=this.uvMatrix.mapCoord)},e}(Li),Hs=function(e){function r(r,i,n){var o=e.call(this)||this,s=new Xr(r),a=new Xr(i,!0),h=new Xr(n,!0,!0);return o.addAttribute("aVertexPosition",s,2,!1,t.TYPES.FLOAT).addAttribute("aTextureCoord",a,2,!1,t.TYPES.FLOAT).addIndex(h),o._updateId=-1,o}return Ls(r,e),Object.defineProperty(r.prototype,"vertexDirtyId",{get:function(){return this.buffers[0]._updateID},enumerable:!1,configurable:!0}),r}(Vr),Gs=function(t,e){return(Gs=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};var Ys=function(){return function(){this.info=[],this.common=[],this.page=[],this.char=[],this.kerning=[]}}(),zs=function(){function t(){}return t.test=function(t){return"string"==typeof t&&0===t.indexOf("info face=")},t.parse=function(t){var e=t.match(/^[a-z]+\s+.+$/gm),r={info:[],common:[],page:[],char:[],chars:[],kerning:[],kernings:[]};for(var i in e){var n=e[i].match(/^[a-z]+/gm)[0],o=e[i].match(/[a-zA-Z]+=([^\s"']+|"([^"]*)")/gm),s={};for(var a in o){var h=o[a].split("="),u=h[0],l=h[1].replace(/"/gm,""),c=parseFloat(l),d=isNaN(c)?l:c;s[u]=d}r[n].push(s)}var p=new Ys;return r.info.forEach(function(t){return p.info.push({face:t.face,size:parseInt(t.size,10)})}),r.common.forEach(function(t){return p.common.push({lineHeight:parseInt(t.lineHeight,10)})}),r.page.forEach(function(t){return p.page.push({id:parseInt(t.id,10),file:t.file})}),r.char.forEach(function(t){return p.char.push({id:parseInt(t.id,10),page:parseInt(t.page,10),x:parseInt(t.x,10),y:parseInt(t.y,10),width:parseInt(t.width,10),height:parseInt(t.height,10),xoffset:parseInt(t.xoffset,10),yoffset:parseInt(t.yoffset,10),xadvance:parseInt(t.xadvance,10)})}),r.kerning.forEach(function(t){return p.kerning.push({first:parseInt(t.first,10),second:parseInt(t.second,10),amount:parseInt(t.amount,10)})}),p},t}(),Vs=function(){function t(){}return t.test=function(t){return t instanceof XMLDocument&&t.getElementsByTagName("page").length&&null!==t.getElementsByTagName("info")[0].getAttribute("face")},t.parse=function(t){for(var e=new Ys,r=t.getElementsByTagName("info"),i=t.getElementsByTagName("common"),n=t.getElementsByTagName("page"),o=t.getElementsByTagName("char"),s=t.getElementsByTagName("kerning"),a=0;a<r.length;a++)e.info.push({face:r[a].getAttribute("face"),size:parseInt(r[a].getAttribute("size"),10)});for(a=0;a<i.length;a++)e.common.push({lineHeight:parseInt(i[a].getAttribute("lineHeight"),10)});for(a=0;a<n.length;a++)e.page.push({id:parseInt(n[a].getAttribute("id"),10)||0,file:n[a].getAttribute("file")});for(a=0;a<o.length;a++){var h=o[a];e.char.push({id:parseInt(h.getAttribute("id"),10),page:parseInt(h.getAttribute("page"),10)||0,x:parseInt(h.getAttribute("x"),10),y:parseInt(h.getAttribute("y"),10),width:parseInt(h.getAttribute("width"),10),height:parseInt(h.getAttribute("height"),10),xoffset:parseInt(h.getAttribute("xoffset"),10),yoffset:parseInt(h.getAttribute("yoffset"),10),xadvance:parseInt(h.getAttribute("xadvance"),10)})}for(a=0;a<s.length;a++)e.kerning.push({first:parseInt(s[a].getAttribute("first"),10),second:parseInt(s[a].getAttribute("second"),10),amount:parseInt(s[a].getAttribute("amount"),10)});return e},t}(),Ws=function(){function t(){}return t.test=function(t){if("string"==typeof t&&t.indexOf("<font>")>-1){var e=(new self.DOMParser).parseFromString(t,"text/xml");return Vs.test(e)}return!1},t.parse=function(t){var e=(new window.DOMParser).parseFromString(t,"text/xml");return Vs.parse(e)},t}(),qs=[zs,Vs,Ws];function Ks(t){for(var e=0;e<qs.length;e++)if(qs[e].test(t))return qs[e];return null}function Zs(e,r,i,n,o,s){var a,h=i.fill;if(!Array.isArray(h))return h;if(1===h.length)return h[0];var u=i.dropShadow?i.dropShadowDistance:0,l=i.padding||0,c=Math.ceil(e.width/n)-u-2*l,d=Math.ceil(e.height/n)-u-2*l,p=h.slice(),f=i.fillGradientStops.slice();if(!f.length)for(var m=p.length+1,v=1;v<m;++v)f.push(v/m);if(p.unshift(h[0]),f.unshift(0),p.push(h[h.length-1]),f.push(1),i.fillGradientType===t.TEXT_GRADIENT.LINEAR_VERTICAL){a=r.createLinearGradient(c/2,l,c/2,d+l);var g=0,y=(s.fontProperties.fontSize+i.strokeThickness)/d;for(v=0;v<o.length;v++)for(var _=s.lineHeight*v,x=0;x<p.length;x++){var b=_/d+("number"==typeof f[x]?f[x]:x/p.length)*y,E=Math.max(g,b);E=Math.min(E,1),a.addColorStop(E,p[x]),g=E}}else{a=r.createLinearGradient(l,d/2,c+l,d/2);var T=p.length+1,S=1;for(v=0;v<p.length;v++){var w=void 0;w="number"==typeof f[v]?f[v]:S/T,a.addColorStop(w,p[v]),S++}}return a}function Js(t,e,r,i,n,o,s){var a=r.text,h=r.fontProperties;e.translate(i,n),e.scale(o,o);var u=s.strokeThickness/2,l=-s.strokeThickness/2;e.font=s.toFontString(),e.lineWidth=s.strokeThickness,e.textBaseline=s.textBaseline,e.lineJoin=s.lineJoin,e.miterLimit=s.miterLimit,e.fillStyle=Zs(t,e,s,o,[a],r),e.strokeStyle=s.stroke,e.font=s.toFontString(),e.lineWidth=s.strokeThickness,e.textBaseline=s.textBaseline,e.lineJoin=s.lineJoin,e.miterLimit=s.miterLimit,e.fillStyle=Zs(t,e,s,o,[a],r),e.strokeStyle=s.stroke;var c=s.dropShadowColor,d=kt("number"==typeof c?c:jt(c));s.dropShadow?(e.shadowColor="rgba("+255*d[0]+","+255*d[1]+","+255*d[2]+","+s.dropShadowAlpha+")",e.shadowBlur=s.dropShadowBlur,e.shadowOffsetX=Math.cos(s.dropShadowAngle)*s.dropShadowDistance,e.shadowOffsetY=Math.sin(s.dropShadowAngle)*s.dropShadowDistance):(e.shadowColor="black",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0),s.stroke&&s.strokeThickness&&e.strokeText(a,u,l+r.lineHeight-h.descent),s.fill&&e.fillText(a,u,l+r.lineHeight-h.descent),e.setTransform(1,0,0,1,0,0),e.fillStyle="rgba(0, 0, 0, 0)"}var Qs=function(){function t(t,e){var r=t.info[0],i=t.common[0],n=fe(t.page[0].file),o={};this.font=r.face,this.size=r.size,this.lineHeight=i.lineHeight/n,this.chars={},this.pageTextures=o;for(var s=0;s<t.page.length;s++){var a=t.page[s],h=a.id,u=a.file;o[h]=e instanceof Array?e[s]:e[u]}for(s=0;s<t.char.length;s++){var l=t.char[s],c=(h=l.id,l.page),d=t.char[s],p=d.x,f=d.y,m=d.width,v=d.height,g=d.xoffset,y=d.yoffset,_=d.xadvance;f/=n,m/=n,v/=n,g/=n,y/=n,_/=n;var x=new xe((p/=n)+o[c].frame.x/n,f+o[c].frame.y/n,m,v);this.chars[h]={xOffset:g,yOffset:y,xAdvance:_,kerning:{},texture:new Lr(o[c].baseTexture,x),page:c}}for(s=0;s<t.kerning.length;s++){var b=t.kerning[s],E=b.first,T=b.second,S=b.amount;E/=n,T/=n,S/=n,this.chars[T]&&(this.chars[T].kerning[E]=S)}}return t.prototype.destroy=function(){for(var t in this.chars)this.chars[t].texture.destroy(),this.chars[t].texture=null;for(var t in this.pageTextures)this.pageTextures[t].destroy(!0),this.pageTextures[t]=null;this.chars=null,this.pageTextures=null},t.install=function(e,r){var i;if(e instanceof Ys)i=e;else{var n=Ks(e);if(!n)throw new Error("Unrecognized data format for font.");i=n.parse(e)}r instanceof Lr&&(r=[r]);var o=new t(i,r);return t.available[o.font]=o,o},t.uninstall=function(e){var r=t.available[e];if(!r)throw new Error("No font found named '"+e+"'");r.destroy(),delete t.available[e]},t.from=function(e,r,i){if(!e)throw new Error("[BitmapFont] Property `name` is required.");var n=Object.assign({},t.defaultOptions,i),o=n.chars,s=n.padding,a=n.resolution,h=n.textureWidth,u=n.textureHeight,l=function(t){"string"==typeof t&&(t=[t]);for(var e=[],r=0,i=t.length;r<i;r++){var n=t[r];if(Array.isArray(n)){if(2!==n.length)throw new Error("[BitmapFont]: Invalid character range length, expecting 2 got "+n.length+".");var o=n[0].charCodeAt(0),s=n[1].charCodeAt(0);if(s<o)throw new Error("[BitmapFont]: Invalid character range.");for(var a=o,h=s;a<=h;a++)e.push(String.fromCharCode(a))}else e.push.apply(e,n.split(""))}if(0===e.length)throw new Error("[BitmapFont]: Empty set when resolving characters.");return e}(o),c=r instanceof $o?r:new $o(r),d=h,p=new Ys;p.info[0]={face:c.fontFamily,size:c.fontSize},p.common[0]={lineHeight:c.fontSize};for(var f,m,v,g=0,y=0,_=0,x=[],b=0;b<l.length;b++){f||((f=document.createElement("canvas")).width=h,f.height=u,m=f.getContext("2d"),v=new gr(f,{resolution:a}),x.push(new Lr(v)),p.page.push({id:x.length-1,file:""}));var E=is.measureText(l[b],c,!1,f),T=E.width,S=Math.ceil(E.height),w=Math.ceil(("italic"===c.fontStyle?2:1)*T);if(y>=u-S*a){if(0===y)throw new Error("[BitmapFont] textureHeight "+u+"px is too small for "+c.fontSize+"px fonts");--b,f=null,m=null,v=null,y=0,g=0,_=0}else if(_=Math.max(S+E.fontProperties.descent,_),w*a+g>=d)--b,y+=_*a,y=Math.ceil(y),g=0,_=0;else{Js(f,m,E,g,y,a,c);var P=E.text.charCodeAt(0);p.char.push({id:P,page:x.length-1,x:g/a,y:y/a,width:w,height:S,xoffset:0,yoffset:0,xadvance:Math.ceil(T-(c.dropShadow?c.dropShadowDistance:0)-(c.stroke?c.strokeThickness:0))}),g+=(w+2*s)*a,g=Math.ceil(g)}}var I=new t(p,x);return void 0!==t.available[e]&&t.uninstall(e),t.available[e]=I,I},t.ALPHA=[["a","z"],["A","Z"]," "],t.NUMERIC=[["0","9"]],t.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],t.ASCII=[[" ","~"]],t.defaultOptions={resolution:1,textureWidth:512,textureHeight:512,padding:4,chars:t.ALPHANUMERIC},t.available={},t}(),$s=[],ta=[],ea=function(t){function e(r,i){void 0===i&&(i={});var n=t.call(this)||this;n._tint=16777215,i.font&&(oe("5.3.0","PIXI.BitmapText constructor style.font property is deprecated."),n._upgradeStyle(i));var o=Object.assign({},e.styleDefaults,i),s=o.align,a=o.tint,h=o.maxWidth,u=o.letterSpacing,l=o.fontName,c=o.fontSize;if(!Qs.available[l])throw new Error('Missing BitmapFont "'+l+'"');return n._activePagesMeshData=[],n._textWidth=0,n._textHeight=0,n._align=s,n._tint=a,n._fontName=l,n._fontSize=c||Qs.available[l].size,n._text=r,n._maxWidth=h,n._maxLineHeight=0,n._letterSpacing=u,n._anchor=new Pe(function(){n.dirty=!0},n,0,0),n._roundPixels=D.ROUND_PIXELS,n.dirty=!0,n._textureCache={},n}return function(t,e){function r(){this.constructor=t}Gs(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(e,t),e.prototype.updateText=function(){for(var t,e=Qs.available[this._fontName],r=this._fontSize/e.size,i=new we,n=[],o=[],s=this._text.replace(/(?:\r\n|\r)/g,"\n")||" ",a=s.length,h=this._maxWidth*e.size/this._fontSize,u=null,l=0,c=0,d=0,p=-1,f=0,m=0,v=0,g=0;g<a;g++){var y=s.charCodeAt(g),_=s.charAt(g);if(/(?:\s)/.test(_)&&(p=g,f=l),"\r"!==_&&"\n"!==_){var x=e.chars[y];if(x){u&&x.kerning[u]&&(i.x+=x.kerning[u]);var b=ta.pop()||{texture:Lr.EMPTY,line:0,charCode:0,position:new we};b.texture=x.texture,b.line=d,b.charCode=y,b.position.x=i.x+x.xOffset+this._letterSpacing/2,b.position.y=i.y+x.yOffset,n.push(b),i.x+=x.xAdvance+this._letterSpacing,l=i.x,v=Math.max(v,x.yOffset+x.texture.height),u=y,-1!==p&&h>0&&i.x>h&&(te(n,1+p-++m,1+g-p),g=p,p=-1,o.push(f),c=Math.max(c,f),d++,i.x=0,i.y+=e.lineHeight,u=null)}}else o.push(l),c=Math.max(c,l),++d,++m,i.x=0,i.y+=e.lineHeight,u=null}var E=s.charAt(s.length-1);"\r"!==E&&"\n"!==E&&(/(?:\s)/.test(E)&&(l=f),o.push(l),c=Math.max(c,l));var T=[];for(g=0;g<=d;g++){var S=0;"right"===this._align?S=c-o[g]:"center"===this._align&&(S=(c-o[g])/2),T.push(S)}var w=n.length,P={},I=[],A=this._activePagesMeshData;for(g=0;g<A.length;g++)$s.push(A[g]);for(g=0;g<w;g++){var O=(U=n[g].texture).baseTexture.uid;if(!P[O]){if(!(z=$s.pop())){var M=new Hs,D=new js(Lr.EMPTY);z={index:0,indexCount:0,vertexCount:0,uvsCount:0,total:0,mesh:new Us(M,D),vertices:null,uvs:null,indices:null}}z.index=0,z.indexCount=0,z.vertexCount=0,z.uvsCount=0,z.total=0;var C=this._textureCache;C[O]=C[O]||new Lr(U.baseTexture),z.mesh.texture=C[O],z.mesh.tint=this._tint,I.push(z),P[O]=z}P[O].total++}for(g=0;g<A.length;g++)-1===I.indexOf(A[g])&&this.removeChild(A[g].mesh);for(g=0;g<I.length;g++)I[g].mesh.parent!==this&&this.addChild(I[g].mesh);for(var g in this._activePagesMeshData=I,P){var R=(z=P[g]).total;if(!((null===(t=z.indices)||void 0===t?void 0:t.length)>6*R)||z.vertices.length<2*Us.BATCHABLE_SIZE)z.vertices=new Float32Array(8*R),z.uvs=new Float32Array(8*R),z.indices=new Uint16Array(6*R);else for(var L=z.total,N=z.vertices,F=4*L*2;F<N.length;F++)N[F]=0;z.mesh.size=6*R}for(g=0;g<w;g++){var B=(_=n[g]).position.x+T[_.line];this._roundPixels&&(B=Math.round(B));var U,k=B*r,X=_.position.y*r,j=P[(U=_.texture).baseTexture.uid],H=U.frame,G=U._uvs,Y=j.index++;j.indices[6*Y+0]=0+4*Y,j.indices[6*Y+1]=1+4*Y,j.indices[6*Y+2]=2+4*Y,j.indices[6*Y+3]=0+4*Y,j.indices[6*Y+4]=2+4*Y,j.indices[6*Y+5]=3+4*Y,j.vertices[8*Y+0]=k,j.vertices[8*Y+1]=X,j.vertices[8*Y+2]=k+H.width*r,j.vertices[8*Y+3]=X,j.vertices[8*Y+4]=k+H.width*r,j.vertices[8*Y+5]=X+H.height*r,j.vertices[8*Y+6]=k,j.vertices[8*Y+7]=X+H.height*r,j.uvs[8*Y+0]=G.x0,j.uvs[8*Y+1]=G.y0,j.uvs[8*Y+2]=G.x1,j.uvs[8*Y+3]=G.y1,j.uvs[8*Y+4]=G.x2,j.uvs[8*Y+5]=G.y2,j.uvs[8*Y+6]=G.x3,j.uvs[8*Y+7]=G.y3}for(var g in this._textWidth=c*r,this._textHeight=(i.y+e.lineHeight)*r,P){var z=P[g];if(0!==this.anchor.x||0!==this.anchor.y)for(var V=0,W=this._textWidth*this.anchor.x,q=this._textHeight*this.anchor.y,K=0;K<z.total;K++)z.vertices[V++]-=W,z.vertices[V++]-=q,z.vertices[V++]-=W,z.vertices[V++]-=q,z.vertices[V++]-=W,z.vertices[V++]-=q,z.vertices[V++]-=W,z.vertices[V++]-=q;this._maxLineHeight=v*r;var Z=z.mesh.geometry.getBuffer("aVertexPosition"),J=z.mesh.geometry.getBuffer("aTextureCoord"),Q=z.mesh.geometry.getIndex();Z.data=z.vertices,J.data=z.uvs,Q.data=z.indices,Z.update(),J.update(),Q.update()}for(g=0;g<n.length;g++)ta.push(n[g])},e.prototype.updateTransform=function(){this.validate(),this.containerUpdateTransform()},e.prototype.getLocalBounds=function(){return this.validate(),t.prototype.getLocalBounds.call(this)},e.prototype.validate=function(){this.dirty&&(this.updateText(),this.dirty=!1)},Object.defineProperty(e.prototype,"tint",{get:function(){return this._tint},set:function(t){if(this._tint!==t){this._tint=t;for(var e=0;e<this._activePagesMeshData.length;e++)this._activePagesMeshData[e].mesh.tint=t}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"align",{get:function(){return this._align},set:function(t){this._align!==t&&(this._align=t,this.dirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"fontName",{get:function(){return this._fontName},set:function(t){if(!Qs.available[t])throw new Error('Missing BitmapFont "'+t+'"');this._fontName!==t&&(this._fontName=t,this.dirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"fontSize",{get:function(){return this._fontSize},set:function(t){this._fontSize!==t&&(this._fontSize=t,this.dirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"anchor",{get:function(){return this._anchor},set:function(t){"number"==typeof t?this._anchor.set(t):this._anchor.copyFrom(t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"text",{get:function(){return this._text},set:function(t){t=String(null==t?"":t),this._text!==t&&(this._text=t,this.dirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"maxWidth",{get:function(){return this._maxWidth},set:function(t){this._maxWidth!==t&&(this._maxWidth=t,this.dirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"maxLineHeight",{get:function(){return this.validate(),this._maxLineHeight},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"textWidth",{get:function(){return this.validate(),this._textWidth},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"letterSpacing",{get:function(){return this._letterSpacing},set:function(t){this._letterSpacing!==t&&(this._letterSpacing=t,this.dirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"roundPixels",{get:function(){return this._roundPixels},set:function(t){t!==this._roundPixels&&(this._roundPixels=t,this.dirty=!0)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"textHeight",{get:function(){return this.validate(),this._textHeight},enumerable:!1,configurable:!0}),e.prototype._upgradeStyle=function(t){if("string"==typeof t.font){var e=t.font.split(" ");t.fontName=1===e.length?e[0]:e.slice(1).join(" "),e.length>=2&&(t.fontSize=parseInt(e[0],10))}else t.fontName=t.font.name,t.fontSize="number"==typeof t.font.size?t.font.size:parseInt(t.font.size,10)},e.prototype.destroy=function(e){var r=this._textureCache;for(var i in r){r[i].destroy(),delete r[i]}this._textureCache=null,t.prototype.destroy.call(this,e)},e.registerFont=function(t,e){return oe("5.3.0","PIXI.BitmapText.registerFont is deprecated, use PIXI.BitmapFont.install"),Qs.install(t,e)},Object.defineProperty(e,"fonts",{get:function(){return oe("5.3.0","PIXI.BitmapText.fonts is deprecated, use PIXI.BitmapFont.available"),Qs.available},enumerable:!1,configurable:!0}),e.styleDefaults={align:"left",tint:16777215,maxWidth:0,letterSpacing:0},e}(Ge),ra=function(){function t(){}return t.add=function(){$n.setExtensionXhrType("fnt",$n.XHR_RESPONSE_TYPE.TEXT)},t.use=function(e,r){var i=Ks(e.data);if(i)for(var n=t.getBaseUrl(this,e),o=i.parse(e.data),s={},a=function(t){s[t.metadata.pageFile]=t.texture,Object.keys(s).length===o.page.length&&(e.bitmapFont=Qs.install(o,s),r())},h=0;h<o.page.length;++h){var u=o.page[h].file,l=n+u,c=!1;for(var d in this.resources){var p=this.resources[d];if(p.url===l){p.metadata.pageFile=u,p.texture?a(p):p.onAfterMiddleware.add(a),c=!0;break}}if(!c){var f={crossOrigin:e.crossOrigin,loadType:$n.LOAD_TYPE.IMAGE,metadata:Object.assign({pageFile:u},e.metadata.imageMetadata),parentResource:e};this.add(l,f,a)}}else r()},t.getBaseUrl=function(e,r){var i=r.isDataUrl?"":t.dirname(r.url);return r.isDataUrl&&("."===i&&(i=""),e.baseUrl&&i&&"/"===e.baseUrl.charAt(e.baseUrl.length-1)&&(i+="/")),(i=i.replace(e.baseUrl,""))&&"/"!==i.charAt(i.length-1)&&(i+="/"),i},t.dirname=function(t){var e=t.replace(/\\/g,"/").replace(/\/$/,"").replace(/\/[^\/]*$/,"");return e===t?".":""===e?"/":e},t}(),ia=function(t,e){return(ia=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};var na="varying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform float uAlpha;\n\nvoid main(void)\n{\n   gl_FragColor = texture2D(uSampler, vTextureCoord) * uAlpha;\n}\n",oa=function(t){function e(e){void 0===e&&(e=1);var r=t.call(this,gn,na,{uAlpha:1})||this;return r.alpha=e,r}return function(t,e){function r(){this.constructor=t}ia(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(e,t),Object.defineProperty(e.prototype,"alpha",{get:function(){return this.uniforms.uAlpha},set:function(t){this.uniforms.uAlpha=t},enumerable:!1,configurable:!0}),e}(Fi),sa=function(t,e){return(sa=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};function aa(t,e){function r(){this.constructor=t}sa(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var ha="\n    attribute vec2 aVertexPosition;\n\n    uniform mat3 projectionMatrix;\n\n    uniform float strength;\n\n    varying vec2 vBlurTexCoords[%size%];\n\n    uniform vec4 inputSize;\n    uniform vec4 outputFrame;\n\n    vec4 filterVertexPosition( void )\n    {\n        vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n\n        return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n    }\n\n    vec2 filterTextureCoord( void )\n    {\n        return aVertexPosition * (outputFrame.zw * inputSize.zw);\n    }\n\n    void main(void)\n    {\n        gl_Position = filterVertexPosition();\n\n        vec2 textureCoord = filterTextureCoord();\n        %blur%\n    }";var ua,la,ca,da,pa,fa,ma,va,ga,ya,_a,xa,ba,Ea,Ta,Sa,wa,Pa={5:[.153388,.221461,.250301],7:[.071303,.131514,.189879,.214607],9:[.028532,.067234,.124009,.179044,.20236],11:[.0093,.028002,.065984,.121703,.175713,.198596],13:[.002406,.009255,.027867,.065666,.121117,.174868,.197641],15:[489e-6,.002403,.009246,.02784,.065602,.120999,.174697,.197448]},Ia=["varying vec2 vBlurTexCoords[%size%];","uniform sampler2D uSampler;","void main(void)","{","    gl_FragColor = vec4(0.0);","    %blur%","}"].join("\n");!function(t){t[t.WEBGL_LEGACY=0]="WEBGL_LEGACY",t[t.WEBGL=1]="WEBGL",t[t.WEBGL2=2]="WEBGL2"}(ua||(ua={})),function(t){t[t.UNKNOWN=0]="UNKNOWN",t[t.WEBGL=1]="WEBGL",t[t.CANVAS=2]="CANVAS"}(la||(la={})),function(t){t[t.COLOR=16384]="COLOR",t[t.DEPTH=256]="DEPTH",t[t.STENCIL=1024]="STENCIL"}(ca||(ca={})),function(t){t[t.NORMAL=0]="NORMAL",t[t.ADD=1]="ADD",t[t.MULTIPLY=2]="MULTIPLY",t[t.SCREEN=3]="SCREEN",t[t.OVERLAY=4]="OVERLAY",t[t.DARKEN=5]="DARKEN",t[t.LIGHTEN=6]="LIGHTEN",t[t.COLOR_DODGE=7]="COLOR_DODGE",t[t.COLOR_BURN=8]="COLOR_BURN",t[t.HARD_LIGHT=9]="HARD_LIGHT",t[t.SOFT_LIGHT=10]="SOFT_LIGHT",t[t.DIFFERENCE=11]="DIFFERENCE",t[t.EXCLUSION=12]="EXCLUSION",t[t.HUE=13]="HUE",t[t.SATURATION=14]="SATURATION",t[t.COLOR=15]="COLOR",t[t.LUMINOSITY=16]="LUMINOSITY",t[t.NORMAL_NPM=17]="NORMAL_NPM",t[t.ADD_NPM=18]="ADD_NPM",t[t.SCREEN_NPM=19]="SCREEN_NPM",t[t.NONE=20]="NONE",t[t.SRC_OVER=0]="SRC_OVER",t[t.SRC_IN=21]="SRC_IN",t[t.SRC_OUT=22]="SRC_OUT",t[t.SRC_ATOP=23]="SRC_ATOP",t[t.DST_OVER=24]="DST_OVER",t[t.DST_IN=25]="DST_IN",t[t.DST_OUT=26]="DST_OUT",t[t.DST_ATOP=27]="DST_ATOP",t[t.ERASE=26]="ERASE",t[t.SUBTRACT=28]="SUBTRACT",t[t.XOR=29]="XOR"}(da||(da={})),function(t){t[t.POINTS=0]="POINTS",t[t.LINES=1]="LINES",t[t.LINE_LOOP=2]="LINE_LOOP",t[t.LINE_STRIP=3]="LINE_STRIP",t[t.TRIANGLES=4]="TRIANGLES",t[t.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",t[t.TRIANGLE_FAN=6]="TRIANGLE_FAN"}(pa||(pa={})),function(t){t[t.RGBA=6408]="RGBA",t[t.RGB=6407]="RGB",t[t.ALPHA=6406]="ALPHA",t[t.LUMINANCE=6409]="LUMINANCE",t[t.LUMINANCE_ALPHA=6410]="LUMINANCE_ALPHA",t[t.DEPTH_COMPONENT=6402]="DEPTH_COMPONENT",t[t.DEPTH_STENCIL=34041]="DEPTH_STENCIL"}(fa||(fa={})),function(t){t[t.TEXTURE_2D=3553]="TEXTURE_2D",t[t.TEXTURE_CUBE_MAP=34067]="TEXTURE_CUBE_MAP",t[t.TEXTURE_2D_ARRAY=35866]="TEXTURE_2D_ARRAY",t[t.TEXTURE_CUBE_MAP_POSITIVE_X=34069]="TEXTURE_CUBE_MAP_POSITIVE_X",t[t.TEXTURE_CUBE_MAP_NEGATIVE_X=34070]="TEXTURE_CUBE_MAP_NEGATIVE_X",t[t.TEXTURE_CUBE_MAP_POSITIVE_Y=34071]="TEXTURE_CUBE_MAP_POSITIVE_Y",t[t.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072]="TEXTURE_CUBE_MAP_NEGATIVE_Y",t[t.TEXTURE_CUBE_MAP_POSITIVE_Z=34073]="TEXTURE_CUBE_MAP_POSITIVE_Z",t[t.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074]="TEXTURE_CUBE_MAP_NEGATIVE_Z"}(ma||(ma={})),function(t){t[t.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",t[t.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",t[t.UNSIGNED_SHORT_5_6_5=33635]="UNSIGNED_SHORT_5_6_5",t[t.UNSIGNED_SHORT_4_4_4_4=32819]="UNSIGNED_SHORT_4_4_4_4",t[t.UNSIGNED_SHORT_5_5_5_1=32820]="UNSIGNED_SHORT_5_5_5_1",t[t.FLOAT=5126]="FLOAT",t[t.HALF_FLOAT=36193]="HALF_FLOAT"}(va||(va={})),function(t){t[t.NEAREST=0]="NEAREST",t[t.LINEAR=1]="LINEAR"}(ga||(ga={})),function(t){t[t.CLAMP=33071]="CLAMP",t[t.REPEAT=10497]="REPEAT",t[t.MIRRORED_REPEAT=33648]="MIRRORED_REPEAT"}(ya||(ya={})),function(t){t[t.OFF=0]="OFF",t[t.POW2=1]="POW2",t[t.ON=2]="ON"}(_a||(_a={})),function(t){t[t.NPM=0]="NPM",t[t.UNPACK=1]="UNPACK",t[t.PMA=2]="PMA",t[t.NO_PREMULTIPLIED_ALPHA=0]="NO_PREMULTIPLIED_ALPHA",t[t.PREMULTIPLY_ON_UPLOAD=1]="PREMULTIPLY_ON_UPLOAD",t[t.PREMULTIPLY_ALPHA=2]="PREMULTIPLY_ALPHA"}(xa||(xa={})),function(t){t[t.NO=0]="NO",t[t.YES=1]="YES",t[t.AUTO=2]="AUTO",t[t.BLEND=0]="BLEND",t[t.CLEAR=1]="CLEAR",t[t.BLIT=2]="BLIT"}(ba||(ba={})),function(t){t[t.AUTO=0]="AUTO",t[t.MANUAL=1]="MANUAL"}(Ea||(Ea={})),function(t){t.LOW="lowp",t.MEDIUM="mediump",t.HIGH="highp"}(Ta||(Ta={})),function(t){t[t.NONE=0]="NONE",t[t.SCISSOR=1]="SCISSOR",t[t.STENCIL=2]="STENCIL",t[t.SPRITE=3]="SPRITE"}(Sa||(Sa={})),function(t){t[t.NONE=0]="NONE",t[t.LOW=2]="LOW",t[t.MEDIUM=4]="MEDIUM",t[t.HIGH=8]="HIGH"}(wa||(wa={}));var Aa=function(t){function e(e,r,i,n,o){void 0===r&&(r=8),void 0===i&&(i=4),void 0===n&&(n=D.FILTER_RESOLUTION),void 0===o&&(o=5);var s=this,a=function(t,e){var r,i=Math.ceil(t/2),n=ha,o="";r=e?"vBlurTexCoords[%index%] =  textureCoord + vec2(%sampleIndex% * strength, 0.0);":"vBlurTexCoords[%index%] =  textureCoord + vec2(0.0, %sampleIndex% * strength);";for(var s=0;s<t;s++){var a=r.replace("%index%",s.toString());o+=a=a.replace("%sampleIndex%",s-(i-1)+".0"),o+="\n"}return n=(n=n.replace("%blur%",o)).replace("%size%",t.toString())}(o,e),h=function(t){for(var e,r=Pa[t],i=r.length,n=Ia,o="",s=0;s<t;s++){var a="gl_FragColor += texture2D(uSampler, vBlurTexCoords[%index%]) * %value%;".replace("%index%",s.toString());e=s,s>=i&&(e=t-s-1),o+=a=a.replace("%value%",r[e].toString()),o+="\n"}return n=(n=n.replace("%blur%",o)).replace("%size%",t.toString())}(o);return(s=t.call(this,a,h)||this).horizontal=e,s.resolution=n,s._quality=0,s.quality=i,s.blur=r,s}return aa(e,t),e.prototype.apply=function(t,e,r,i){if(r?this.horizontal?this.uniforms.strength=1/r.width*(r.width/e.width):this.uniforms.strength=1/r.height*(r.height/e.height):this.horizontal?this.uniforms.strength=1/t.renderer.width*(t.renderer.width/e.width):this.uniforms.strength=1/t.renderer.height*(t.renderer.height/e.height),this.uniforms.strength*=this.strength,this.uniforms.strength/=this.passes,1===this.passes)t.applyFilter(this,e,r,i);else{var n=t.getFilterTexture(),o=t.renderer,s=e,a=n;this.state.blend=!1,t.applyFilter(this,s,a,ba.CLEAR);for(var h=1;h<this.passes-1;h++){t.bindAndClear(s,ba.BLIT),this.uniforms.uSampler=a;var u=a;a=s,s=u,o.shader.bind(this),o.geometry.draw(5)}this.state.blend=!0,t.applyFilter(this,a,r,i),t.returnFilterTexture(n)}},Object.defineProperty(e.prototype,"blur",{get:function(){return this.strength},set:function(t){this.padding=1+2*Math.abs(t),this.strength=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"quality",{get:function(){return this._quality},set:function(t){this._quality=t,this.passes=t},enumerable:!1,configurable:!0}),e}(Fi),Oa=function(t){function e(e,r,i,n){void 0===e&&(e=8),void 0===r&&(r=4),void 0===i&&(i=D.FILTER_RESOLUTION),void 0===n&&(n=5);var o=t.call(this)||this;return o.blurXFilter=new Aa(!0,e,r,i,n),o.blurYFilter=new Aa(!1,e,r,i,n),o.resolution=i,o.quality=r,o.blur=e,o.repeatEdgePixels=!1,o}return aa(e,t),e.prototype.apply=function(t,e,r,i){var n=Math.abs(this.blurXFilter.strength),o=Math.abs(this.blurYFilter.strength);if(n&&o){var s=t.getFilterTexture();this.blurXFilter.apply(t,e,s,ba.CLEAR),this.blurYFilter.apply(t,s,r,i),t.returnFilterTexture(s)}else o?this.blurYFilter.apply(t,e,r,i):this.blurXFilter.apply(t,e,r,i)},e.prototype.updatePadding=function(){this._repeatEdgePixels?this.padding=0:this.padding=2*Math.max(Math.abs(this.blurXFilter.strength),Math.abs(this.blurYFilter.strength))},Object.defineProperty(e.prototype,"blur",{get:function(){return this.blurXFilter.blur},set:function(t){this.blurXFilter.blur=this.blurYFilter.blur=t,this.updatePadding()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"quality",{get:function(){return this.blurXFilter.quality},set:function(t){this.blurXFilter.quality=this.blurYFilter.quality=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"blurX",{get:function(){return this.blurXFilter.blur},set:function(t){this.blurXFilter.blur=t,this.updatePadding()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"blurY",{get:function(){return this.blurYFilter.blur},set:function(t){this.blurYFilter.blur=t,this.updatePadding()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"blendMode",{get:function(){return this.blurYFilter.blendMode},set:function(t){this.blurYFilter.blendMode=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"repeatEdgePixels",{get:function(){return this._repeatEdgePixels},set:function(t){this._repeatEdgePixels=t,this.updatePadding()},enumerable:!1,configurable:!0}),e}(Fi),Ma=function(t,e){return(Ma=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};var Da="varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform float m[20];\nuniform float uAlpha;\n\nvoid main(void)\n{\n    vec4 c = texture2D(uSampler, vTextureCoord);\n\n    if (uAlpha == 0.0) {\n        gl_FragColor = c;\n        return;\n    }\n\n    // Un-premultiply alpha before applying the color matrix. See issue #3539.\n    if (c.a > 0.0) {\n      c.rgb /= c.a;\n    }\n\n    vec4 result;\n\n    result.r = (m[0] * c.r);\n        result.r += (m[1] * c.g);\n        result.r += (m[2] * c.b);\n        result.r += (m[3] * c.a);\n        result.r += m[4];\n\n    result.g = (m[5] * c.r);\n        result.g += (m[6] * c.g);\n        result.g += (m[7] * c.b);\n        result.g += (m[8] * c.a);\n        result.g += m[9];\n\n    result.b = (m[10] * c.r);\n       result.b += (m[11] * c.g);\n       result.b += (m[12] * c.b);\n       result.b += (m[13] * c.a);\n       result.b += m[14];\n\n    result.a = (m[15] * c.r);\n       result.a += (m[16] * c.g);\n       result.a += (m[17] * c.b);\n       result.a += (m[18] * c.a);\n       result.a += m[19];\n\n    vec3 rgb = mix(c.rgb, result.rgb, uAlpha);\n\n    // Premultiply alpha again.\n    rgb *= result.a;\n\n    gl_FragColor = vec4(rgb, result.a);\n}\n",Ca=function(t){function e(){var e=this,r={m:new Float32Array([1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0]),uAlpha:1};return(e=t.call(this,yn,Da,r)||this).alpha=1,e}return function(t,e){function r(){this.constructor=t}Ma(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(e,t),e.prototype._loadMatrix=function(t,e){void 0===e&&(e=!1);var r=t;e&&(this._multiply(r,this.uniforms.m,t),r=this._colorMatrix(r)),this.uniforms.m=r},e.prototype._multiply=function(t,e,r){return t[0]=e[0]*r[0]+e[1]*r[5]+e[2]*r[10]+e[3]*r[15],t[1]=e[0]*r[1]+e[1]*r[6]+e[2]*r[11]+e[3]*r[16],t[2]=e[0]*r[2]+e[1]*r[7]+e[2]*r[12]+e[3]*r[17],t[3]=e[0]*r[3]+e[1]*r[8]+e[2]*r[13]+e[3]*r[18],t[4]=e[0]*r[4]+e[1]*r[9]+e[2]*r[14]+e[3]*r[19]+e[4],t[5]=e[5]*r[0]+e[6]*r[5]+e[7]*r[10]+e[8]*r[15],t[6]=e[5]*r[1]+e[6]*r[6]+e[7]*r[11]+e[8]*r[16],t[7]=e[5]*r[2]+e[6]*r[7]+e[7]*r[12]+e[8]*r[17],t[8]=e[5]*r[3]+e[6]*r[8]+e[7]*r[13]+e[8]*r[18],t[9]=e[5]*r[4]+e[6]*r[9]+e[7]*r[14]+e[8]*r[19]+e[9],t[10]=e[10]*r[0]+e[11]*r[5]+e[12]*r[10]+e[13]*r[15],t[11]=e[10]*r[1]+e[11]*r[6]+e[12]*r[11]+e[13]*r[16],t[12]=e[10]*r[2]+e[11]*r[7]+e[12]*r[12]+e[13]*r[17],t[13]=e[10]*r[3]+e[11]*r[8]+e[12]*r[13]+e[13]*r[18],t[14]=e[10]*r[4]+e[11]*r[9]+e[12]*r[14]+e[13]*r[19]+e[14],t[15]=e[15]*r[0]+e[16]*r[5]+e[17]*r[10]+e[18]*r[15],t[16]=e[15]*r[1]+e[16]*r[6]+e[17]*r[11]+e[18]*r[16],t[17]=e[15]*r[2]+e[16]*r[7]+e[17]*r[12]+e[18]*r[17],t[18]=e[15]*r[3]+e[16]*r[8]+e[17]*r[13]+e[18]*r[18],t[19]=e[15]*r[4]+e[16]*r[9]+e[17]*r[14]+e[18]*r[19]+e[19],t},e.prototype._colorMatrix=function(t){var e=new Float32Array(t);return e[4]/=255,e[9]/=255,e[14]/=255,e[19]/=255,e},e.prototype.brightness=function(t,e){var r=[t,0,0,0,0,0,t,0,0,0,0,0,t,0,0,0,0,0,1,0];this._loadMatrix(r,e)},e.prototype.greyscale=function(t,e){var r=[t,t,t,0,0,t,t,t,0,0,t,t,t,0,0,0,0,0,1,0];this._loadMatrix(r,e)},e.prototype.blackAndWhite=function(t){this._loadMatrix([.3,.6,.1,0,0,.3,.6,.1,0,0,.3,.6,.1,0,0,0,0,0,1,0],t)},e.prototype.hue=function(t,e){t=(t||0)/180*Math.PI;var r=Math.cos(t),i=Math.sin(t),n=1/3,o=(0,Math.sqrt)(n),s=[r+(1-r)*n,n*(1-r)-o*i,n*(1-r)+o*i,0,0,n*(1-r)+o*i,r+n*(1-r),n*(1-r)-o*i,0,0,n*(1-r)-o*i,n*(1-r)+o*i,r+n*(1-r),0,0,0,0,0,1,0];this._loadMatrix(s,e)},e.prototype.contrast=function(t,e){var r=(t||0)+1,i=-.5*(r-1),n=[r,0,0,0,i,0,r,0,0,i,0,0,r,0,i,0,0,0,1,0];this._loadMatrix(n,e)},e.prototype.saturate=function(t,e){void 0===t&&(t=0);var r=2*t/3+1,i=-.5*(r-1),n=[r,i,i,0,0,i,r,i,0,0,i,i,r,0,0,0,0,0,1,0];this._loadMatrix(n,e)},e.prototype.desaturate=function(){this.saturate(-1)},e.prototype.negative=function(t){this._loadMatrix([-1,0,0,1,0,0,-1,0,1,0,0,0,-1,1,0,0,0,0,1,0],t)},e.prototype.sepia=function(t){this._loadMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0],t)},e.prototype.technicolor=function(t){this._loadMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0],t)},e.prototype.polaroid=function(t){this._loadMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0],t)},e.prototype.toBGR=function(t){this._loadMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0],t)},e.prototype.kodachrome=function(t){this._loadMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0],t)},e.prototype.browni=function(t){this._loadMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0],t)},e.prototype.vintage=function(t){this._loadMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0],t)},e.prototype.colorTone=function(t,e,r,i,n){var o=((r=r||16770432)>>16&255)/255,s=(r>>8&255)/255,a=(255&r)/255,h=((i=i||3375104)>>16&255)/255,u=(i>>8&255)/255,l=(255&i)/255,c=[.3,.59,.11,0,0,o,s,a,t=t||.2,0,h,u,l,e=e||.15,0,o-h,s-u,a-l,0,0];this._loadMatrix(c,n)},e.prototype.night=function(t,e){var r=[-2*(t=t||.1),-t,0,0,0,-t,0,t,0,0,0,t,2*t,0,0,0,0,0,1,0];this._loadMatrix(r,e)},e.prototype.predator=function(t,e){var r=[11.224130630493164*t,-4.794486999511719*t,-2.8746118545532227*t,0*t,.40342438220977783*t,-3.6330697536468506*t,9.193157196044922*t,-2.951810836791992*t,0*t,-1.316135048866272*t,-3.2184197902679443*t,-4.2375030517578125*t,7.476448059082031*t,0*t,.8044459223747253*t,0,0,0,1,0];this._loadMatrix(r,e)},e.prototype.lsd=function(t){this._loadMatrix([2,-.4,.5,0,0,-.5,2,-.4,0,0,-.4,-.5,3,0,0,0,0,0,1,0],t)},e.prototype.reset=function(){this._loadMatrix([1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0],!1)},Object.defineProperty(e.prototype,"matrix",{get:function(){return this.uniforms.m},set:function(t){this.uniforms.m=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"alpha",{get:function(){return this.uniforms.uAlpha},set:function(t){this.uniforms.uAlpha=t},enumerable:!1,configurable:!0}),e}(Fi);Ca.prototype.grayscale=Ca.prototype.greyscale;var Ra=function(t,e){return(Ra=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};var La="varying vec2 vFilterCoord;\nvarying vec2 vTextureCoord;\n\nuniform vec2 scale;\nuniform mat2 rotation;\nuniform sampler2D uSampler;\nuniform sampler2D mapSampler;\n\nuniform highp vec4 inputSize;\nuniform vec4 inputClamp;\n\nvoid main(void)\n{\n  vec4 map =  texture2D(mapSampler, vFilterCoord);\n\n  map -= 0.5;\n  map.xy = scale * inputSize.zw * (rotation * map.xy);\n\n  gl_FragColor = texture2D(uSampler, clamp(vec2(vTextureCoord.x + map.x, vTextureCoord.y + map.y), inputClamp.xy, inputClamp.zw));\n}\n",Na="attribute vec2 aVertexPosition;\n\nuniform mat3 projectionMatrix;\nuniform mat3 filterMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vFilterCoord;\n\nuniform vec4 inputSize;\nuniform vec4 outputFrame;\n\nvec4 filterVertexPosition( void )\n{\n    vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n\n    return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n}\n\nvec2 filterTextureCoord( void )\n{\n    return aVertexPosition * (outputFrame.zw * inputSize.zw);\n}\n\nvoid main(void)\n{\n\tgl_Position = filterVertexPosition();\n\tvTextureCoord = filterTextureCoord();\n\tvFilterCoord = ( filterMatrix * vec3( vTextureCoord, 1.0)  ).xy;\n}\n",Fa=function(t){function e(e,r){var i=this,n=new Ie;return e.renderable=!1,(i=t.call(this,Na,La,{mapSampler:e._texture,filterMatrix:n,scale:{x:1,y:1},rotation:new Float32Array([1,0,0,1])})||this).maskSprite=e,i.maskMatrix=n,null==r&&(r=20),i.scale=new we(r,r),i}return function(t,e){function r(){this.constructor=t}Ra(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(e,t),e.prototype.apply=function(t,e,r,i){this.uniforms.filterMatrix=t.calculateSpriteMatrix(this.maskMatrix,this.maskSprite),this.uniforms.scale.x=this.scale.x,this.uniforms.scale.y=this.scale.y;var n=this.maskSprite.worldTransform,o=Math.sqrt(n.a*n.a+n.b*n.b),s=Math.sqrt(n.c*n.c+n.d*n.d);0!==o&&0!==s&&(this.uniforms.rotation[0]=n.a/o,this.uniforms.rotation[1]=n.b/o,this.uniforms.rotation[2]=n.c/s,this.uniforms.rotation[3]=n.d/s),t.applyFilter(this,e,r,i)},Object.defineProperty(e.prototype,"map",{get:function(){return this.uniforms.mapSampler},set:function(t){this.uniforms.mapSampler=t},enumerable:!1,configurable:!0}),e}(Fi),Ba=function(t,e){return(Ba=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};var Ua="\nattribute vec2 aVertexPosition;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 v_rgbNW;\nvarying vec2 v_rgbNE;\nvarying vec2 v_rgbSW;\nvarying vec2 v_rgbSE;\nvarying vec2 v_rgbM;\n\nvarying vec2 vFragCoord;\n\nuniform vec4 inputPixel;\nuniform vec4 outputFrame;\n\nvec4 filterVertexPosition( void )\n{\n    vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n\n    return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n}\n\nvoid texcoords(vec2 fragCoord, vec2 inverseVP,\n               out vec2 v_rgbNW, out vec2 v_rgbNE,\n               out vec2 v_rgbSW, out vec2 v_rgbSE,\n               out vec2 v_rgbM) {\n    v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\n    v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\n    v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\n    v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\n    v_rgbM = vec2(fragCoord * inverseVP);\n}\n\nvoid main(void) {\n\n   gl_Position = filterVertexPosition();\n\n   vFragCoord = aVertexPosition * outputFrame.zw;\n\n   texcoords(vFragCoord, inputPixel.zw, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n}\n",ka='varying vec2 v_rgbNW;\nvarying vec2 v_rgbNE;\nvarying vec2 v_rgbSW;\nvarying vec2 v_rgbSE;\nvarying vec2 v_rgbM;\n\nvarying vec2 vFragCoord;\nuniform sampler2D uSampler;\nuniform highp vec4 inputPixel;\n\n\n/**\n Basic FXAA implementation based on the code on geeks3d.com with the\n modification that the texture2DLod stuff was removed since it\'s\n unsupported by WebGL.\n\n --\n\n From:\n https://github.com/mitsuhiko/webgl-meincraft\n\n Copyright (c) 2011 by Armin Ronacher.\n\n Some rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n\n * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following\n disclaimer in the documentation and/or other materials provided\n with the distribution.\n\n * The names of the contributors may not be used to endorse or\n promote products derived from this software without specific\n prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n#ifndef FXAA_REDUCE_MIN\n#define FXAA_REDUCE_MIN   (1.0/ 128.0)\n#endif\n#ifndef FXAA_REDUCE_MUL\n#define FXAA_REDUCE_MUL   (1.0 / 8.0)\n#endif\n#ifndef FXAA_SPAN_MAX\n#define FXAA_SPAN_MAX     8.0\n#endif\n\n//optimized version for mobile, where dependent\n//texture reads can be a bottleneck\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 inverseVP,\n          vec2 v_rgbNW, vec2 v_rgbNE,\n          vec2 v_rgbSW, vec2 v_rgbSE,\n          vec2 v_rgbM) {\n    vec4 color;\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\n    vec4 texColor = texture2D(tex, v_rgbM);\n    vec3 rgbM  = texColor.xyz;\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot(rgbM,  luma);\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n\n    mediump vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n                  dir * rcpDirMin)) * inverseVP;\n\n    vec3 rgbA = 0.5 * (\n                       texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\n                       texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\n                                     texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\n                                     texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\n\n    float lumaB = dot(rgbB, luma);\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\n        color = vec4(rgbA, texColor.a);\n    else\n        color = vec4(rgbB, texColor.a);\n    return color;\n}\n\nvoid main() {\n\n      vec4 color;\n\n      color = fxaa(uSampler, vFragCoord, inputPixel.zw, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n\n      gl_FragColor = color;\n}\n',Xa=function(t){function e(){return t.call(this,Ua,ka)||this}return function(t,e){function r(){this.constructor=t}Ba(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(e,t),e}(Fi),ja=function(t,e){return(ja=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};var Ha="precision highp float;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform float uNoise;\nuniform float uSeed;\nuniform sampler2D uSampler;\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid main()\n{\n    vec4 color = texture2D(uSampler, vTextureCoord);\n    float randomValue = rand(gl_FragCoord.xy * uSeed);\n    float diff = (randomValue - 0.5) * uNoise;\n\n    // Un-premultiply alpha before applying the color matrix. See issue #3539.\n    if (color.a > 0.0) {\n        color.rgb /= color.a;\n    }\n\n    color.r += diff;\n    color.g += diff;\n    color.b += diff;\n\n    // Premultiply alpha again.\n    color.rgb *= color.a;\n\n    gl_FragColor = color;\n}\n",Ga=function(t){function e(e,r){void 0===e&&(e=.5),void 0===r&&(r=Math.random());var i=t.call(this,yn,Ha,{uNoise:0,uSeed:0})||this;return i.noise=e,i.seed=r,i}return function(t,e){function r(){this.constructor=t}ja(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(e,t),Object.defineProperty(e.prototype,"noise",{get:function(){return this.uniforms.uNoise},set:function(t){this.uniforms.uNoise=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"seed",{get:function(){return this.uniforms.uSeed},set:function(t){this.uniforms.uSeed=t},enumerable:!1,configurable:!0}),e}(Fi),Ya=new Ie;Xe.prototype._cacheAsBitmap=!1,Xe.prototype._cacheData=null;var za=function(){return function(){this.textureCacheId=null,this.originalRender=null,this.originalRenderCanvas=null,this.originalCalculateBounds=null,this.originalGetLocalBounds=null,this.originalUpdateTransform=null,this.originalDestroy=null,this.originalMask=null,this.originalFilterArea=null,this.originalContainsPoint=null,this.sprite=null}}();Object.defineProperties(Xe.prototype,{cacheAsBitmap:{get:function(){return this._cacheAsBitmap},set:function(t){var e;this._cacheAsBitmap!==t&&(this._cacheAsBitmap=t,t?(this._cacheData||(this._cacheData=new za),(e=this._cacheData).originalRender=this.render,e.originalRenderCanvas=this.renderCanvas,e.originalUpdateTransform=this.updateTransform,e.originalCalculateBounds=this.calculateBounds,e.originalGetLocalBounds=this.getLocalBounds,e.originalDestroy=this.destroy,e.originalContainsPoint=this.containsPoint,e.originalMask=this._mask,e.originalFilterArea=this.filterArea,this.render=this._renderCached,this.renderCanvas=this._renderCachedCanvas,this.destroy=this._cacheAsBitmapDestroy):((e=this._cacheData).sprite&&this._destroyCachedDisplayObject(),this.render=e.originalRender,this.renderCanvas=e.originalRenderCanvas,this.calculateBounds=e.originalCalculateBounds,this.getLocalBounds=e.originalGetLocalBounds,this.destroy=e.originalDestroy,this.updateTransform=e.originalUpdateTransform,this.containsPoint=e.originalContainsPoint,this._mask=e.originalMask,this.filterArea=e.originalFilterArea))}}}),Xe.prototype._renderCached=function(t){!this.visible||this.worldAlpha<=0||!this.renderable||(this._initCachedDisplayObject(t),this._cacheData.sprite.transform._worldID=this.transform._worldID,this._cacheData.sprite.worldAlpha=this.worldAlpha,this._cacheData.sprite._render(t))},Xe.prototype._initCachedDisplayObject=function(t){if(!this._cacheData||!this._cacheData.sprite){var e=this.alpha;this.alpha=1,t.batch.flush();var r=this.getLocalBounds(null,!0).clone();if(this.filters){var i=this.filters[0].padding;r.pad(i)}r.ceil(D.RESOLUTION);var n=t.renderTexture.current,o=t.renderTexture.sourceFrame.clone(),s=t.projection.transform,a=Fr.create({width:r.width,height:r.height}),h="cacheAsBitmap_"+ie();this._cacheData.textureCacheId=h,gr.addToCache(a.baseTexture,h),Lr.addToCache(a,h);var u=this.transform.localTransform.copyTo(Ya).invert().translate(-r.x,-r.y);this.render=this._cacheData.originalRender,t.render(this,a,!0,u,!1),t.projection.transform=s,t.renderTexture.bind(n,o),this.render=this._renderCached,this.updateTransform=this.displayObjectUpdateTransform,this.calculateBounds=this._calculateCachedBounds,this.getLocalBounds=this._getCachedLocalBounds,this._mask=null,this.filterArea=null;var l=new Ko(a);l.transform.worldTransform=this.transform.worldTransform,l.anchor.x=-r.x/r.width,l.anchor.y=-r.y/r.height,l.alpha=e,l._bounds=this._bounds,this._cacheData.sprite=l,this.transform._parentID=-1,this.parent?this.updateTransform():(this.enableTempParent(),this.updateTransform(),this.disableTempParent(null)),this.containsPoint=l.containsPoint.bind(l)}},Xe.prototype._renderCachedCanvas=function(t){!this.visible||this.worldAlpha<=0||!this.renderable||(this._initCachedDisplayObjectCanvas(t),this._cacheData.sprite.worldAlpha=this.worldAlpha,this._cacheData.sprite._renderCanvas(t))},Xe.prototype._initCachedDisplayObjectCanvas=function(t){if(!this._cacheData||!this._cacheData.sprite){var e=this.getLocalBounds(null,!0),r=this.alpha;this.alpha=1;var i=t.context,n=t._projTransform;e.ceil(D.RESOLUTION);var o=Fr.create({width:e.width,height:e.height}),s="cacheAsBitmap_"+ie();this._cacheData.textureCacheId=s,gr.addToCache(o.baseTexture,s),Lr.addToCache(o,s);var a=Ya;this.transform.localTransform.copyTo(a),a.invert(),a.tx-=e.x,a.ty-=e.y,this.renderCanvas=this._cacheData.originalRenderCanvas,t.render(this,o,!0,a,!1),t.context=i,t._projTransform=n,this.renderCanvas=this._renderCachedCanvas,this.updateTransform=this.displayObjectUpdateTransform,this.calculateBounds=this._calculateCachedBounds,this.getLocalBounds=this._getCachedLocalBounds,this._mask=null,this.filterArea=null;var h=new Ko(o);h.transform.worldTransform=this.transform.worldTransform,h.anchor.x=-e.x/e.width,h.anchor.y=-e.y/e.height,h.alpha=r,h._bounds=this._bounds,this._cacheData.sprite=h,this.transform._parentID=-1,this.parent?this.updateTransform():(this.parent=t._tempDisplayObjectParent,this.updateTransform(),this.parent=null),this.containsPoint=h.containsPoint.bind(h)}},Xe.prototype._calculateCachedBounds=function(){this._bounds.clear(),this._cacheData.sprite.transform._worldID=this.transform._worldID,this._cacheData.sprite._calculateBounds(),this._bounds.updateID=this._boundsID},Xe.prototype._getCachedLocalBounds=function(){return this._cacheData.sprite.getLocalBounds(null)},Xe.prototype._destroyCachedDisplayObject=function(){this._cacheData.sprite._texture.destroy(!0),this._cacheData.sprite=null,gr.removeFromCache(this._cacheData.textureCacheId),Lr.removeFromCache(this._cacheData.textureCacheId),this._cacheData.textureCacheId=null},Xe.prototype._cacheAsBitmapDestroy=function(t){this.cacheAsBitmap=!1,this.destroy(t)},Xe.prototype.name=null,Ge.prototype.getChildByName=function(t,e){for(var r=0,i=this.children.length;r<i;r++)if(this.children[r].name===t)return this.children[r];if(e)for(r=0,i=this.children.length;r<i;r++){if(this.children[r].getChildByName){var n=this.children[r].getChildByName(t,!0);if(n)return n}}return null},Xe.prototype.getGlobalPosition=function(t,e){return void 0===t&&(t=new we),void 0===e&&(e=!1),this.parent?this.parent.toGlobal(this.position,t,e):(t.x=this.position.x,t.y=this.position.y),t};var Va=function(t,e){return(Va=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};function Wa(t,e){function r(){this.constructor=t}Va(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var qa=function(t){function e(e,r,i,n){void 0===e&&(e=100),void 0===r&&(r=100),void 0===i&&(i=10),void 0===n&&(n=10);var o=t.call(this)||this;return o.segWidth=i,o.segHeight=n,o.width=e,o.height=r,o.build(),o}return Wa(e,t),e.prototype.build=function(){for(var t=this.segWidth*this.segHeight,e=[],r=[],i=[],n=this.segWidth-1,o=this.segHeight-1,s=this.width/n,a=this.height/o,h=0;h<t;h++){var u=h%this.segWidth,l=h/this.segWidth|0;e.push(u*s,l*a),r.push(u/n,l/o)}var c=n*o;for(h=0;h<c;h++){var d=h%n,p=h/n|0,f=p*this.segWidth+d,m=p*this.segWidth+d+1,v=(p+1)*this.segWidth+d,g=(p+1)*this.segWidth+d+1;i.push(f,m,v,m,g,v)}this.buffers[0].data=new Float32Array(e),this.buffers[1].data=new Float32Array(r),this.indexBuffer.data=new Uint16Array(i),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()},e}(Hs),Ka=function(t){function e(e,r,i){void 0===e&&(e=200),void 0===i&&(i=0);var n=t.call(this,new Float32Array(4*r.length),new Float32Array(4*r.length),new Uint16Array(6*(r.length-1)))||this;return n.points=r,n._width=e,n.textureScale=i,n.build(),n}return Wa(e,t),Object.defineProperty(e.prototype,"width",{get:function(){return this._width},enumerable:!1,configurable:!0}),e.prototype.build=function(){var t=this.points;if(t){var e=this.getBuffer("aVertexPosition"),r=this.getBuffer("aTextureCoord"),i=this.getIndex();if(!(t.length<1)){e.data.length/4!==t.length&&(e.data=new Float32Array(4*t.length),r.data=new Float32Array(4*t.length),i.data=new Uint16Array(6*(t.length-1)));var n=r.data,o=i.data;n[0]=0,n[1]=0,n[2]=0,n[3]=1;for(var s=0,a=t[0],h=this._width*this.textureScale,u=t.length,l=0;l<u;l++){var c=4*l;if(this.textureScale>0){var d=a.x-t[l].x,p=a.y-t[l].y,f=Math.sqrt(d*d+p*p);a=t[l],s+=f/h}else s=l/(u-1);n[c]=s,n[c+1]=0,n[c+2]=s,n[c+3]=1}var m=0;for(l=0;l<u-1;l++){c=2*l;o[m++]=c,o[m++]=c+1,o[m++]=c+2,o[m++]=c+2,o[m++]=c+1,o[m++]=c+3}r.update(),i.update(),this.updateVertices()}}},e.prototype.updateVertices=function(){var t=this.points;if(!(t.length<1)){for(var e,r=t[0],i=0,n=0,o=this.buffers[0].data,s=t.length,a=0;a<s;a++){var h=t[a],u=4*a;n=-((e=a<t.length-1?t[a+1]:h).x-r.x),i=e.y-r.y;var l=Math.sqrt(i*i+n*n),c=this.textureScale>0?this.textureScale*this._width/2:this._width/2;i/=l,n/=l,i*=c,n*=c,o[u]=h.x+i,o[u+1]=h.y+n,o[u+2]=h.x-i,o[u+3]=h.y-n,r=h}this.buffers[0].update()}},e.prototype.update=function(){this.textureScale>0?this.build():this.updateVertices()},e}(Hs),Za=function(e){function r(r,i,n){void 0===n&&(n=0);var o=this,s=new Ka(r.height,i,n),a=new js(r);return n>0&&(r.baseTexture.wrapMode=t.WRAP_MODES.REPEAT),(o=e.call(this,s,a)||this).autoUpdate=!0,o}return Wa(r,e),r.prototype._render=function(t){var r=this.geometry;(this.autoUpdate||r._width!==this.shader.texture.height)&&(r._width=this.shader.texture.height,r.update()),e.prototype._render.call(this,t)},r}(Us),Ja=function(t){function e(e,r,i){var n=this,o=new qa(e.width,e.height,r,i),s=new js(Lr.WHITE);return(n=t.call(this,o,s)||this).texture=e,n}return Wa(e,t),e.prototype.textureUpdated=function(){this._textureID=this.shader.texture._updateID;var t=this.geometry;t.width=this.shader.texture.width,t.height=this.shader.texture.height,t.build()},Object.defineProperty(e.prototype,"texture",{get:function(){return this.shader.texture},set:function(t){this.shader.texture!==t&&(this.shader.texture=t,this._textureID=-1,t.baseTexture.valid?this.textureUpdated():t.once("update",this.textureUpdated,this))},enumerable:!1,configurable:!0}),e.prototype._render=function(e){this._textureID!==this.shader.texture._updateID&&this.textureUpdated(),t.prototype._render.call(this,e)},e.prototype.destroy=function(e){this.shader.texture.off("update",this.textureUpdated,this),t.prototype.destroy.call(this,e)},e}(Us),Qa=function(t){function e(e,r,i,n,o){void 0===e&&(e=Lr.EMPTY);var s=this,a=new Hs(r,i,n);a.getBuffer("aVertexPosition").static=!1;var h=new js(e);return(s=t.call(this,a,h,null,o)||this).autoUpdate=!0,s}return Wa(e,t),Object.defineProperty(e.prototype,"vertices",{get:function(){return this.geometry.getBuffer("aVertexPosition").data},set:function(t){this.geometry.getBuffer("aVertexPosition").data=t},enumerable:!1,configurable:!0}),e.prototype._render=function(e){this.autoUpdate&&this.geometry.getBuffer("aVertexPosition").update(),t.prototype._render.call(this,e)},e}(Us),$a=10,th=function(t){function e(e,r,i,n,o){void 0===r&&(r=$a),void 0===i&&(i=$a),void 0===n&&(n=$a),void 0===o&&(o=$a);var s=t.call(this,Lr.WHITE,4,4)||this;return s._origWidth=e.orig.width,s._origHeight=e.orig.height,s._width=s._origWidth,s._height=s._origHeight,s._leftWidth=r,s._rightWidth=n,s._topHeight=i,s._bottomHeight=o,s.texture=e,s}return Wa(e,t),e.prototype.textureUpdated=function(){this._textureID=this.shader.texture._updateID,this._refresh()},Object.defineProperty(e.prototype,"vertices",{get:function(){return this.geometry.getBuffer("aVertexPosition").data},set:function(t){this.geometry.getBuffer("aVertexPosition").data=t},enumerable:!1,configurable:!0}),e.prototype.updateHorizontalVertices=function(){var t=this.vertices,e=this._getMinScale();t[9]=t[11]=t[13]=t[15]=this._topHeight*e,t[17]=t[19]=t[21]=t[23]=this._height-this._bottomHeight*e,t[25]=t[27]=t[29]=t[31]=this._height},e.prototype.updateVerticalVertices=function(){var t=this.vertices,e=this._getMinScale();t[2]=t[10]=t[18]=t[26]=this._leftWidth*e,t[4]=t[12]=t[20]=t[28]=this._width-this._rightWidth*e,t[6]=t[14]=t[22]=t[30]=this._width},e.prototype._getMinScale=function(){var t=this._leftWidth+this._rightWidth,e=this._width>t?1:this._width/t,r=this._topHeight+this._bottomHeight,i=this._height>r?1:this._height/r;return Math.min(e,i)},Object.defineProperty(e.prototype,"width",{get:function(){return this._width},set:function(t){this._width=t,this._refresh()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return this._height},set:function(t){this._height=t,this._refresh()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"leftWidth",{get:function(){return this._leftWidth},set:function(t){this._leftWidth=t,this._refresh()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rightWidth",{get:function(){return this._rightWidth},set:function(t){this._rightWidth=t,this._refresh()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"topHeight",{get:function(){return this._topHeight},set:function(t){this._topHeight=t,this._refresh()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"bottomHeight",{get:function(){return this._bottomHeight},set:function(t){this._bottomHeight=t,this._refresh()},enumerable:!1,configurable:!0}),e.prototype._refresh=function(){var t=this.texture,e=this.geometry.buffers[1].data;this._origWidth=t.orig.width,this._origHeight=t.orig.height;var r=1/this._origWidth,i=1/this._origHeight;e[0]=e[8]=e[16]=e[24]=0,e[1]=e[3]=e[5]=e[7]=0,e[6]=e[14]=e[22]=e[30]=1,e[25]=e[27]=e[29]=e[31]=1,e[2]=e[10]=e[18]=e[26]=r*this._leftWidth,e[4]=e[12]=e[20]=e[28]=1-r*this._rightWidth,e[9]=e[11]=e[13]=e[15]=i*this._topHeight,e[17]=e[19]=e[21]=e[23]=1-i*this._bottomHeight,this.updateHorizontalVertices(),this.updateVerticalVertices(),this.geometry.buffers[0].update(),this.geometry.buffers[1].update()},e}(Ja),eh=function(t,e){return(eh=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};var rh=function(e){function r(t,r){void 0===r&&(r=!0);var i=e.call(this,t[0]instanceof Lr?t[0]:t[0].texture)||this;return i._textures=null,i._durations=null,i._autoUpdate=r,i._isConnectedToTicker=!1,i.animationSpeed=1,i.loop=!0,i.updateAnchor=!1,i.onComplete=null,i.onFrameChange=null,i.onLoop=null,i._currentTime=0,i._playing=!1,i._previousFrame=null,i.textures=t,i}return function(t,e){function r(){this.constructor=t}eh(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(r,e),r.prototype.stop=function(){this._playing&&(this._playing=!1,this._autoUpdate&&this._isConnectedToTicker&&(Qe.shared.remove(this.update,this),this._isConnectedToTicker=!1))},r.prototype.play=function(){this._playing||(this._playing=!0,this._autoUpdate&&!this._isConnectedToTicker&&(Qe.shared.add(this.update,this,t.UPDATE_PRIORITY.HIGH),this._isConnectedToTicker=!0))},r.prototype.gotoAndStop=function(t){this.stop();var e=this.currentFrame;this._currentTime=t,e!==this.currentFrame&&this.updateTexture()},r.prototype.gotoAndPlay=function(t){var e=this.currentFrame;this._currentTime=t,e!==this.currentFrame&&this.updateTexture(),this.play()},r.prototype.update=function(t){if(this._playing){var e=this.animationSpeed*t,r=this.currentFrame;if(null!==this._durations){var i=this._currentTime%1*this._durations[this.currentFrame];for(i+=e/60*1e3;i<0;)this._currentTime--,i+=this._durations[this.currentFrame];var n=Math.sign(this.animationSpeed*t);for(this._currentTime=Math.floor(this._currentTime);i>=this._durations[this.currentFrame];)i-=this._durations[this.currentFrame]*n,this._currentTime+=n;this._currentTime+=i/this._durations[this.currentFrame]}else this._currentTime+=e;this._currentTime<0&&!this.loop?(this.gotoAndStop(0),this.onComplete&&this.onComplete()):this._currentTime>=this._textures.length&&!this.loop?(this.gotoAndStop(this._textures.length-1),this.onComplete&&this.onComplete()):r!==this.currentFrame&&(this.loop&&this.onLoop&&(this.animationSpeed>0&&this.currentFrame<r?this.onLoop():this.animationSpeed<0&&this.currentFrame>r&&this.onLoop()),this.updateTexture())}},r.prototype.updateTexture=function(){var t=this.currentFrame;this._previousFrame!==t&&(this._previousFrame=t,this._texture=this._textures[t],this._textureID=-1,this._textureTrimmedID=-1,this._cachedTint=16777215,this.uvs=this._texture._uvs.uvsFloat32,this.updateAnchor&&this._anchor.copyFrom(this._texture.defaultAnchor),this.onFrameChange&&this.onFrameChange(this.currentFrame))},r.prototype.destroy=function(t){this.stop(),e.prototype.destroy.call(this,t),this.onComplete=null,this.onFrameChange=null,this.onLoop=null},r.fromFrames=function(t){for(var e=[],i=0;i<t.length;++i)e.push(Lr.from(t[i]));return new r(e)},r.fromImages=function(t){for(var e=[],i=0;i<t.length;++i)e.push(Lr.from(t[i]));return new r(e)},Object.defineProperty(r.prototype,"totalFrames",{get:function(){return this._textures.length},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"textures",{get:function(){return this._textures},set:function(t){if(t[0]instanceof Lr)this._textures=t,this._durations=null;else{this._textures=[],this._durations=[];for(var e=0;e<t.length;e++)this._textures.push(t[e].texture),this._durations.push(t[e].time)}this._previousFrame=null,this.gotoAndStop(0),this.updateTexture()},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"currentFrame",{get:function(){var t=Math.floor(this._currentTime)%this._textures.length;return t<0&&(t+=this._textures.length),t},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"playing",{get:function(){return this._playing},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"autoUpdate",{get:function(){return this._autoUpdate},set:function(t){t!==this._autoUpdate&&(this._autoUpdate=t,!this._autoUpdate&&this._isConnectedToTicker?(Qe.shared.remove(this.update,this),this._isConnectedToTicker=!1):this._autoUpdate&&!this._isConnectedToTicker&&this._playing&&(Qe.shared.add(this.update,this),this._isConnectedToTicker=!0))},enumerable:!1,configurable:!0}),r}(Ko),ih=function(t,e){return(ih=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};function nh(t,e){function r(){this.constructor=t}ih(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var oh="5.0.0";mn.registerPlugin("accessibility",Ze),mn.registerPlugin("extract",Cn),mn.registerPlugin("interaction",hr),mn.registerPlugin("particle",po),mn.registerPlugin("prepare",xs),mn.registerPlugin("batch",An),mn.registerPlugin("tilingSprite",Cs),ro.registerPlugin(ra),ro.registerPlugin(Ts),On.registerPlugin($e),On.registerPlugin(io);var sh={AlphaFilter:oa,BlurFilter:Oa,BlurFilterPass:Aa,ColorMatrixFilter:Ca,DisplacementFilter:Fa,FXAAFilter:Xa,NoiseFilter:Ga},ah=function(t,e){return(ah=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};var hh=function(){function e(t){this.renderer=t,this._foundShapes=[]}return e.prototype.pushMask=function(t){var e=this.renderer,r=t.maskObject||t;e.context.save();var i=this._foundShapes;if(this.recursiveFindShapes(r,i),i.length>0){var n=e.context;n.beginPath();for(var o=0;o<i.length;o++){var s=i[o],a=s.transform.worldTransform;this.renderer.setContextTransform(a),this.renderGraphicsShape(s)}i.length=0,n.clip()}},e.prototype.recursiveFindShapes=function(t,e){t.geometry&&t.geometry.graphicsData&&e.push(t);var r=t.children;if(r)for(var i=0;i<r.length;i++)this.recursiveFindShapes(r[i],e)},e.prototype.renderGraphicsShape=function(e){e.finishPoly();var r=this.renderer.context,i=e.geometry.graphicsData,n=i.length;if(0!==n)for(var o=0;o<n;o++){var s=i[o].shape;if(s.type===t.SHAPES.POLY){var a=s.points;r.moveTo(a[0],a[1]);for(var h=1;h<a.length/2;h++)r.lineTo(a[2*h],a[2*h+1]);a[0]===a[a.length-2]&&a[1]===a[a.length-1]&&r.closePath()}else if(s.type===t.SHAPES.RECT)r.rect(s.x,s.y,s.width,s.height),r.closePath();else if(s.type===t.SHAPES.CIRC)r.arc(s.x,s.y,s.radius,0,2*Math.PI),r.closePath();else if(s.type===t.SHAPES.ELIP){var u=2*s.width,l=2*s.height,c=s.x-u/2,d=s.y-l/2,p=u/2*.5522848,f=l/2*.5522848,m=c+u,v=d+l,g=c+u/2,y=d+l/2;r.moveTo(c,y),r.bezierCurveTo(c,y-f,g-p,d,g,d),r.bezierCurveTo(g+p,d,m,y-f,m,y),r.bezierCurveTo(m,y+f,g+p,v,g,v),r.bezierCurveTo(g-p,v,c,y+f,c,y),r.closePath()}else if(s.type===t.SHAPES.RREC){var _=s.x,x=s.y,b=s.width,E=s.height,T=s.radius,S=Math.min(b,E)/2|0;T=T>S?S:T,r.moveTo(_,x+T),r.lineTo(_,x+E-T),r.quadraticCurveTo(_,x+E,_+T,x+E),r.lineTo(_+b-T,x+E),r.quadraticCurveTo(_+b,x+E,_+b,x+E-T),r.lineTo(_+b,x+T),r.quadraticCurveTo(_+b,x,_+b-T,x),r.lineTo(_+T,x),r.quadraticCurveTo(_,x,_,x+T),r.closePath()}}},e.prototype.popMask=function(t){t.context.restore(),t.invalidateBlendMode()},e.prototype.destroy=function(){},e}();function uh(t){var e=document.createElement("canvas");e.width=6,e.height=1;var r=e.getContext("2d");return r.fillStyle=t,r.fillRect(0,0,6,1),e}function lh(){if("undefined"==typeof document)return!1;var t=uh("#ff00ff"),e=uh("#ffff00"),r=document.createElement("canvas");r.width=6,r.height=1;var i=r.getContext("2d");i.globalCompositeOperation="multiply",i.drawImage(t,0,0),i.drawImage(e,2,0);var n=i.getImageData(2,0,1,1);if(!n)return!1;var o=n.data;return 255===o[0]&&0===o[1]&&0===o[2]}var ch=new Ie,dh=function(e){function r(i){var n,o=e.call(this,t.RENDERER_TYPE.CANVAS,i)||this;if(o.rootContext=o.view.getContext("2d",{alpha:o.transparent}),o.context=o.rootContext,o.refresh=!0,o.maskManager=new hh(o),o.smoothProperty="imageSmoothingEnabled",!o.rootContext.imageSmoothingEnabled){var s=o.rootContext;s.webkitImageSmoothingEnabled?o.smoothProperty="webkitImageSmoothingEnabled":s.mozImageSmoothingEnabled?o.smoothProperty="mozImageSmoothingEnabled":s.oImageSmoothingEnabled?o.smoothProperty="oImageSmoothingEnabled":s.msImageSmoothingEnabled&&(o.smoothProperty="msImageSmoothingEnabled")}return o.initPlugins(r.__plugins),o.blendModes=(void 0===n&&(n=[]),lh()?(n[t.BLEND_MODES.NORMAL]="source-over",n[t.BLEND_MODES.ADD]="lighter",n[t.BLEND_MODES.MULTIPLY]="multiply",n[t.BLEND_MODES.SCREEN]="screen",n[t.BLEND_MODES.OVERLAY]="overlay",n[t.BLEND_MODES.DARKEN]="darken",n[t.BLEND_MODES.LIGHTEN]="lighten",n[t.BLEND_MODES.COLOR_DODGE]="color-dodge",n[t.BLEND_MODES.COLOR_BURN]="color-burn",n[t.BLEND_MODES.HARD_LIGHT]="hard-light",n[t.BLEND_MODES.SOFT_LIGHT]="soft-light",n[t.BLEND_MODES.DIFFERENCE]="difference",n[t.BLEND_MODES.EXCLUSION]="exclusion",n[t.BLEND_MODES.HUE]="hue",n[t.BLEND_MODES.SATURATION]="saturate",n[t.BLEND_MODES.COLOR]="color",n[t.BLEND_MODES.LUMINOSITY]="luminosity"):(n[t.BLEND_MODES.NORMAL]="source-over",n[t.BLEND_MODES.ADD]="lighter",n[t.BLEND_MODES.MULTIPLY]="source-over",n[t.BLEND_MODES.SCREEN]="source-over",n[t.BLEND_MODES.OVERLAY]="source-over",n[t.BLEND_MODES.DARKEN]="source-over",n[t.BLEND_MODES.LIGHTEN]="source-over",n[t.BLEND_MODES.COLOR_DODGE]="source-over",n[t.BLEND_MODES.COLOR_BURN]="source-over",n[t.BLEND_MODES.HARD_LIGHT]="source-over",n[t.BLEND_MODES.SOFT_LIGHT]="source-over",n[t.BLEND_MODES.DIFFERENCE]="source-over",n[t.BLEND_MODES.EXCLUSION]="source-over",n[t.BLEND_MODES.HUE]="source-over",n[t.BLEND_MODES.SATURATION]="source-over",n[t.BLEND_MODES.COLOR]="source-over",n[t.BLEND_MODES.LUMINOSITY]="source-over"),n[t.BLEND_MODES.NORMAL_NPM]=n[t.BLEND_MODES.NORMAL],n[t.BLEND_MODES.ADD_NPM]=n[t.BLEND_MODES.ADD],n[t.BLEND_MODES.SCREEN_NPM]=n[t.BLEND_MODES.SCREEN],n[t.BLEND_MODES.SRC_IN]="source-in",n[t.BLEND_MODES.SRC_OUT]="source-out",n[t.BLEND_MODES.SRC_ATOP]="source-atop",n[t.BLEND_MODES.DST_OVER]="destination-over",n[t.BLEND_MODES.DST_IN]="destination-in",n[t.BLEND_MODES.DST_OUT]="destination-out",n[t.BLEND_MODES.DST_ATOP]="destination-atop",n[t.BLEND_MODES.XOR]="xor",n[t.BLEND_MODES.SUBTRACT]="source-over",n),o._activeBlendMode=null,o._outerBlend=!1,o._projTransform=null,o.renderingToScreen=!1,Bt("Canvas"),o.resize(o.options.width,o.options.height),o}return function(t,e){function r(){this.constructor=t}ah(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(r,e),r.prototype.render=function(e,r,i,n,o){if(this.view){this.renderingToScreen=!r,this.emit("prerender");var s=this.resolution;r?((r=r.castToBaseTexture())._canvasRenderTarget||(r._canvasRenderTarget=new ue(r.width,r.height,r.resolution),r.resource=new Ir.CanvasResource(r._canvasRenderTarget.canvas),r.valid=!0),this.context=r._canvasRenderTarget.context,this.resolution=r._canvasRenderTarget.resolution):this.context=this.rootContext;var a=this.context;if(this._projTransform=n||null,r||(this._lastObjectRendered=e),!o){var h=e.enableTempParent();e.updateTransform(),e.disableTempParent(h)}if(a.save(),a.setTransform(1,0,0,1,0,0),a.globalAlpha=1,this._activeBlendMode=t.BLEND_MODES.NORMAL,this._outerBlend=!1,a.globalCompositeOperation=this.blendModes[t.BLEND_MODES.NORMAL],void 0!==i?i:this.clearBeforeRender)if(this.renderingToScreen)this.transparent?a.clearRect(0,0,this.width,this.height):(a.fillStyle=this._backgroundColorString,a.fillRect(0,0,this.width,this.height));else{(r=r)._canvasRenderTarget.clear();var u=r.clearColor;u[3]>0&&(a.fillStyle=Xt(Ht(u)),a.fillRect(0,0,r.realWidth,r.realHeight))}var l=this.context;this.context=a,e.renderCanvas(this),this.context=l,a.restore(),this.resolution=s,this._projTransform=null,this.emit("postrender")}},r.prototype.setContextTransform=function(t,e,r){var i=t,n=this._projTransform,o=this.resolution;r=r||o,n&&((i=ch).copyFrom(t),i.prepend(n)),e?this.context.setTransform(i.a*r,i.b*r,i.c*r,i.d*r,i.tx*o|0,i.ty*o|0):this.context.setTransform(i.a*r,i.b*r,i.c*r,i.d*r,i.tx*o,i.ty*o)},r.prototype.clear=function(t){var e=this.context;t=t||this._backgroundColorString,!this.transparent&&t?(e.fillStyle=t,e.fillRect(0,0,this.width,this.height)):e.clearRect(0,0,this.width,this.height)},r.prototype.setBlendMode=function(e,r){var i=e===t.BLEND_MODES.SRC_IN||e===t.BLEND_MODES.SRC_OUT||e===t.BLEND_MODES.DST_IN||e===t.BLEND_MODES.DST_ATOP;!r&&i&&(e=t.BLEND_MODES.NORMAL),this._activeBlendMode!==e&&(this._activeBlendMode=e,this._outerBlend=i,this.context.globalCompositeOperation=this.blendModes[e])},r.prototype.destroy=function(t){e.prototype.destroy.call(this,t),this.context=null,this.refresh=!0,this.maskManager.destroy(),this.maskManager=null,this.smoothProperty=null},r.prototype.resize=function(r,i){e.prototype.resize.call(this,r,i),this.smoothProperty&&(this.rootContext[this.smoothProperty]=D.SCALE_MODE===t.SCALE_MODES.LINEAR)},r.prototype.invalidateBlendMode=function(){this._activeBlendMode=this.blendModes.indexOf(this.context.globalCompositeOperation)},r.registerPlugin=function(t,e){r.__plugins=r.__plugins||{},r.__plugins[t]=e},r}(fn),ph={canvas:null,getTintedCanvas:function(t,e){var r=t.texture,i="#"+("00000"+(0|(e=ph.roundColor(e))).toString(16)).substr(-6);r.tintCache=r.tintCache||{};var n,o=r.tintCache[i];if(o){if(o.tintId===r._updateID)return r.tintCache[i];n=r.tintCache[i]}else n=document.createElement("canvas");if(ph.tintMethod(r,e,n),n.tintId=r._updateID,ph.convertTintToImage){var s=new Image;s.src=n.toDataURL(),r.tintCache[i]=s}else r.tintCache[i]=n;return n},getTintedPattern:function(t,e){var r="#"+("00000"+(0|(e=ph.roundColor(e))).toString(16)).substr(-6);t.patternCache=t.patternCache||{};var i=t.patternCache[r];return i&&i.tintId===t._updateID?i:(ph.canvas||(ph.canvas=document.createElement("canvas")),ph.tintMethod(t,e,ph.canvas),(i=ph.canvas.getContext("2d").createPattern(ph.canvas,"repeat")).tintId=t._updateID,t.patternCache[r]=i,i)},tintWithMultiply:function(t,e,r){var i=r.getContext("2d"),n=t._frame.clone(),o=t.baseTexture.resolution;n.x*=o,n.y*=o,n.width*=o,n.height*=o,r.width=Math.ceil(n.width),r.height=Math.ceil(n.height),i.save(),i.fillStyle="#"+("00000"+(0|e).toString(16)).substr(-6),i.fillRect(0,0,n.width,n.height),i.globalCompositeOperation="multiply";var s=t.baseTexture.getDrawableSource();i.drawImage(s,n.x,n.y,n.width,n.height,0,0,n.width,n.height),i.globalCompositeOperation="destination-atop",i.drawImage(s,n.x,n.y,n.width,n.height,0,0,n.width,n.height),i.restore()},tintWithOverlay:function(t,e,r){var i=r.getContext("2d"),n=t._frame.clone(),o=t.baseTexture.resolution;n.x*=o,n.y*=o,n.width*=o,n.height*=o,r.width=Math.ceil(n.width),r.height=Math.ceil(n.height),i.save(),i.globalCompositeOperation="copy",i.fillStyle="#"+("00000"+(0|e).toString(16)).substr(-6),i.fillRect(0,0,n.width,n.height),i.globalCompositeOperation="destination-atop",i.drawImage(t.baseTexture.getDrawableSource(),n.x,n.y,n.width,n.height,0,0,n.width,n.height),i.restore()},tintWithPerPixel:function(t,e,r){var i=r.getContext("2d"),n=t._frame.clone(),o=t.baseTexture.resolution;n.x*=o,n.y*=o,n.width*=o,n.height*=o,r.width=Math.ceil(n.width),r.height=Math.ceil(n.height),i.save(),i.globalCompositeOperation="copy",i.drawImage(t.baseTexture.getDrawableSource(),n.x,n.y,n.width,n.height,0,0,n.width,n.height),i.restore();for(var s=kt(e),a=s[0],h=s[1],u=s[2],l=i.getImageData(0,0,n.width,n.height),c=l.data,d=0;d<c.length;d+=4)c[d+0]*=a,c[d+1]*=h,c[d+2]*=u;i.putImageData(l,0,0)},roundColor:function(t){var e=ph.cacheStepsPerColorChannel,r=kt(t);return r[0]=Math.min(255,r[0]/e*e),r[1]=Math.min(255,r[1]/e*e),r[2]=Math.min(255,r[2]/e*e),Ht(r)},cacheStepsPerColorChannel:8,convertTintToImage:!1,canUseMultiply:lh(),tintMethod:null};ph.tintMethod=ph.canUseMultiply?ph.tintWithMultiply:ph.tintWithPerPixel;var fh=mn.create;mn.create=function(t){if(!(t&&t.forceCanvas))try{return fh(t)}catch(t){}return new dh(t)},gr.prototype.getDrawableSource=function(){var t=this.resource;return t?t.bitmap||t.source:null},Dr.prototype._canvasRenderTarget=null,Lr.prototype.patternCache=null,Lr.prototype.tintCache=null;var mh=function(){function e(t){this.renderer=t}return e.prototype.render=function(e){var r=this.renderer,i=e.worldTransform;r.context.globalAlpha=e.worldAlpha,r.setBlendMode(e.blendMode),r.setContextTransform(i,e.roundPixels),e.drawMode!==t.DRAW_MODES.TRIANGLES?this._renderTriangleMesh(e):this._renderTriangles(e)},e.prototype._renderTriangleMesh=function(t){for(var e=t.geometry.buffers[0].data.length,r=0;r<e-2;r++){var i=2*r;this._renderDrawTriangle(t,i,i+2,i+4)}},e.prototype._renderTriangles=function(t){for(var e=t.geometry.getIndex().data,r=e.length,i=0;i<r;i+=3){var n=2*e[i],o=2*e[i+1],s=2*e[i+2];this._renderDrawTriangle(t,n,o,s)}},e.prototype._renderDrawTriangle=function(t,e,r,i){var n=this.renderer.context,o=t.geometry.buffers[0].data,s=t.uvs,a=t.texture;if(a.valid){var h=16777215!==t.tint,u=a.baseTexture,l=u.width,c=u.height;h&&t._cachedTint!==t.tint&&(t._cachedTint=t.tint,t._tintedCanvas=ph.getTintedCanvas(t,t.tint));var d=h?t._tintedCanvas:u.getDrawableSource(),p=s[e]*u.width,f=s[r]*u.width,m=s[i]*u.width,v=s[e+1]*u.height,g=s[r+1]*u.height,y=s[i+1]*u.height,_=o[e],x=o[r],b=o[i],E=o[e+1],T=o[r+1],S=o[i+1],w=t.canvasPadding/this.renderer.resolution;if(w>0){var P=w/Math.abs(t.worldTransform.a),I=w/Math.abs(t.worldTransform.d),A=(_+x+b)/3,O=(E+T+S)/3,M=_-A,D=E-O,C=Math.sqrt(M*M+D*D);_=A+M/C*(C+P),E=O+D/C*(C+I),D=T-O,x=A+(M=x-A)/(C=Math.sqrt(M*M+D*D))*(C+P),T=O+D/C*(C+I),D=S-O,b=A+(M=b-A)/(C=Math.sqrt(M*M+D*D))*(C+P),S=O+D/C*(C+I)}n.save(),n.beginPath(),n.moveTo(_,E),n.lineTo(x,T),n.lineTo(b,S),n.closePath(),n.clip();var R=p*g+v*m+f*y-g*m-v*f-p*y,L=_*g+v*b+x*y-g*b-v*x-_*y,N=p*x+_*m+f*b-x*m-_*f-p*b,F=p*g*b+v*x*m+_*f*y-_*g*m-v*f*b-p*x*y,B=E*g+v*S+T*y-g*S-v*T-E*y,U=p*T+E*m+f*S-T*m-E*f-p*S,k=p*g*S+v*T*m+E*f*y-E*g*m-v*f*S-p*T*y;n.transform(L/R,B/R,N/R,U/R,F/R,k/R),n.drawImage(d,0,0,l*u.resolution,c*u.resolution,0,0,l,c),n.restore(),this.renderer.invalidateBlendMode()}},e.prototype.renderMeshFlat=function(t){var e=this.renderer.context,r=t.geometry.getBuffer("aVertexPosition").data,i=r.length/2;e.beginPath();for(var n=1;n<i-2;++n){var o=2*n,s=r[o],a=r[o+1],h=r[o+2],u=r[o+3],l=r[o+4],c=r[o+5];e.moveTo(s,a),e.lineTo(h,u),e.lineTo(l,c)}e.fillStyle="#FF0000",e.fill(),e.closePath()},e.prototype.destroy=function(){this.renderer=null},e}();D.MESH_CANVAS_PADDING=0,js.prototype._renderCanvas=function(t,e){t.plugins.mesh.render(e)},th.prototype._cachedTint=16777215,th.prototype._tintedCanvas=null,th.prototype._canvasUvs=null,th.prototype._renderCanvas=function(t){var e=t.context,r=this.worldTransform,i=16777215!==this.tint,n=this.texture;if(n.valid){i&&this._cachedTint!==this.tint&&(this._cachedTint=this.tint,this._tintedCanvas=ph.getTintedCanvas(this,this.tint));var o=i?this._tintedCanvas:n.baseTexture.getDrawableSource();this._canvasUvs||(this._canvasUvs=[0,0,0,0,0,0,0,0]);var s=this.vertices,a=this._canvasUvs,h=i?0:n.frame.x,u=i?0:n.frame.y,l=h+n.frame.width,c=u+n.frame.height;a[0]=h,a[1]=h+this._leftWidth,a[2]=l-this._rightWidth,a[3]=l,a[4]=u,a[5]=u+this._topHeight,a[6]=c-this._bottomHeight,a[7]=c;for(var d=0;d<8;d++)a[d]*=n.baseTexture.resolution;e.globalAlpha=this.worldAlpha,t.setBlendMode(this.blendMode),t.setContextTransform(r,this.roundPixels);for(var p=0;p<3;p++)for(var f=0;f<3;f++){var m=2*f+8*p,v=Math.max(1,a[f+1]-a[f]),g=Math.max(1,a[p+5]-a[p+4]),y=Math.max(1,s[m+10]-s[m]),_=Math.max(1,s[m+11]-s[m+1]);e.drawImage(o,a[f],a[p+4],v,g,s[m],s[m+1],y,_)}}};var vh=!1;Us.prototype._cachedTint=16777215,Us.prototype._tintedCanvas=null,Us.prototype._renderCanvas=function(t){this.shader.uvMatrix&&(this.shader.uvMatrix.update(),this.calculateUvs()),this.material._renderCanvas?this.material._renderCanvas(t,this):vh||(vh=!0,window.console&&console.warn("Mesh with custom shaders are not supported in CanvasRenderer."))},Us.prototype._canvasPadding=null,Object.defineProperty(Us.prototype,"canvasPadding",{get:function(){return null!==this._canvasPadding?this._canvasPadding:D.MESH_CANVAS_PADDING},set:function(t){this._canvasPadding=t}}),Qa.prototype._renderCanvas=function(t){this.autoUpdate&&this.geometry.getBuffer("aVertexPosition").update(),this.shader.update&&this.shader.update(),this.calculateUvs(),this.material._renderCanvas(t,this)},Za.prototype._renderCanvas=function(t){(this.autoUpdate||this.geometry._width!==this.shader.texture.height)&&(this.geometry._width=this.shader.texture.height,this.geometry.update()),this.shader.update&&this.shader.update(),this.calculateUvs(),this.material._renderCanvas(t,this)};var gh,yh=function(){function e(t){this.renderer=t,this._svgMatrix=null,this._tempMatrix=new Ie}return e.prototype._calcCanvasStyle=function(t,e){var r;return t.texture&&t.texture.baseTexture!==Lr.WHITE.baseTexture?t.texture.valid?(r=ph.getTintedPattern(t.texture,e),this.setPatternTransform(r,t.matrix||Ie.IDENTITY)):r="#808080":r="#"+("00000"+(0|e).toString(16)).substr(-6),r},e.prototype.render=function(e){var r=this.renderer,i=r.context,n=e.worldAlpha,o=e.transform.worldTransform;r.setContextTransform(o),r.setBlendMode(e.blendMode);for(var s,a,h=e.geometry.graphicsData,u=(e.tint>>16&255)/255,l=(e.tint>>8&255)/255,c=(255&e.tint)/255,d=0;d<h.length;d++){var p=h[d],f=p.shape,m=p.fillStyle,v=p.lineStyle,g=0|p.fillStyle.color,y=0|p.lineStyle.color;if(p.matrix&&r.setContextTransform(o.copyTo(this._tempMatrix).append(p.matrix)),m.visible){var _=((g>>16&255)/255*u*255<<16)+((g>>8&255)/255*l*255<<8)+(255&g)/255*c*255;s=this._calcCanvasStyle(m,_)}if(v.visible){var x=((y>>16&255)/255*u*255<<16)+((y>>8&255)/255*l*255<<8)+(255&y)/255*c*255;a=this._calcCanvasStyle(v,x)}if(i.lineWidth=v.width,i.lineCap=v.cap,i.lineJoin=v.join,i.miterLimit=v.miterLimit,p.type===t.SHAPES.POLY){i.beginPath();var b=(O=f).points,E=p.holes,T=void 0,S=void 0,w=void 0,P=void 0;i.moveTo(b[0],b[1]);for(var I=2;I<b.length;I+=2)i.lineTo(b[I],b[I+1]);if(O.closeStroke&&i.closePath(),E.length>0){T=0,w=b[0],P=b[1];for(I=2;I+2<b.length;I+=2)T+=(b[I]-w)*(b[I+3]-P)-(b[I+2]-w)*(b[I+1]-P);for(var A=0;A<E.length;A++)if(b=E[A].shape.points){S=0,w=b[0],P=b[1];for(I=2;I+2<b.length;I+=2)S+=(b[I]-w)*(b[I+3]-P)-(b[I+2]-w)*(b[I+1]-P);if(S*T<0){i.moveTo(b[0],b[1]);for(I=2;I<b.length;I+=2)i.lineTo(b[I],b[I+1])}else{i.moveTo(b[b.length-2],b[b.length-1]);for(I=b.length-4;I>=0;I-=2)i.lineTo(b[I],b[I+1])}E[A].shape.closeStroke&&i.closePath()}}m.visible&&(i.globalAlpha=m.alpha*n,i.fillStyle=s,i.fill()),v.visible&&(i.globalAlpha=v.alpha*n,i.strokeStyle=a,i.stroke())}else if(p.type===t.SHAPES.RECT){var O=f;m.visible&&(i.globalAlpha=m.alpha*n,i.fillStyle=s,i.fillRect(O.x,O.y,O.width,O.height)),v.visible&&(i.globalAlpha=v.alpha*n,i.strokeStyle=a,i.strokeRect(O.x,O.y,O.width,O.height))}else if(p.type===t.SHAPES.CIRC){O=f;i.beginPath(),i.arc(O.x,O.y,O.radius,0,2*Math.PI),i.closePath(),m.visible&&(i.globalAlpha=m.alpha*n,i.fillStyle=s,i.fill()),v.visible&&(i.globalAlpha=v.alpha*n,i.strokeStyle=a,i.stroke())}else if(p.type===t.SHAPES.ELIP){var M=2*(O=f).width,D=2*O.height,C=O.x-M/2,R=O.y-D/2;i.beginPath();var L=M/2*.5522848,N=D/2*.5522848,F=C+M,B=R+D,U=C+M/2,k=R+D/2;i.moveTo(C,k),i.bezierCurveTo(C,k-N,U-L,R,U,R),i.bezierCurveTo(U+L,R,F,k-N,F,k),i.bezierCurveTo(F,k+N,U+L,B,U,B),i.bezierCurveTo(U-L,B,C,k+N,C,k),i.closePath(),m.visible&&(i.globalAlpha=m.alpha*n,i.fillStyle=s,i.fill()),v.visible&&(i.globalAlpha=v.alpha*n,i.strokeStyle=a,i.stroke())}else if(p.type===t.SHAPES.RREC){var X=(O=f).x,j=O.y,H=O.width,G=O.height,Y=O.radius,z=Math.min(H,G)/2|0;Y=Y>z?z:Y,i.beginPath(),i.moveTo(X,j+Y),i.lineTo(X,j+G-Y),i.quadraticCurveTo(X,j+G,X+Y,j+G),i.lineTo(X+H-Y,j+G),i.quadraticCurveTo(X+H,j+G,X+H,j+G-Y),i.lineTo(X+H,j+Y),i.quadraticCurveTo(X+H,j,X+H-Y,j),i.lineTo(X+Y,j),i.quadraticCurveTo(X,j,X,j+Y),i.closePath(),m.visible&&(i.globalAlpha=m.alpha*n,i.fillStyle=s,i.fill()),v.visible&&(i.globalAlpha=v.alpha*n,i.strokeStyle=a,i.stroke())}}},e.prototype.setPatternTransform=function(t,e){if(!1!==this._svgMatrix){if(!this._svgMatrix){var r=document.createElementNS("http://www.w3.org/2000/svg","svg");if(r&&r.createSVGMatrix&&(this._svgMatrix=r.createSVGMatrix()),!this._svgMatrix||!t.setTransform)return void(this._svgMatrix=!1)}this._svgMatrix.a=e.a,this._svgMatrix.b=e.b,this._svgMatrix.c=e.c,this._svgMatrix.d=e.d,this._svgMatrix.e=e.tx,this._svgMatrix.f=e.ty,t.setTransform(this._svgMatrix.inverse())}},e.prototype.destroy=function(){this.renderer=null,this._svgMatrix=null,this._tempMatrix=null},e}(),_h=new Ie;Yo.prototype.generateCanvasTexture=function(t,e){void 0===e&&(e=1);var r=this.getLocalBounds(),i=Fr.create({width:r.width,height:r.height,scaleMode:t,resolution:e});gh||(gh=new dh),this.transform.updateLocalTransform(),this.transform.localTransform.copyTo(_h),_h.invert(),_h.tx-=r.x,_h.ty-=r.y,gh.render(this,i,!0,_h);var n=Lr.from(i.baseTexture._canvasRenderTarget.canvas,{scaleMode:t});return n.baseTexture.setResolution(e),n},Yo.prototype.cachedGraphicsData=[],Yo.prototype._renderCanvas=function(t){!0!==this.isMask&&(this.finishPoly(),t.plugins.graphics.render(this))};var xh=new Ie,bh=function(){function e(t){this.renderer=t}return e.prototype.render=function(e){var r=e._texture,i=this.renderer,n=i.context,o=r._frame.width,s=r._frame.height,a=e.transform.worldTransform,h=0,u=0,l=r.baseTexture.getDrawableSource();if(!(r.orig.width<=0||r.orig.height<=0)&&r.valid&&l&&r.valid){i.setBlendMode(e.blendMode,!0),i.context.globalAlpha=e.worldAlpha;var c=r.baseTexture.scaleMode===t.SCALE_MODES.LINEAR;i.smoothProperty&&i.context[i.smoothProperty]!==c&&(n[i.smoothProperty]=c),r.trim?(h=r.trim.width/2+r.trim.x-e.anchor.x*r.orig.width,u=r.trim.height/2+r.trim.y-e.anchor.y*r.orig.height):(h=(.5-e.anchor.x)*r.orig.width,u=(.5-e.anchor.y)*r.orig.height),r.rotate&&(a.copyTo(xh),a=xh,Ne.matrixAppendRotationInv(a,r.rotate,h,u),h=0,u=0),h-=o/2,u-=s/2,i.setContextTransform(a,e.roundPixels,1),e.roundPixels&&(h|=0,u|=0);var d=r.baseTexture.resolution,p=i._outerBlend;p&&(n.save(),n.beginPath(),n.rect(h*i.resolution,u*i.resolution,o*i.resolution,s*i.resolution),n.clip()),16777215!==e.tint?(e._cachedTint===e.tint&&e._tintedCanvas.tintId===e._texture._updateID||(e._cachedTint=e.tint,e._tintedCanvas=ph.getTintedCanvas(e,e.tint)),n.drawImage(e._tintedCanvas,0,0,Math.floor(o*d),Math.floor(s*d),Math.floor(h*i.resolution),Math.floor(u*i.resolution),Math.floor(o*i.resolution),Math.floor(s*i.resolution))):n.drawImage(l,r._frame.x*d,r._frame.y*d,Math.floor(o*d),Math.floor(s*d),Math.floor(h*i.resolution),Math.floor(u*i.resolution),Math.floor(o*i.resolution),Math.floor(s*i.resolution)),p&&n.restore(),i.setBlendMode(t.BLEND_MODES.NORMAL)}},e.prototype.destroy=function(){this.renderer=null},e}();Ko.prototype._tintedCanvas=null,Ko.prototype._renderCanvas=function(t){t.plugins.sprite.render(this)};var Eh=new xe,Th=function(){function t(t){this.renderer=t}return t.prototype.image=function(t,e,r){var i=new Image;return i.src=this.base64(t,e,r),i},t.prototype.base64=function(t,e,r){return this.canvas(t).toDataURL(e,r)},t.prototype.canvas=function(t){var e,r,i,n,o=this.renderer;t&&(n=t instanceof Fr?t:o.generateTexture(t)),n?(e=n.baseTexture._canvasRenderTarget.context,r=n.baseTexture._canvasRenderTarget.resolution,i=n.frame):(e=o.rootContext,r=o.resolution,(i=Eh).width=this.renderer.width,i.height=this.renderer.height);var s=Math.floor(i.width*r+1e-4),a=Math.floor(i.height*r+1e-4),h=new ue(s,a,1),u=e.getImageData(i.x*r,i.y*r,s,a);return h.context.putImageData(u,0,0),h.canvas},t.prototype.pixels=function(t){var e,r,i,n,o=this.renderer;return t&&(n=t instanceof Fr?t:o.generateTexture(t)),n?(e=n.baseTexture._canvasRenderTarget.context,r=n.baseTexture._canvasRenderTarget.resolution,i=n.frame):(e=o.rootContext,(i=Eh).width=o.width,i.height=o.height),e.getImageData(0,0,i.width*r,i.height*r).data},t.prototype.destroy=function(){this.renderer=null},t}();Object.defineProperty(dh.prototype,"extract",{get:function(){return oe("v5.3.0","CanvasRenderer#extract is deprecated, use CanvasRenderer#plugins.extract"),this.plugins.extract}});var Sh=function(t,e){return(Sh=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};var wh=16;function Ph(t,e){var r=t;if(e instanceof gr){var i=e.source,n=0===i.width?r.canvas.width:Math.min(r.canvas.width,i.width),o=0===i.height?r.canvas.height:Math.min(r.canvas.height,i.height);return r.ctx.drawImage(i,0,0,n,o,0,0,r.canvas.width,r.canvas.height),!0}return!1}var Ih=function(t){function e(e){var r=t.call(this,e)||this;return r.uploadHookHelper=r,r.canvas=document.createElement("canvas"),r.canvas.width=wh,r.canvas.height=wh,r.ctx=r.canvas.getContext("2d"),r.registerUploadHook(Ph),r}return function(t,e){function r(){this.constructor=t}Sh(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(e,t),e.prototype.destroy=function(){t.prototype.destroy.call(this),this.ctx=null,this.canvas=null},e}(vs);return Is.prototype._renderCanvas=function(t){var e=this._texture;if(e.baseTexture.valid){var r=t.context,i=this.worldTransform,n=e.baseTexture,o=n.getDrawableSource(),s=n.resolution,a=this.tilePosition.x/this.tileScale.x%e._frame.width*s,h=this.tilePosition.y/this.tileScale.y%e._frame.height*s;if(this._textureID!==this._texture._updateID||this._cachedTint!==this.tint){this._textureID=this._texture._updateID;var u=new ue(e._frame.width,e._frame.height,s);16777215!==this.tint?(this._tintedCanvas=ph.getTintedCanvas(this,this.tint),u.context.drawImage(this._tintedCanvas,0,0)):u.context.drawImage(o,-e._frame.x*s,-e._frame.y*s),this._cachedTint=this.tint,this._canvasPattern=u.context.createPattern(u.canvas,"repeat")}r.globalAlpha=this.worldAlpha,t.setBlendMode(this.blendMode),t.setContextTransform(i),r.fillStyle=this._canvasPattern,r.scale(this.tileScale.x/s,this.tileScale.y/s);var l=this.anchor.x*-this._width,c=this.anchor.y*-this._height;this.uvRespectAnchor?(r.translate(a,h),r.fillRect(-a+l,-h+c,this._width/this.tileScale.x*s,this._height/this.tileScale.y*s)):(r.translate(a+l,h+c),r.fillRect(-a,-h,this._width/this.tileScale.x*s,this._height/this.tileScale.y*s))}},ho.prototype.renderCanvas=function(t){if(this.visible&&!(this.worldAlpha<=0)&&this.children.length&&this.renderable){var e=t.context,r=this.worldTransform,i=!0,n=0,o=0,s=0,a=0;t.setBlendMode(this.blendMode),e.globalAlpha=this.worldAlpha,this.displayObjectUpdateTransform();for(var h=0;h<this.children.length;++h){var u=this.children[h];if(u.visible&&u._texture.valid){var l=u._texture.frame;if(e.globalAlpha=this.worldAlpha*u.alpha,u.rotation%(2*Math.PI)==0)i&&(t.setContextTransform(r,!1,1),i=!1),n=u.anchor.x*(-l.width*u.scale.x)+u.position.x+.5,o=u.anchor.y*(-l.height*u.scale.y)+u.position.y+.5,s=l.width*u.scale.x,a=l.height*u.scale.y;else{i||(i=!0),u.displayObjectUpdateTransform();var c=u.worldTransform;t.setContextTransform(c,this.roundPixels,1),n=u.anchor.x*-l.width+.5,o=u.anchor.y*-l.height+.5,s=l.width,a=l.height}var d=u._texture.baseTexture.resolution;e.drawImage(u._texture.baseTexture.getDrawableSource(),l.x*d,l.y*d,l.width*d,l.height*d,n*t.resolution,o*t.resolution,s*t.resolution,a*t.resolution)}}}},Ge.prototype._renderCanvas=function(t){},Ge.prototype.renderCanvas=function(t){if(this.visible&&!(this.worldAlpha<=0)&&this.renderable){this._mask&&t.maskManager.pushMask(this._mask),this._renderCanvas(t);for(var e=0,r=this.children.length;e<r;++e)this.children[e].renderCanvas(t);this._mask&&t.maskManager.popMask(t)}},Xe.prototype.renderCanvas=function(t){},ss.prototype._renderCanvas=function(t){this._autoResolution&&this._resolution!==t.resolution&&(this._resolution=t.resolution,this.dirty=!0),this.updateText(!0),Ko.prototype._renderCanvas.call(this,t)},dh.registerPlugin("accessibility",Ze),dh.registerPlugin("extract",Th),dh.registerPlugin("graphics",yh),dh.registerPlugin("interaction",hr),dh.registerPlugin("mesh",mh),dh.registerPlugin("prepare",Ih),dh.registerPlugin("sprite",bh),t.AbstractBatchRenderer=En,t.AbstractRenderer=fn,t.AccessibilityManager=Ze,t.AnimatedSprite=rh,t.AppLoaderPlugin=io,t.Application=On,t.Attribute=Ur,t.BasePrepare=vs,t.BaseRenderTexture=Dr,t.BaseTexture=gr,t.BatchDrawCall=_n,t.BatchGeometry=Sn,t.BatchPluginFactory=In,t.BatchRenderer=An,t.BatchShaderGenerator=Tn,t.BatchTextureArray=xn,t.BitmapFont=Qs,t.BitmapFontData=Ys,t.BitmapFontLoader=ra,t.BitmapText=ea,t.Bounds=Be,t.Buffer=Xr,t.CanvasExtract=Th,t.CanvasGraphicsRenderer=yh,t.CanvasMeshRenderer=mh,t.CanvasPrepare=Ih,t.CanvasRenderer=dh,t.CanvasSpriteRenderer=bh,t.Circle=be,t.Container=Ge,t.CountLimiter=hs,t.DEG_TO_RAD=_e,t.DisplayObject=Xe,t.Ellipse=Ee,t.Extract=Cn,t.FillStyle=mo,t.Filter=Fi,t.FilterState=Jr,t.Framebuffer=Mr,t.GLFramebuffer=ii,t.GLProgram=Qi,t.GLTexture=ln,t.GRAPHICS_CURVES=fo,t.Geometry=Vr,t.Graphics=Yo,t.GraphicsData=Bo,t.GraphicsGeometry=Xo,t.IGLUniformData=Ji,t.InteractionData=tr,t.InteractionEvent=rr,t.InteractionManager=hr,t.InteractionTrackingData=ir,t.LineStyle=jo,t.Loader=ro,t.LoaderResource=$n,t.MaskData=ui,t.Matrix=Ie,t.Mesh=Us,t.MeshBatchUvs=Ns,t.MeshGeometry=Hs,t.MeshMaterial=js,t.NineSlicePlane=th,t.ObjectRenderer=$r,t.ObservablePoint=Pe,t.PI_2=ge,t.ParticleContainer=ho,t.ParticleRenderer=po,t.PlaneGeometry=qa,t.Point=we,t.Polygon=Te,t.Prepare=xs,t.Program=Ri,t.Quad=Wr,t.QuadUv=qr,t.RAD_TO_DEG=ye,t.Rectangle=xe,t.RenderTexture=Fr,t.RenderTexturePool=Br,t.Renderer=mn,t.RopeGeometry=Ka,t.RoundedRectangle=Se,t.Runner=ur,t.Shader=Li,t.SimpleMesh=Qa,t.SimplePlane=Ja,t.SimpleRope=Za,t.Sprite=Ko,t.SpriteMaskFilter=ji,t.Spritesheet=Es,t.SpritesheetLoader=Ts,t.State=Ni,t.System=Ar,t.TemporaryDisplayObject=je,t.Text=ss,t.TextMetrics=is,t.TextStyle=$o,t.Texture=Lr,t.TextureLoader=eo,t.TextureMatrix=Xi,t.TextureUvs=Cr,t.Ticker=Qe,t.TickerPlugin=$e,t.TilingSprite=Is,t.TilingSpriteRenderer=Cs,t.TimeLimiter=bs,t.Transform=Fe,t.UniformGroup=Zr,t.VERSION="5.3.8",t.ViewableBuffer=bn,t.accessibleTarget=Ye,t.autoDetectRenderer=vn,t.canvasUtils=ph,t.checkMaxIfStatementsInShader=Mi,t.defaultFilterVertex=yn,t.defaultVertex=gn,t.filters=sh,t.graphicsUtils=Fo,t.groupD8=Ne,t.interactiveTarget=or,t.isMobile=M,t.resources=Ir,t.settings=D,t.systems=dn,t.uniformParsers=Si,t.useDeprecated=function(){var t=this;Object.defineProperties(t,{SVG_SIZE:{get:function(){return oe(oh,"PIXI.utils.SVG_SIZE property has moved to PIXI.resources.SVGResource.SVG_SIZE"),t.SVGResource.SVG_SIZE}},TransformStatic:{get:function(){return oe(oh,"PIXI.TransformStatic class has been removed, use PIXI.Transform"),t.Transform}},TransformBase:{get:function(){return oe(oh,"PIXI.TransformBase class has been removed, use PIXI.Transform"),t.Transform}},TRANSFORM_MODE:{get:function(){return oe(oh,"PIXI.TRANSFORM_MODE property has been removed"),{STATIC:0,DYNAMIC:1}}},WebGLRenderer:{get:function(){return oe(oh,"PIXI.WebGLRenderer class has moved to PIXI.Renderer"),t.Renderer}},CanvasRenderTarget:{get:function(){return oe(oh,"PIXI.CanvasRenderTarget class has moved to PIXI.utils.CanvasRenderTarget"),t.utils.CanvasRenderTarget}},loader:{get:function(){return oe(oh,"PIXI.loader instance has moved to PIXI.Loader.shared"),t.Loader.shared}},FilterManager:{get:function(){return oe(oh,"PIXI.FilterManager class has moved to PIXI.systems.FilterSystem"),t.systems.FilterSystem}},CanvasTinter:{get:function(){return oe("5.2.0","PIXI.CanvasTinter namespace has moved to PIXI.canvasUtils"),t.canvasUtils}},GroupD8:{get:function(){return oe("5.2.0","PIXI.GroupD8 namespace has moved to PIXI.groupD8"),t.groupD8}}}),t.accessibility={},Object.defineProperties(t.accessibility,{AccessibilityManager:{get:function(){return oe("5.3.0","PIXI.accessibility.AccessibilityManager moved to PIXI.AccessibilityManager"),t.AccessibilityManager}}}),t.interaction={},Object.defineProperties(t.interaction,{InteractionManager:{get:function(){return oe("5.3.0","PIXI.interaction.InteractionManager moved to PIXI.InteractionManager"),t.InteractionManager}},InteractionData:{get:function(){return oe("5.3.0","PIXI.interaction.InteractionData moved to PIXI.InteractionData"),t.InteractionData}},InteractionEvent:{get:function(){return oe("5.3.0","PIXI.interaction.InteractionEvent moved to PIXI.InteractionEvent"),t.InteractionEvent}}}),t.prepare={},Object.defineProperties(t.prepare,{BasePrepare:{get:function(){return oe("5.2.1","PIXI.prepare.BasePrepare moved to PIXI.BasePrepare"),t.BasePrepare}},Prepare:{get:function(){return oe("5.2.1","PIXI.prepare.Prepare moved to PIXI.Prepare"),t.Prepare}},CanvasPrepare:{get:function(){return oe("5.2.1","PIXI.prepare.CanvasPrepare moved to PIXI.CanvasPrepare"),t.CanvasPrepare}}}),t.extract={},Object.defineProperties(t.extract,{Extract:{get:function(){return oe("5.2.1","PIXI.extract.Extract moved to PIXI.Extract"),t.Extract}},CanvasExtract:{get:function(){return oe("5.2.1","PIXI.extract.CanvasExtract moved to PIXI.CanvasExtract"),t.CanvasExtract}}}),t.extras={},Object.defineProperties(t.extras,{TilingSprite:{get:function(){return oe(oh,"PIXI.extras.TilingSprite class has moved to PIXI.TilingSprite"),t.TilingSprite}},TilingSpriteRenderer:{get:function(){return oe(oh,"PIXI.extras.TilingSpriteRenderer class has moved to PIXI.TilingSpriteRenderer"),t.TilingSpriteRenderer}},AnimatedSprite:{get:function(){return oe(oh,"PIXI.extras.AnimatedSprite class has moved to PIXI.AnimatedSprite"),t.AnimatedSprite}},BitmapText:{get:function(){return oe(oh,"PIXI.extras.BitmapText class has moved to PIXI.BitmapText"),t.BitmapText}}}),t.TilingSprite.fromFrame=function(e,r,i){return oe("5.3.0","TilingSprite.fromFrame is deprecated, use TilingSprite.from"),t.TilingSprite.from(e,{width:r,height:i})},t.TilingSprite.fromImage=function(e,r,i,n){return void 0===n&&(n={}),oe("5.3.0","TilingSprite.fromImage is deprecated, use TilingSprite.from"),n&&"object"!=typeof n&&(n={scaleMode:arguments[4],resourceOptions:{crossorigin:arguments[3]}}),n.width=r,n.height=i,t.TilingSprite.from(e,n)},Object.defineProperties(t.utils,{getSvgSize:{get:function(){return oe(oh,"PIXI.utils.getSvgSize function has moved to PIXI.resources.SVGResource.getSize"),t.resources.SVGResource.getSize}}}),t.mesh={},Object.defineProperties(t.mesh,{Mesh:{get:function(){return oe(oh,"PIXI.mesh.Mesh class has moved to PIXI.SimpleMesh"),t.SimpleMesh}},NineSlicePlane:{get:function(){return oe(oh,"PIXI.mesh.NineSlicePlane class has moved to PIXI.NineSlicePlane"),t.NineSlicePlane}},Plane:{get:function(){return oe(oh,"PIXI.mesh.Plane class has moved to PIXI.SimplePlane"),t.SimplePlane}},Rope:{get:function(){return oe(oh,"PIXI.mesh.Rope class has moved to PIXI.SimpleRope"),t.SimpleRope}},RawMesh:{get:function(){return oe(oh,"PIXI.mesh.RawMesh class has moved to PIXI.Mesh"),t.Mesh}},CanvasMeshRenderer:{get:function(){return oe(oh,"PIXI.mesh.CanvasMeshRenderer class has moved to PIXI.CanvasMeshRenderer"),t.CanvasMeshRenderer}},MeshRenderer:{get:function(){return oe(oh,"PIXI.mesh.MeshRenderer class has moved to PIXI.MeshRenderer"),t.MeshRenderer}}}),t.particles={},Object.defineProperties(t.particles,{ParticleContainer:{get:function(){return oe(oh,"PIXI.particles.ParticleContainer class has moved to PIXI.ParticleContainer"),t.ParticleContainer}},ParticleRenderer:{get:function(){return oe(oh,"PIXI.particles.ParticleRenderer class has moved to PIXI.ParticleRenderer"),t.ParticleRenderer}}}),t.ticker={},Object.defineProperties(t.ticker,{Ticker:{get:function(){return oe(oh,"PIXI.ticker.Ticker class has moved to PIXI.Ticker"),t.Ticker}},shared:{get:function(){return oe(oh,"PIXI.ticker.shared instance has moved to PIXI.Ticker.shared"),t.Ticker.shared}}}),t.loaders={},Object.defineProperties(t.loaders,{Loader:{get:function(){return oe(oh,"PIXI.loaders.Loader class has moved to PIXI.Loader"),t.Loader}},Resource:{get:function(){return oe(oh,"PIXI.loaders.Resource class has moved to PIXI.LoaderResource"),t.LoaderResource}},bitmapFontParser:{get:function(){return oe(oh,"PIXI.loaders.bitmapFontParser function has moved to PIXI.BitmapFontLoader.use"),t.BitmapFontLoader.use}},parseBitmapFontData:{get:function(){oe(oh,"PIXI.loaders.parseBitmapFontData function has removed")}},spritesheetParser:{get:function(){return oe(oh,"PIXI.loaders.spritesheetParser function has moved to PIXI.SpritesheetLoader.use"),t.SpritesheetLoader.use}},getResourcePath:{get:function(){return oe(oh,"PIXI.loaders.getResourcePath property has moved to PIXI.SpritesheetLoader.getResourcePath"),t.SpritesheetLoader.getResourcePath}}}),t.Loader.addPixiMiddleware=function(e){return oe(oh,"PIXI.loaders.Loader.addPixiMiddleware function is deprecated, use PIXI.loaders.Loader.registerPlugin"),t.loaders.Loader.registerPlugin({use:e()})};var e=function(t){return"on"+t.charAt(0).toUpperCase()+t.slice(1)};Object.assign(t.Loader.prototype,{on:function(t){var r=e(t);oe(oh,"PIXI.Loader#on is completely deprecated, use PIXI.Loader#"+r+".add")},once:function(t){var r=e(t);oe(oh,"PIXI.Loader#once is completely deprecated, use PIXI.Loader#"+r+".once")},off:function(t){var r=e(t);oe(oh,"PIXI.Loader#off is completely deprecated, use PIXI.Loader#"+r+".detach")}}),Object.defineProperty(t.extract,"WebGLExtract",{get:function(){return oe(oh,"PIXI.extract.WebGLExtract method has moved to PIXI.Extract"),t.Extract}}),Object.defineProperty(t.prepare,"WebGLPrepare",{get:function(){return oe(oh,"PIXI.prepare.WebGLPrepare class has moved to PIXI.Prepare"),t.Prepare}}),t.Container.prototype._renderWebGL=function(t){oe(oh,"PIXI.Container._renderWebGL method has moved to PIXI.Container._render"),this._render(t)},t.Container.prototype.renderWebGL=function(t){oe(oh,"PIXI.Container.renderWebGL method has moved to PIXI.Container.render"),this.render(t)},t.DisplayObject.prototype.renderWebGL=function(t){oe(oh,"PIXI.DisplayObject.renderWebGL method has moved to PIXI.DisplayObject.render"),this.render(t)},t.Container.prototype.renderAdvancedWebGL=function(t){oe(oh,"PIXI.Container.renderAdvancedWebGL method has moved to PIXI.Container.renderAdvanced"),this.renderAdvanced(t)},Object.defineProperties(t.settings,{TRANSFORM_MODE:{get:function(){return oe(oh,"PIXI.settings.TRANSFORM_MODE property has been removed"),0},set:function(){oe(oh,"PIXI.settings.TRANSFORM_MODE property has been removed")}}});var r=t.BaseTexture;r.prototype.loadSource=function(e){oe(oh,"PIXI.BaseTexture.loadSource method has been deprecated");var r=t.resources.autoDetectResource(e);r.internal=!0,this.setResource(r),this.update()};var i=!1;Object.defineProperties(r.prototype,{hasLoaded:{get:function(){return oe(oh,"PIXI.BaseTexture.hasLoaded property has been removed, use PIXI.BaseTexture.valid"),this.valid}},imageUrl:{get:function(){var t;return oe(oh,"PIXI.BaseTexture.imageUrl property has been removed, use PIXI.BaseTexture.resource.url"),null===(t=this.resource)||void 0===t?void 0:t.url},set:function(t){oe(oh,"PIXI.BaseTexture.imageUrl property has been removed, use PIXI.BaseTexture.resource.url"),this.resource&&(this.resource.url=t)}},source:{get:function(){return oe(oh,"PIXI.BaseTexture.source property has been moved, use `PIXI.BaseTexture.resource.source`"),this.resource.source},set:function(t){oe(oh,"PIXI.BaseTexture.source property has been moved, use `PIXI.BaseTexture.resource.source` if you want to set HTMLCanvasElement. Otherwise, create new BaseTexture."),this.resource&&(this.resource.source=t)}},premultiplyAlpha:{get:function(){return oe("5.2.0","PIXI.BaseTexture.premultiplyAlpha property has been changed to `alphaMode`, see `PIXI.ALPHA_MODES`"),0!==this.alphaMode},set:function(t){oe("5.2.0","PIXI.BaseTexture.premultiplyAlpha property has been changed to `alphaMode`, see `PIXI.ALPHA_MODES`"),this.alphaMode=Number(t)}},_id:{get:function(){return i||(oe("5.2.0","PIXI.BaseTexture._id batch local field has been changed to `_batchLocation`"),i=!0),this._batchLocation},set:function(t){this._batchLocation=t}}}),r.fromImage=function(t,e,i,n){oe(oh,"PIXI.BaseTexture.fromImage method has been replaced with PIXI.BaseTexture.from");var o={scale:n,crossorigin:e};return r.from(t,{scaleMode:i,resourceOptions:o})},r.fromCanvas=function(t,e){return oe(oh,"PIXI.BaseTexture.fromCanvas method has been replaced with PIXI.BaseTexture.from"),r.from(t,{scaleMode:e})},r.fromSVG=function(t,e,i,n){oe(oh,"PIXI.BaseTexture.fromSVG method has been replaced with PIXI.BaseTexture.from");var o={scale:n,crossorigin:e};return r.from(t,{scaleMode:i,resourceOptions:o})},Object.defineProperties(t.resources.ImageResource.prototype,{premultiplyAlpha:{get:function(){return oe("5.2.0","PIXI.resources.ImageResource.premultiplyAlpha property has been changed to `alphaMode`, see `PIXI.ALPHA_MODES`"),0!==this.alphaMode},set:function(t){oe("5.2.0","PIXI.resources.ImageResource.premultiplyAlpha property has been changed to `alphaMode`, see `PIXI.ALPHA_MODES`"),this.alphaMode=Number(t)}}}),t.Point.prototype.copy=function(t){return oe(oh,"PIXI.Point.copy method has been replaced with PIXI.Point.copyFrom"),this.copyFrom(t)},t.ObservablePoint.prototype.copy=function(t){return oe(oh,"PIXI.ObservablePoint.copy method has been replaced with PIXI.ObservablePoint.copyFrom"),this.copyFrom(t)},t.Rectangle.prototype.copy=function(t){return oe(oh,"PIXI.Rectangle.copy method has been replaced with PIXI.Rectangle.copyFrom"),this.copyFrom(t)},t.Matrix.prototype.copy=function(t){return oe(oh,"PIXI.Matrix.copy method has been replaced with PIXI.Matrix.copyTo"),this.copyTo(t)},t.systems.StateSystem.prototype.setState=function(t){return oe("v5.1.0","StateSystem.setState has been renamed to StateSystem.set"),this.set(t)},Object.assign(t.systems.FilterSystem.prototype,{getRenderTarget:function(t,e){return oe(oh,"PIXI.FilterManager.getRenderTarget method has been replaced with PIXI.systems.FilterSystem#getFilterTexture"),this.getFilterTexture(null,e)},returnRenderTarget:function(t){oe(oh,"PIXI.FilterManager.returnRenderTarget method has been replaced with PIXI.systems.FilterSystem.returnFilterTexture"),this.returnFilterTexture(t)},calculateScreenSpaceMatrix:function(t){oe(oh,"PIXI.systems.FilterSystem.calculateScreenSpaceMatrix method is removed, use `(vTextureCoord * inputSize.xy) + outputFrame.xy` instead");var e=t.identity(),r=this.activeState,i=r.sourceFrame,n=r.destinationFrame;return e.translate(i.x/n.width,i.y/n.height),e.scale(n.width,n.height),e},calculateNormalizedScreenSpaceMatrix:function(t){oe(oh,"PIXI.systems.FilterManager.calculateNormalizedScreenSpaceMatrix method is removed, use `((vTextureCoord * inputSize.xy) + outputFrame.xy) / outputFrame.zw` instead.");var e=this.activeState,r=e.sourceFrame,i=e.destinationFrame,n=t.identity();n.translate(r.x/i.width,r.y/i.height);var o=i.width/r.width,s=i.height/r.height;return n.scale(o,s),n}}),Object.defineProperties(t.RenderTexture.prototype,{sourceFrame:{get:function(){return oe(oh,"PIXI.RenderTexture.sourceFrame property has been removed"),this.filterFrame}},size:{get:function(){return oe(oh,"PIXI.RenderTexture.size property has been removed"),this._frame}}});var n=function(t){function e(e,r,i,n){return oe(oh,"PIXI.filters.BlurXFilter class is deprecated, use PIXI.filters.BlurFilterPass"),t.call(this,!0,e,r,i,n)||this}return nh(e,t),e}(t.filters.BlurFilterPass),o=function(t){function e(e,r,i,n){return oe(oh,"PIXI.filters.BlurYFilter class is deprecated, use PIXI.filters.BlurFilterPass"),t.call(this,!1,e,r,i,n)||this}return nh(e,t),e}(t.filters.BlurFilterPass);Object.assign(t.filters,{BlurXFilter:n,BlurYFilter:o});var s=t.Sprite,a=t.Texture,h=t.Graphics;function u(t,e,r,i){return oe(oh,"PIXI.Sprite."+t+" method is deprecated, use PIXI.Sprite.from"),s.from(e,{resourceOptions:{scale:i,crossorigin:r}})}function l(t,e,r,i){return oe(oh,"PIXI.Texture."+t+" method is deprecated, use PIXI.Texture.from"),a.from(e,{resourceOptions:{scale:i,crossorigin:r}})}h.prototype.generateCanvasTexture||(h.prototype.generateCanvasTexture=function(){oe(oh,'PIXI.Graphics.generateCanvasTexture method is only available in "pixi.js-legacy"')}),Object.defineProperty(h.prototype,"graphicsData",{get:function(){return oe(oh,"PIXI.Graphics.graphicsData property is deprecated, use PIXI.Graphics.geometry.graphicsData"),this.geometry.graphicsData}}),s.fromImage=u.bind(null,"fromImage"),s.fromSVG=u.bind(null,"fromSVG"),s.fromCanvas=u.bind(null,"fromCanvas"),s.fromVideo=u.bind(null,"fromVideo"),s.fromFrame=u.bind(null,"fromFrame"),a.fromImage=l.bind(null,"fromImage"),a.fromSVG=l.bind(null,"fromSVG"),a.fromCanvas=l.bind(null,"fromCanvas"),a.fromVideo=l.bind(null,"fromVideo"),a.fromFrame=l.bind(null,"fromFrame"),Object.defineProperty(t.AbstractRenderer.prototype,"autoResize",{get:function(){return oe(oh,"PIXI.AbstractRenderer.autoResize property is deprecated, use PIXI.AbstractRenderer.autoDensity"),this.autoDensity},set:function(t){oe(oh,"PIXI.AbstractRenderer.autoResize property is deprecated, use PIXI.AbstractRenderer.autoDensity"),this.autoDensity=t}}),Object.defineProperty(t.Renderer.prototype,"textureManager",{get:function(){return oe(oh,"PIXI.Renderer.textureManager property is deprecated, use PIXI.Renderer.texture"),this.texture}}),t.utils.mixins={mixin:function(){oe(oh,"PIXI.utils.mixins.mixin function is no longer available")},delayMixin:function(){oe(oh,"PIXI.utils.mixins.delayMixin function is no longer available")},performMixins:function(){oe(oh,"PIXI.utils.mixins.performMixins function is no longer available")}},Object.defineProperty(t.BitmapText.prototype,"font",{get:function(){return oe("5.3.0","PIXI.BitmapText.font property is deprecated, use fontName, fontSize, tint or align properties"),{name:this._fontName,size:this._fontSize,tint:this._tint,align:this._align}},set:function(e){if(oe("5.3.0","PIXI.BitmapText.font property is deprecated, use fontName, fontSize, tint or align properties"),e){var r={font:e};this._upgradeStyle(r),r.fontSize=r.fontSize||t.BitmapFont.available[r.fontName].size,this._fontName=r.fontName,this._fontSize=r.fontSize,this.dirty=!0}}})},t.utils=ve,t}({});PIXI.useDeprecated();
//# sourceMappingURL=pixi-legacy.min.js.map

/*!
 * pixi-particles - v4.2.0
 * Compiled Sat, 26 Oct 2019 14:40:23 UTC
 *
 * pixi-particles is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
this.PIXI=this.PIXI||{},function(t,i){"use strict";var e,s=function(){function i(i,e,s){this.value=i,this.time=e,this.next=null,this.isStepped=!1,this.ease=s?"function"==typeof s?s:t.ParticleUtils.generateEase(s):null}return i.createList=function(e){if("list"in e){var s=e.list,a=void 0,n=void 0,r=s[0],o=r.value,h=r.time;if(n=a=new i("string"==typeof o?t.ParticleUtils.hexToRGB(o):o,h,e.ease),s.length>2||2===s.length&&s[1].value!==o)for(var l=1;l<s.length;++l){var p=s[l],c=p.value,u=p.time;a.next=new i("string"==typeof c?t.ParticleUtils.hexToRGB(c):c,u),a=a.next}return n.isStepped=!!e.isStepped,n}var m=new i("string"==typeof e.start?t.ParticleUtils.hexToRGB(e.start):e.start,0);return e.end!==e.start&&(m.next=new i("string"==typeof e.end?t.ParticleUtils.hexToRGB(e.end):e.end,1)),m},i}(),a=i;function n(t){return e(t)}e=parseInt(/^(\d+)\./.exec(i.VERSION)[1])<5?a.Texture.fromImage:a.Texture.from,function(t){t.verbose=!1,t.DEG_TO_RADS=Math.PI/180,t.rotatePoint=function(i,e){if(i){i*=t.DEG_TO_RADS;var s=Math.sin(i),a=Math.cos(i),n=e.x*a-e.y*s,r=e.x*s+e.y*a;e.x=n,e.y=r}},t.combineRGBComponents=function(t,i,e){return t<<16|i<<8|e},t.normalize=function(i){var e=1/t.length(i);i.x*=e,i.y*=e},t.scaleBy=function(t,i){t.x*=i,t.y*=i},t.length=function(t){return Math.sqrt(t.x*t.x+t.y*t.y)},t.hexToRGB=function(t,i){var e;return i||(i={}),"#"==t.charAt(0)?t=t.substr(1):0===t.indexOf("0x")&&(t=t.substr(2)),8==t.length&&(e=t.substr(0,2),t=t.substr(2)),i.r=parseInt(t.substr(0,2),16),i.g=parseInt(t.substr(2,2),16),i.b=parseInt(t.substr(4,2),16),e&&(i.a=parseInt(e,16)),i},t.generateEase=function(t){var i=t.length,e=1/i;return function(s){var a,n,r=i*s|0;return a=(s-r*e)*i,(n=t[r]||t[i-1]).s+a*(2*(1-a)*(n.cp-n.s)+a*(n.e-n.s))}},t.getBlendMode=function(t){if(!t)return i.BLEND_MODES.NORMAL;for(t=t.toUpperCase();t.indexOf(" ")>=0;)t=t.replace(" ","_");return i.BLEND_MODES[t]||i.BLEND_MODES.NORMAL},t.createSteppedGradient=function(i,e){void 0===e&&(e=10),("number"!=typeof e||e<=0)&&(e=10);var a=new s(t.hexToRGB(i[0].value),i[0].time);a.isStepped=!0;for(var n=a,r=i[0],o=1,h=i[o],l=1;l<e;++l){for(var p=l/e;p>h.time;)r=h,h=i[++o];p=(p-r.time)/(h.time-r.time);var c=t.hexToRGB(r.value),u=t.hexToRGB(h.value),m={r:(u.r-c.r)*p+c.r,g:(u.g-c.g)*p+c.g,b:(u.b-c.b)*p+c.b};n.next=new s(m,l/e),n=n.next}return a}}(t.ParticleUtils||(t.ParticleUtils={}));var r=function(t,i){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var e in i)i.hasOwnProperty(e)&&(t[e]=i[e])})(t,i)};function o(t,i){function e(){this.constructor=t}r(t,i),t.prototype=null===i?Object.create(i):(e.prototype=i.prototype,new e)}var h=function(){function t(t){void 0===t&&(t=!1),this.current=null,this.next=null,this.isColor=!!t,this.interpolate=null,this.ease=null}return t.prototype.reset=function(t){this.current=t,this.next=t.next,this.next&&this.next.time>=1?this.interpolate=this.isColor?p:l:t.isStepped?this.interpolate=this.isColor?d:m:this.interpolate=this.isColor?u:c,this.ease=this.current.ease},t}();function l(t){return this.ease&&(t=this.ease(t)),(this.next.value-this.current.value)*t+this.current.value}function p(i){this.ease&&(i=this.ease(i));var e=this.current.value,s=this.next.value,a=(s.r-e.r)*i+e.r,n=(s.g-e.g)*i+e.g,r=(s.b-e.b)*i+e.b;return t.ParticleUtils.combineRGBComponents(a,n,r)}function c(t){for(this.ease&&(t=this.ease(t));t>this.next.time;)this.current=this.next,this.next=this.next.next;return t=(t-this.current.time)/(this.next.time-this.current.time),(this.next.value-this.current.value)*t+this.current.value}function u(i){for(this.ease&&(i=this.ease(i));i>this.next.time;)this.current=this.next,this.next=this.next.next;i=(i-this.current.time)/(this.next.time-this.current.time);var e=this.current.value,s=this.next.value,a=(s.r-e.r)*i+e.r,n=(s.g-e.g)*i+e.g,r=(s.b-e.b)*i+e.b;return t.ParticleUtils.combineRGBComponents(a,n,r)}function m(t){for(this.ease&&(t=this.ease(t));this.next&&t>this.next.time;)this.current=this.next,this.next=this.next.next;return this.current.value}function d(i){for(this.ease&&(i=this.ease(i));this.next&&i>this.next.time;)this.current=this.next,this.next=this.next.next;var e=this.current.value;return t.ParticleUtils.combineRGBComponents(e.r,e.g,e.b)}var f,x=function(e){function s(t){var a=e.call(this)||this;return a.emitter=t,a.anchor.x=a.anchor.y=.5,a.velocity=new i.Point,a.rotationSpeed=0,a.rotationAcceleration=0,a.maxLife=0,a.age=0,a.ease=null,a.extraData=null,a.alphaList=new h,a.speedList=new h,a.speedMultiplier=1,a.acceleration=new i.Point,a.maxSpeed=NaN,a.scaleList=new h,a.scaleMultiplier=1,a.colorList=new h(!0),a._doAlpha=!1,a._doScale=!1,a._doSpeed=!1,a._doAcceleration=!1,a._doColor=!1,a._doNormalMovement=!1,a._oneOverLife=0,a.next=null,a.prev=null,a.init=a.init,a.Particle_init=s.prototype.init,a.update=a.update,a.Particle_update=s.prototype.update,a.Sprite_destroy=e.prototype.destroy,a.Particle_destroy=s.prototype.destroy,a.applyArt=a.applyArt,a.kill=a.kill,a}return o(s,e),s.prototype.init=function(){this.age=0,this.velocity.x=this.speedList.current.value*this.speedMultiplier,this.velocity.y=0,t.ParticleUtils.rotatePoint(this.rotation,this.velocity),this.noRotation?this.rotation=0:this.rotation*=t.ParticleUtils.DEG_TO_RADS,this.rotationSpeed*=t.ParticleUtils.DEG_TO_RADS,this.rotationAcceleration*=t.ParticleUtils.DEG_TO_RADS,this.alpha=this.alphaList.current.value,this.scale.x=this.scale.y=this.scaleList.current.value,this._doAlpha=!!this.alphaList.current.next,this._doSpeed=!!this.speedList.current.next,this._doScale=!!this.scaleList.current.next,this._doColor=!!this.colorList.current.next,this._doAcceleration=0!==this.acceleration.x||0!==this.acceleration.y,this._doNormalMovement=this._doSpeed||0!==this.speedList.current.value||this._doAcceleration,this._oneOverLife=1/this.maxLife;var i=this.colorList.current.value;this.tint=t.ParticleUtils.combineRGBComponents(i.r,i.g,i.b),this.visible=!0},s.prototype.applyArt=function(t){this.texture=t||i.Texture.EMPTY},s.prototype.update=function(i){if(this.age+=i,this.age>=this.maxLife||this.age<0)return this.kill(),-1;var e=this.age*this._oneOverLife;if(this.ease&&(e=4==this.ease.length?this.ease(e,0,1,1):this.ease(e)),this._doAlpha&&(this.alpha=this.alphaList.interpolate(e)),this._doScale){var s=this.scaleList.interpolate(e)*this.scaleMultiplier;this.scale.x=this.scale.y=s}if(this._doNormalMovement){var a=void 0,n=void 0;if(this._doSpeed){var r=this.speedList.interpolate(e)*this.speedMultiplier;t.ParticleUtils.normalize(this.velocity),t.ParticleUtils.scaleBy(this.velocity,r),a=this.velocity.x*i,n=this.velocity.y*i}else if(this._doAcceleration){var o=this.velocity.x,h=this.velocity.y;if(this.velocity.x+=this.acceleration.x*i,this.velocity.y+=this.acceleration.y*i,this.maxSpeed){var l=t.ParticleUtils.length(this.velocity);l>this.maxSpeed&&t.ParticleUtils.scaleBy(this.velocity,this.maxSpeed/l)}a=(o+this.velocity.x)/2*i,n=(h+this.velocity.y)/2*i}else a=this.velocity.x*i,n=this.velocity.y*i;this.position.x+=a,this.position.y+=n}if(this._doColor&&(this.tint=this.colorList.interpolate(e)),0!==this.rotationAcceleration){var p=this.rotationSpeed+this.rotationAcceleration*i;this.rotation+=(this.rotationSpeed+p)/2*i,this.rotationSpeed=p}else 0!==this.rotationSpeed?this.rotation+=this.rotationSpeed*i:this.acceleration&&!this.noRotation&&(this.rotation=Math.atan2(this.velocity.y,this.velocity.x));return e},s.prototype.kill=function(){this.emitter.recycle(this)},s.prototype.destroy=function(){this.parent&&this.parent.removeChild(this),this.Sprite_destroy(),this.emitter=this.velocity=this.colorList=this.scaleList=this.alphaList=this.speedList=this.ease=this.next=this.prev=null},s.parseArt=function(i){var e;for(e=i.length;e>=0;--e)"string"==typeof i[e]&&(i[e]=n(i[e]));if(t.ParticleUtils.verbose)for(e=i.length-1;e>0;--e)if(i[e].baseTexture!=i[e-1].baseTexture){window.console&&console.warn("PixiParticles: using particle textures from different images may hinder performance in WebGL");break}return i},s.parseData=function(t){return t},s}(i.Sprite),y=function(){function t(t){this.segments=[],this.countingLengths=[],this.totalLength=0,this.init(t)}return t.prototype.init=function(t){if(t&&t.length)if(Array.isArray(t[0]))for(var i=0;i<t.length;++i)for(var e=t[i],s=e[0],a=1;a<e.length;++a){var n=e[a];this.segments.push({p1:s,p2:n,l:0}),s=n}else for(s=t[0],i=1;i<t.length;++i){n=t[i];this.segments.push({p1:s,p2:n,l:0}),s=n}else this.segments.push({p1:{x:0,y:0},p2:{x:0,y:0},l:0});for(i=0;i<this.segments.length;++i){var r=this.segments[i],o=r.p1,h=r.p2,l=Math.sqrt((h.x-o.x)*(h.x-o.x)+(h.y-o.y)*(h.y-o.y));this.segments[i].l=l,this.totalLength+=l,this.countingLengths.push(this.totalLength)}},t.prototype.getRandomPoint=function(t){var i,e,s=Math.random()*this.totalLength;if(1===this.segments.length)i=this.segments[0],e=s;else for(var a=0;a<this.countingLengths.length;++a)if(s<this.countingLengths[a]){i=this.segments[a],e=0===a?s:s-this.countingLengths[a-1];break}e/=i.l||1;var n=i.p1,r=i.p2;t.x=n.x+e*(r.x-n.x),t.y=n.y+e*(r.y-n.y)},t}(),_=i;f=parseInt(/^(\d+)\./.exec(i.VERSION)[1])<5?_.ticker.shared:_.Ticker.shared;var v=new i.Point,P=function(){function e(t,i,e){this._currentImageIndex=-1,this._particleConstructor=x,this.particleImages=null,this.startAlpha=null,this.startSpeed=null,this.minimumSpeedMultiplier=1,this.acceleration=null,this.maxSpeed=NaN,this.startScale=null,this.minimumScaleMultiplier=1,this.startColor=null,this.minLifetime=0,this.maxLifetime=0,this.minStartRotation=0,this.maxStartRotation=0,this.noRotation=!1,this.minRotationSpeed=0,this.maxRotationSpeed=0,this.particleBlendMode=0,this.customEase=null,this.extraData=null,this._frequency=1,this.spawnChance=1,this.maxParticles=1e3,this.emitterLifetime=-1,this.spawnPos=null,this.spawnType=null,this._spawnFunc=null,this.spawnRect=null,this.spawnCircle=null,this.spawnPolygonalChain=null,this.particlesPerWave=1,this.particleSpacing=0,this.angleStart=0,this.rotation=0,this.ownerPos=null,this._prevEmitterPos=null,this._prevPosIsValid=!1,this._posChanged=!1,this._parent=null,this.addAtBack=!1,this.particleCount=0,this._emit=!1,this._spawnTimer=0,this._emitterLife=-1,this._activeParticlesFirst=null,this._activeParticlesLast=null,this._poolFirst=null,this._origConfig=null,this._origArt=null,this._autoUpdate=!1,this._currentImageIndex=-1,this._destroyWhenComplete=!1,this._completeCallback=null,this.parent=t,i&&e&&this.init(i,e),this.recycle=this.recycle,this.update=this.update,this.rotate=this.rotate,this.updateSpawnPos=this.updateSpawnPos,this.updateOwnerPos=this.updateOwnerPos}return Object.defineProperty(e.prototype,"orderedArt",{get:function(){return-1!==this._currentImageIndex},set:function(t){this._currentImageIndex=t?0:-1},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"frequency",{get:function(){return this._frequency},set:function(t){this._frequency="number"==typeof t&&t>0?t:1},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"particleConstructor",{get:function(){return this._particleConstructor},set:function(t){if(t!=this._particleConstructor){this._particleConstructor=t,this.cleanup();for(var i=this._poolFirst;i;i=i.next)i.destroy();this._poolFirst=null,this._origConfig&&this._origArt&&this.init(this._origArt,this._origConfig)}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"parent",{get:function(){return this._parent},set:function(t){this.cleanup(),this._parent=t},enumerable:!0,configurable:!0}),e.prototype.init=function(e,a){if(e&&a){this.cleanup(),this._origConfig=a,this._origArt=e,e=Array.isArray(e)?e.slice():[e];var n=this._particleConstructor;this.particleImages=n.parseArt?n.parseArt(e):e,a.alpha?this.startAlpha=s.createList(a.alpha):this.startAlpha=new s(1,0),a.speed?(this.startSpeed=s.createList(a.speed),this.minimumSpeedMultiplier=("minimumSpeedMultiplier"in a?a.minimumSpeedMultiplier:a.speed.minimumSpeedMultiplier)||1):(this.minimumSpeedMultiplier=1,this.startSpeed=new s(0,0));var r=a.acceleration;r&&(r.x||r.y)?(this.startSpeed.next=null,this.acceleration=new i.Point(r.x,r.y),this.maxSpeed=a.maxSpeed||NaN):this.acceleration=new i.Point,a.scale?(this.startScale=s.createList(a.scale),this.minimumScaleMultiplier=("minimumScaleMultiplier"in a?a.minimumScaleMultiplier:a.scale.minimumScaleMultiplier)||1):(this.startScale=new s(1,0),this.minimumScaleMultiplier=1),a.color?this.startColor=s.createList(a.color):this.startColor=new s({r:255,g:255,b:255},0),a.startRotation?(this.minStartRotation=a.startRotation.min,this.maxStartRotation=a.startRotation.max):this.minStartRotation=this.maxStartRotation=0,a.noRotation&&(this.minStartRotation||this.maxStartRotation)?this.noRotation=!!a.noRotation:this.noRotation=!1,a.rotationSpeed?(this.minRotationSpeed=a.rotationSpeed.min,this.maxRotationSpeed=a.rotationSpeed.max):this.minRotationSpeed=this.maxRotationSpeed=0,this.rotationAcceleration=a.rotationAcceleration||0,this.minLifetime=a.lifetime.min,this.maxLifetime=a.lifetime.max,this.particleBlendMode=t.ParticleUtils.getBlendMode(a.blendMode),a.ease?this.customEase="function"==typeof a.ease?a.ease:t.ParticleUtils.generateEase(a.ease):this.customEase=null,n.parseData?this.extraData=n.parseData(a.extraData):this.extraData=a.extraData||null,this.spawnRect=this.spawnCircle=null,this.particlesPerWave=1,a.particlesPerWave&&a.particlesPerWave>1&&(this.particlesPerWave=a.particlesPerWave),this.particleSpacing=0,this.angleStart=0,this.parseSpawnType(a),this.frequency=a.frequency,this.spawnChance="number"==typeof a.spawnChance&&a.spawnChance>0?a.spawnChance:1,this.emitterLifetime=a.emitterLifetime||-1,this.maxParticles=a.maxParticles>0?a.maxParticles:1e3,this.addAtBack=!!a.addAtBack,this.rotation=0,this.ownerPos=new i.Point,this.spawnPos=new i.Point(a.pos.x,a.pos.y),this.initAdditional(e,a),this._prevEmitterPos=this.spawnPos.clone(),this._prevPosIsValid=!1,this._spawnTimer=0,this.emit=void 0===a.emit||!!a.emit,this.autoUpdate=!!a.autoUpdate,this.orderedArt=!!a.orderedArt}},e.prototype.initAdditional=function(t,i){},e.prototype.parseSpawnType=function(t){var e;switch(t.spawnType){case"rect":this.spawnType="rect",this._spawnFunc=this._spawnRect;var s=t.spawnRect;this.spawnRect=new i.Rectangle(s.x,s.y,s.w,s.h);break;case"circle":this.spawnType="circle",this._spawnFunc=this._spawnCircle,e=t.spawnCircle,this.spawnCircle=new i.Circle(e.x,e.y,e.r);break;case"ring":this.spawnType="ring",this._spawnFunc=this._spawnRing,e=t.spawnCircle,this.spawnCircle=new i.Circle(e.x,e.y,e.r),this.spawnCircle.minRadius=e.minR;break;case"burst":this.spawnType="burst",this._spawnFunc=this._spawnBurst,this.particleSpacing=t.particleSpacing,this.angleStart=t.angleStart?t.angleStart:0;break;case"point":this.spawnType="point",this._spawnFunc=this._spawnPoint;break;case"polygonalChain":this.spawnType="polygonalChain",this._spawnFunc=this._spawnPolygonalChain,this.spawnPolygonalChain=new y(t.spawnPolygon);break;default:this.spawnType="point",this._spawnFunc=this._spawnPoint}},e.prototype.recycle=function(t){t.next&&(t.next.prev=t.prev),t.prev&&(t.prev.next=t.next),t==this._activeParticlesLast&&(this._activeParticlesLast=t.prev),t==this._activeParticlesFirst&&(this._activeParticlesFirst=t.next),t.prev=null,t.next=this._poolFirst,this._poolFirst=t,t.parent&&t.parent.removeChild(t),--this.particleCount},e.prototype.rotate=function(i){if(this.rotation!=i){var e=i-this.rotation;this.rotation=i,t.ParticleUtils.rotatePoint(e,this.spawnPos),this._posChanged=!0}},e.prototype.updateSpawnPos=function(t,i){this._posChanged=!0,this.spawnPos.x=t,this.spawnPos.y=i},e.prototype.updateOwnerPos=function(t,i){this._posChanged=!0,this.ownerPos.x=t,this.ownerPos.y=i},e.prototype.resetPositionTracking=function(){this._prevPosIsValid=!1},Object.defineProperty(e.prototype,"emit",{get:function(){return this._emit},set:function(t){this._emit=!!t,this._emitterLife=this.emitterLifetime},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"autoUpdate",{get:function(){return this._autoUpdate},set:function(t){this._autoUpdate&&!t?f.remove(this.update,this):!this._autoUpdate&&t&&f.add(this.update,this),this._autoUpdate=!!t},enumerable:!0,configurable:!0}),e.prototype.playOnceAndDestroy=function(t){this.autoUpdate=!0,this.emit=!0,this._destroyWhenComplete=!0,this._completeCallback=t},e.prototype.playOnce=function(t){this.emit=!0,this._completeCallback=t},e.prototype.update=function(t){if(this._autoUpdate&&(t=t/i.settings.TARGET_FPMS/1e3),this._parent){var e,s,a,n,r;for(s=this._activeParticlesFirst;s;s=a)a=s.next,s.update(t);this._prevPosIsValid&&(n=this._prevEmitterPos.x,r=this._prevEmitterPos.y);var o=this.ownerPos.x+this.spawnPos.x,h=this.ownerPos.y+this.spawnPos.y;if(this._emit)for(this._spawnTimer-=t<0?0:t;this._spawnTimer<=0;){if(this._emitterLife>0&&(this._emitterLife-=this._frequency,this._emitterLife<=0)){this._spawnTimer=0,this._emitterLife=0,this.emit=!1;break}if(this.particleCount>=this.maxParticles)this._spawnTimer+=this._frequency;else{var l=void 0;if(l=this.minLifetime==this.maxLifetime?this.minLifetime:Math.random()*(this.maxLifetime-this.minLifetime)+this.minLifetime,-this._spawnTimer<l){var p=void 0,c=void 0;if(this._prevPosIsValid&&this._posChanged){var u=1+this._spawnTimer/t;p=(o-n)*u+n,c=(h-r)*u+r}else p=o,c=h;e=0;for(var m=Math.min(this.particlesPerWave,this.maxParticles-this.particleCount);e<m;++e)if(!(this.spawnChance<1&&Math.random()>=this.spawnChance)){var d=void 0;if(this._poolFirst?(d=this._poolFirst,this._poolFirst=this._poolFirst.next,d.next=null):d=new this.particleConstructor(this),this.particleImages.length>1?-1!==this._currentImageIndex?(d.applyArt(this.particleImages[this._currentImageIndex++]),(this._currentImageIndex<0||this._currentImageIndex>=this.particleImages.length)&&(this._currentImageIndex=0)):d.applyArt(this.particleImages[Math.floor(Math.random()*this.particleImages.length)]):d.applyArt(this.particleImages[0]),d.alphaList.reset(this.startAlpha),1!=this.minimumSpeedMultiplier&&(d.speedMultiplier=Math.random()*(1-this.minimumSpeedMultiplier)+this.minimumSpeedMultiplier),d.speedList.reset(this.startSpeed),d.acceleration.x=this.acceleration.x,d.acceleration.y=this.acceleration.y,d.maxSpeed=this.maxSpeed,1!=this.minimumScaleMultiplier&&(d.scaleMultiplier=Math.random()*(1-this.minimumScaleMultiplier)+this.minimumScaleMultiplier),d.scaleList.reset(this.startScale),d.colorList.reset(this.startColor),this.minRotationSpeed==this.maxRotationSpeed?d.rotationSpeed=this.minRotationSpeed:d.rotationSpeed=Math.random()*(this.maxRotationSpeed-this.minRotationSpeed)+this.minRotationSpeed,d.rotationAcceleration=this.rotationAcceleration,d.noRotation=this.noRotation,d.maxLife=l,d.blendMode=this.particleBlendMode,d.ease=this.customEase,d.extraData=this.extraData,this.applyAdditionalProperties(d),this._spawnFunc(d,p,c,e),d.init(),d.update(-this._spawnTimer),d.parent){var f=this._parent.children;if(f[0]==d)f.shift();else if(f[f.length-1]==d)f.pop();else{var x=f.indexOf(d);f.splice(x,1)}this.addAtBack?f.unshift(d):f.push(d)}else this.addAtBack?this._parent.addChildAt(d,0):this._parent.addChild(d);this._activeParticlesLast?(this._activeParticlesLast.next=d,d.prev=this._activeParticlesLast,this._activeParticlesLast=d):this._activeParticlesLast=this._activeParticlesFirst=d,++this.particleCount}}this._spawnTimer+=this._frequency}}if(this._posChanged&&(this._prevEmitterPos.x=o,this._prevEmitterPos.y=h,this._prevPosIsValid=!0,this._posChanged=!1),!this._emit&&!this._activeParticlesFirst){if(this._completeCallback){var y=this._completeCallback;this._completeCallback=null,y()}this._destroyWhenComplete&&this.destroy()}}},e.prototype.applyAdditionalProperties=function(t){},e.prototype._spawnPoint=function(t,i,e){this.minStartRotation==this.maxStartRotation?t.rotation=this.minStartRotation+this.rotation:t.rotation=Math.random()*(this.maxStartRotation-this.minStartRotation)+this.minStartRotation+this.rotation,t.position.x=i,t.position.y=e},e.prototype._spawnRect=function(i,e,s){this.minStartRotation==this.maxStartRotation?i.rotation=this.minStartRotation+this.rotation:i.rotation=Math.random()*(this.maxStartRotation-this.minStartRotation)+this.minStartRotation+this.rotation,v.x=Math.random()*this.spawnRect.width+this.spawnRect.x,v.y=Math.random()*this.spawnRect.height+this.spawnRect.y,0!==this.rotation&&t.ParticleUtils.rotatePoint(this.rotation,v),i.position.x=e+v.x,i.position.y=s+v.y},e.prototype._spawnCircle=function(i,e,s){this.minStartRotation==this.maxStartRotation?i.rotation=this.minStartRotation+this.rotation:i.rotation=Math.random()*(this.maxStartRotation-this.minStartRotation)+this.minStartRotation+this.rotation,v.x=Math.random()*this.spawnCircle.radius,v.y=0,t.ParticleUtils.rotatePoint(360*Math.random(),v),v.x+=this.spawnCircle.x,v.y+=this.spawnCircle.y,0!==this.rotation&&t.ParticleUtils.rotatePoint(this.rotation,v),i.position.x=e+v.x,i.position.y=s+v.y},e.prototype._spawnRing=function(i,e,s){var a=this.spawnCircle;this.minStartRotation==this.maxStartRotation?i.rotation=this.minStartRotation+this.rotation:i.rotation=Math.random()*(this.maxStartRotation-this.minStartRotation)+this.minStartRotation+this.rotation,a.minRadius!==a.radius?v.x=Math.random()*(a.radius-a.minRadius)+a.minRadius:v.x=a.radius,v.y=0;var n=360*Math.random();i.rotation+=n,t.ParticleUtils.rotatePoint(n,v),v.x+=this.spawnCircle.x,v.y+=this.spawnCircle.y,0!==this.rotation&&t.ParticleUtils.rotatePoint(this.rotation,v),i.position.x=e+v.x,i.position.y=s+v.y},e.prototype._spawnPolygonalChain=function(i,e,s){this.minStartRotation==this.maxStartRotation?i.rotation=this.minStartRotation+this.rotation:i.rotation=Math.random()*(this.maxStartRotation-this.minStartRotation)+this.minStartRotation+this.rotation,this.spawnPolygonalChain.getRandomPoint(v),0!==this.rotation&&t.ParticleUtils.rotatePoint(this.rotation,v),i.position.x=e+v.x,i.position.y=s+v.y},e.prototype._spawnBurst=function(t,i,e,s){0===this.particleSpacing?t.rotation=360*Math.random():t.rotation=this.angleStart+this.particleSpacing*s+this.rotation,t.position.x=i,t.position.y=e},e.prototype.cleanup=function(){var t,i;for(t=this._activeParticlesFirst;t;t=i)i=t.next,this.recycle(t),t.parent&&t.parent.removeChild(t);this._activeParticlesFirst=this._activeParticlesLast=null,this.particleCount=0},e.prototype.destroy=function(){var t;this.autoUpdate=!1,this.cleanup();for(var i=this._poolFirst;i;i=t)t=i.next,i.destroy();this._poolFirst=this._parent=this.particleImages=this.spawnPos=this.ownerPos=this.startColor=this.startScale=this.startAlpha=this.startSpeed=this.customEase=this._completeCallback=null},e}(),g=new i.Point,S=["pow","sqrt","abs","floor","round","ceil","E","PI","sin","cos","tan","asin","acos","atan","atan2","log"],w=new RegExp(["[01234567890\\.\\*\\-\\+\\/\\(\\)x ,]"].concat(S).join("|"),"g"),R=function(e){function s(t){var s=e.call(this,t)||this;return s.path=null,s.initialRotation=0,s.initialPosition=new i.Point,s.movement=0,s}return o(s,e),s.prototype.init=function(){this.initialRotation=this.rotation,this.Particle_init(),this.path=this.extraData.path,this._doNormalMovement=!this.path,this.movement=0,this.initialPosition.x=this.position.x,this.initialPosition.y=this.position.y},s.prototype.update=function(i){var e=this.Particle_update(i);if(e>=0&&this.path){var s=this.speedList.interpolate(e)*this.speedMultiplier;this.movement+=s*i,g.x=this.movement,g.y=this.path(this.movement),t.ParticleUtils.rotatePoint(this.initialRotation,g),this.position.x=this.initialPosition.x+g.x,this.position.y=this.initialPosition.y+g.y}return e},s.prototype.destroy=function(){this.Particle_destroy(),this.path=this.initialPosition=null},s.parseArt=function(t){return x.parseArt(t)},s.parseData=function(i){var e={};if(i&&i.path)try{e.path=function(t){for(var i=t.match(w),e=i.length-1;e>=0;--e)S.indexOf(i[e])>=0&&(i[e]="Math."+i[e]);return t=i.join(""),new Function("x","return "+t+";")}(i.path)}catch(i){t.ParticleUtils.verbose&&console.error("PathParticle: error in parsing path expression"),e.path=null}else t.ParticleUtils.verbose&&console.error("PathParticle requires a path string in extraData!"),e.path=null;return e},s}(x),C=function(t){function e(i){var e=t.call(this,i)||this;return e.textures=null,e.duration=0,e.framerate=0,e.elapsed=0,e.loop=!1,e}return o(e,t),e.prototype.init=function(){this.Particle_init(),this.elapsed=0,this.framerate<0&&(this.duration=this.maxLife,this.framerate=this.textures.length/this.duration)},e.prototype.applyArt=function(t){this.textures=t.textures,this.framerate=t.framerate,this.duration=t.duration,this.loop=t.loop},e.prototype.update=function(t){var e=this.Particle_update(t);if(e>=0){this.elapsed+=t,this.elapsed>this.duration&&(this.loop?this.elapsed=this.elapsed%this.duration:this.elapsed=this.duration-1e-6);var s=this.elapsed*this.framerate+1e-7|0;this.texture=this.textures[s]||i.Texture.EMPTY}return e},e.prototype.destroy=function(){this.Particle_destroy(),this.textures=null},e.parseArt=function(t){for(var e,s,a,r,o,h=[],l=0;l<t.length;++l){e=t[l],h[l]=s={},s.textures=o=[],a=e.textures;for(var p=0;p<a.length;++p)if("string"==typeof(r=a[p]))o.push(n(r));else if(r instanceof i.Texture)o.push(r);else{var c=r.count||1;for(r="string"==typeof r.texture?n(r.texture):r.texture;c>0;--c)o.push(r)}"matchLife"==e.framerate?(s.framerate=-1,s.duration=0,s.loop=!1):(s.loop=!!e.loop,s.framerate=e.framerate>0?e.framerate:60,s.duration=o.length/s.framerate)}return h},e}(x);t.GetTextureFromString=n,t.Particle=x,t.Emitter=P,t.PathParticle=R,t.AnimatedParticle=C,t.PolygonalChain=y,t.PropertyList=h,t.PropertyNode=s}(this.PIXI.particles=this.PIXI.particles||{},PIXI);
//# sourceMappingURL=pixi-particles.min.js.map

var __extends=(this&&this.__extends)||(function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||({__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b})||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p]};return extendStatics(d,b);};return function(d,b){extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __())}})();var pixi_spine;(function(pixi_spine){var core;(function(core){var Animation=(function(){function Animation(name,timelines,duration){if(name==null)throw new Error("name cannot be null.");if(timelines==null)throw new Error("timelines cannot be null.");this.name=name;this.timelines=timelines;this.duration=duration}Animation.prototype.apply=function(skeleton,lastTime,time,loop,events,alpha,blend,direction){if(skeleton==null)throw new Error("skeleton cannot be null.");if(loop&&this.duration!=0){time%=this.duration;if(lastTime>0)lastTime%=this.duration}var timelines=this.timelines;for(var i=0,n=timelines.length;i<n;i++)timelines[i].apply(skeleton,lastTime,time,events,alpha,blend,direction);};Animation.binarySearch=function(values,target,step){if(step===void 0){step=1}var low=0;var high=values.length/step-2;if(high==0)return step;var current=high>>>1;while(!0){if(values[(current+1)*step]<=target)low=current+1;else high=current;if(low==high)return(low+1)*step;current=(low+high)>>>1}};Animation.linearSearch=function(values,target,step){for(var i=0,last=values.length-step;i<=last;i+=step)if(values[i]>target)return i;return-1};return Animation}());core.Animation=Animation;var MixBlend;(function(MixBlend){MixBlend[MixBlend.setup=0]="setup";MixBlend[MixBlend.first=1]="first";MixBlend[MixBlend.replace=2]="replace";MixBlend[MixBlend.add=3]="add"})(MixBlend=core.MixBlend||(core.MixBlend={}));var MixDirection;(function(MixDirection){MixDirection[MixDirection["in"]=0]="in";MixDirection[MixDirection.out=1]="out"})(MixDirection=core.MixDirection||(core.MixDirection={}));var TimelineType;(function(TimelineType){TimelineType[TimelineType.rotate=0]="rotate";TimelineType[TimelineType.translate=1]="translate";TimelineType[TimelineType.scale=2]="scale";TimelineType[TimelineType.shear=3]="shear";TimelineType[TimelineType.attachment=4]="attachment";TimelineType[TimelineType.color=5]="color";TimelineType[TimelineType.deform=6]="deform";TimelineType[TimelineType.event=7]="event";TimelineType[TimelineType.drawOrder=8]="drawOrder";TimelineType[TimelineType.ikConstraint=9]="ikConstraint";TimelineType[TimelineType.transformConstraint=10]="transformConstraint";TimelineType[TimelineType.pathConstraintPosition=11]="pathConstraintPosition";TimelineType[TimelineType.pathConstraintSpacing=12]="pathConstraintSpacing";TimelineType[TimelineType.pathConstraintMix=13]="pathConstraintMix";TimelineType[TimelineType.twoColor=14]="twoColor"})(TimelineType=core.TimelineType||(core.TimelineType={}));var CurveTimeline=(function(){function CurveTimeline(frameCount){if(frameCount<=0)throw new Error("frameCount must be > 0: "+frameCount);this.curves=core.Utils.newFloatArray((frameCount-1)*CurveTimeline.BEZIER_SIZE)}CurveTimeline.prototype.getFrameCount=function(){return this.curves.length/CurveTimeline.BEZIER_SIZE+1};CurveTimeline.prototype.setLinear=function(frameIndex){this.curves[frameIndex*CurveTimeline.BEZIER_SIZE]=CurveTimeline.LINEAR};CurveTimeline.prototype.setStepped=function(frameIndex){this.curves[frameIndex*CurveTimeline.BEZIER_SIZE]=CurveTimeline.STEPPED};CurveTimeline.prototype.getCurveType=function(frameIndex){var index=frameIndex*CurveTimeline.BEZIER_SIZE;if(index==this.curves.length)return CurveTimeline.LINEAR;var type=this.curves[index];if(type==CurveTimeline.LINEAR)return CurveTimeline.LINEAR;if(type==CurveTimeline.STEPPED)return CurveTimeline.STEPPED;return CurveTimeline.BEZIER};CurveTimeline.prototype.setCurve=function(frameIndex,cx1,cy1,cx2,cy2){var tmpx=(-cx1*2+cx2)*0.03,tmpy=(-cy1*2+cy2)*0.03;var dddfx=((cx1-cx2)*3+1)*0.006,dddfy=((cy1-cy2)*3+1)*0.006;var ddfx=tmpx*2+dddfx,ddfy=tmpy*2+dddfy;var dfx=cx1*0.3+tmpx+dddfx*0.16666667,dfy=cy1*0.3+tmpy+dddfy*0.16666667;var i=frameIndex*CurveTimeline.BEZIER_SIZE;var curves=this.curves;curves[i++]=CurveTimeline.BEZIER;var x=dfx,y=dfy;for(var n=i+CurveTimeline.BEZIER_SIZE-1;i<n;i+=2){curves[i]=x;curves[i+1]=y;dfx+=ddfx;dfy+=ddfy;ddfx+=dddfx;ddfy+=dddfy;x+=dfx;y+=dfy}};CurveTimeline.prototype.getCurvePercent=function(frameIndex,percent){percent=core.MathUtils.clamp(percent,0,1);var curves=this.curves;var i=frameIndex*CurveTimeline.BEZIER_SIZE;var type=curves[i];if(type==CurveTimeline.LINEAR)return percent;if(type==CurveTimeline.STEPPED)return 0;i++;var x=0;for(var start=i,n=i+CurveTimeline.BEZIER_SIZE-1;i<n;i+=2){x=curves[i];if(x>=percent){var prevX=void 0,prevY=void 0;if(i==start){prevX=0;prevY=0}else{prevX=curves[i-2];prevY=curves[i-1]}return prevY+(curves[i+1]-prevY)*(percent-prevX)/(x-prevX)}}var y=curves[i-1];return y+(1-y)*(percent-x)/(1-x)};CurveTimeline.LINEAR=0;CurveTimeline.STEPPED=1;CurveTimeline.BEZIER=2;CurveTimeline.BEZIER_SIZE=10*2-1;return CurveTimeline}());core.CurveTimeline=CurveTimeline;var RotateTimeline=(function(_super){__extends(RotateTimeline,_super);function RotateTimeline(frameCount){var _this=_super.call(this,frameCount)||this;_this.frames=core.Utils.newFloatArray(frameCount<<1);return _this}RotateTimeline.prototype.getPropertyId=function(){return(TimelineType.rotate<<24)+this.boneIndex};RotateTimeline.prototype.setFrame=function(frameIndex,time,degrees){frameIndex<<=1;this.frames[frameIndex]=time;this.frames[frameIndex+RotateTimeline.ROTATION]=degrees};RotateTimeline.prototype.apply=function(skeleton,lastTime,time,events,alpha,blend,direction){var frames=this.frames;var bone=skeleton.bones[this.boneIndex];if(time<frames[0]){switch(blend){case MixBlend.setup:bone.rotation=bone.data.rotation;return;case MixBlend.first:var r_1=bone.data.rotation-bone.rotation;bone.rotation+=(r_1-(16384-((16384.499999999996-r_1/360)|0))*360)*alpha}return}if(time>=frames[frames.length-RotateTimeline.ENTRIES]){var r_2=frames[frames.length+RotateTimeline.PREV_ROTATION];switch(blend){case MixBlend.setup:bone.rotation=bone.data.rotation+r_2*alpha;break;case MixBlend.first:case MixBlend.replace:r_2+=bone.data.rotation-bone.rotation;r_2-=(16384-((16384.499999999996-r_2/360)|0))*360;case MixBlend.add:bone.rotation+=r_2*alpha}return}var frame=Animation.binarySearch(frames,time,RotateTimeline.ENTRIES);var prevRotation=frames[frame+RotateTimeline.PREV_ROTATION];var frameTime=frames[frame];var percent=this.getCurvePercent((frame>>1)-1,1-(time-frameTime)/(frames[frame+RotateTimeline.PREV_TIME]-frameTime));var r=frames[frame+RotateTimeline.ROTATION]-prevRotation;r=prevRotation+(r-(16384-((16384.499999999996-r/360)|0))*360)*percent;switch(blend){case MixBlend.setup:bone.rotation=bone.data.rotation+(r-(16384-((16384.499999999996-r/360)|0))*360)*alpha;break;case MixBlend.first:case MixBlend.replace:r+=bone.data.rotation-bone.rotation;case MixBlend.add:bone.rotation+=(r-(16384-((16384.499999999996-r/360)|0))*360)*alpha}};RotateTimeline.ENTRIES=2;RotateTimeline.PREV_TIME=-2;RotateTimeline.PREV_ROTATION=-1;RotateTimeline.ROTATION=1;return RotateTimeline}(CurveTimeline));core.RotateTimeline=RotateTimeline;var TranslateTimeline=(function(_super){__extends(TranslateTimeline,_super);function TranslateTimeline(frameCount){var _this=_super.call(this,frameCount)||this;_this.frames=core.Utils.newFloatArray(frameCount*TranslateTimeline.ENTRIES);return _this}TranslateTimeline.prototype.getPropertyId=function(){return(TimelineType.translate<<24)+this.boneIndex};TranslateTimeline.prototype.setFrame=function(frameIndex,time,x,y){frameIndex*=TranslateTimeline.ENTRIES;this.frames[frameIndex]=time;this.frames[frameIndex+TranslateTimeline.X]=x;this.frames[frameIndex+TranslateTimeline.Y]=y};TranslateTimeline.prototype.apply=function(skeleton,lastTime,time,events,alpha,blend,direction){var frames=this.frames;var bone=skeleton.bones[this.boneIndex];if(time<frames[0]){switch(blend){case MixBlend.setup:bone.x=bone.data.x;bone.y=bone.data.y;return;case MixBlend.first:bone.x+=(bone.data.x-bone.x)*alpha;bone.y+=(bone.data.y-bone.y)*alpha}return}var x=0,y=0;if(time>=frames[frames.length-TranslateTimeline.ENTRIES]){x=frames[frames.length+TranslateTimeline.PREV_X];y=frames[frames.length+TranslateTimeline.PREV_Y]}else{var frame=Animation.binarySearch(frames,time,TranslateTimeline.ENTRIES);x=frames[frame+TranslateTimeline.PREV_X];y=frames[frame+TranslateTimeline.PREV_Y];var frameTime=frames[frame];var percent=this.getCurvePercent(frame/TranslateTimeline.ENTRIES-1,1-(time-frameTime)/(frames[frame+TranslateTimeline.PREV_TIME]-frameTime));x+=(frames[frame+TranslateTimeline.X]-x)*percent;y+=(frames[frame+TranslateTimeline.Y]-y)*percent}switch(blend){case MixBlend.setup:bone.x=bone.data.x+x*alpha;bone.y=bone.data.y+y*alpha;break;case MixBlend.first:case MixBlend.replace:bone.x+=(bone.data.x+x-bone.x)*alpha;bone.y+=(bone.data.y+y-bone.y)*alpha;break;case MixBlend.add:bone.x+=x*alpha;bone.y+=y*alpha}};TranslateTimeline.ENTRIES=3;TranslateTimeline.PREV_TIME=-3;TranslateTimeline.PREV_X=-2;TranslateTimeline.PREV_Y=-1;TranslateTimeline.X=1;TranslateTimeline.Y=2;return TranslateTimeline}(CurveTimeline));core.TranslateTimeline=TranslateTimeline;var ScaleTimeline=(function(_super){__extends(ScaleTimeline,_super);function ScaleTimeline(frameCount){return _super.call(this,frameCount)||this}ScaleTimeline.prototype.getPropertyId=function(){return(TimelineType.scale<<24)+this.boneIndex};ScaleTimeline.prototype.apply=function(skeleton,lastTime,time,events,alpha,blend,direction){var frames=this.frames;var bone=skeleton.bones[this.boneIndex];if(time<frames[0]){switch(blend){case MixBlend.setup:bone.scaleX=bone.data.scaleX;bone.scaleY=bone.data.scaleY;return;case MixBlend.first:bone.scaleX+=(bone.data.scaleX-bone.scaleX)*alpha;bone.scaleY+=(bone.data.scaleY-bone.scaleY)*alpha}return}var x=0,y=0;if(time>=frames[frames.length-ScaleTimeline.ENTRIES]){x=frames[frames.length+ScaleTimeline.PREV_X]*bone.data.scaleX;y=frames[frames.length+ScaleTimeline.PREV_Y]*bone.data.scaleY}else{var frame=Animation.binarySearch(frames,time,ScaleTimeline.ENTRIES);x=frames[frame+ScaleTimeline.PREV_X];y=frames[frame+ScaleTimeline.PREV_Y];var frameTime=frames[frame];var percent=this.getCurvePercent(frame/ScaleTimeline.ENTRIES-1,1-(time-frameTime)/(frames[frame+ScaleTimeline.PREV_TIME]-frameTime));x=(x+(frames[frame+ScaleTimeline.X]-x)*percent)*bone.data.scaleX;y=(y+(frames[frame+ScaleTimeline.Y]-y)*percent)*bone.data.scaleY}if(alpha==1){if(blend==MixBlend.add){bone.scaleX+=x-bone.data.scaleX;bone.scaleY+=y-bone.data.scaleY}else{bone.scaleX=x;bone.scaleY=y}}else{var bx=0,by=0;if(direction==MixDirection.out){switch(blend){case MixBlend.setup:bx=bone.data.scaleX;by=bone.data.scaleY;bone.scaleX=bx+(Math.abs(x)*core.MathUtils.signum(bx)-bx)*alpha;bone.scaleY=by+(Math.abs(y)*core.MathUtils.signum(by)-by)*alpha;break;case MixBlend.first:case MixBlend.replace:bx=bone.scaleX;by=bone.scaleY;bone.scaleX=bx+(Math.abs(x)*core.MathUtils.signum(bx)-bx)*alpha;bone.scaleY=by+(Math.abs(y)*core.MathUtils.signum(by)-by)*alpha;break;case MixBlend.add:bx=bone.scaleX;by=bone.scaleY;bone.scaleX=bx+(Math.abs(x)*core.MathUtils.signum(bx)-bone.data.scaleX)*alpha;bone.scaleY=by+(Math.abs(y)*core.MathUtils.signum(by)-bone.data.scaleY)*alpha}}else{switch(blend){case MixBlend.setup:bx=Math.abs(bone.data.scaleX)*core.MathUtils.signum(x);by=Math.abs(bone.data.scaleY)*core.MathUtils.signum(y);bone.scaleX=bx+(x-bx)*alpha;bone.scaleY=by+(y-by)*alpha;break;case MixBlend.first:case MixBlend.replace:bx=Math.abs(bone.scaleX)*core.MathUtils.signum(x);by=Math.abs(bone.scaleY)*core.MathUtils.signum(y);bone.scaleX=bx+(x-bx)*alpha;bone.scaleY=by+(y-by)*alpha;break;case MixBlend.add:bx=core.MathUtils.signum(x);by=core.MathUtils.signum(y);bone.scaleX=Math.abs(bone.scaleX)*bx+(x-Math.abs(bone.data.scaleX)*bx)*alpha;bone.scaleY=Math.abs(bone.scaleY)*by+(y-Math.abs(bone.data.scaleY)*by)*alpha}}}};return ScaleTimeline}(TranslateTimeline));core.ScaleTimeline=ScaleTimeline;var ShearTimeline=(function(_super){__extends(ShearTimeline,_super);function ShearTimeline(frameCount){return _super.call(this,frameCount)||this}ShearTimeline.prototype.getPropertyId=function(){return(TimelineType.shear<<24)+this.boneIndex};ShearTimeline.prototype.apply=function(skeleton,lastTime,time,events,alpha,blend,direction){var frames=this.frames;var bone=skeleton.bones[this.boneIndex];if(time<frames[0]){switch(blend){case MixBlend.setup:bone.shearX=bone.data.shearX;bone.shearY=bone.data.shearY;return;case MixBlend.first:bone.shearX+=(bone.data.shearX-bone.shearX)*alpha;bone.shearY+=(bone.data.shearY-bone.shearY)*alpha}return}var x=0,y=0;if(time>=frames[frames.length-ShearTimeline.ENTRIES]){x=frames[frames.length+ShearTimeline.PREV_X];y=frames[frames.length+ShearTimeline.PREV_Y]}else{var frame=Animation.binarySearch(frames,time,ShearTimeline.ENTRIES);x=frames[frame+ShearTimeline.PREV_X];y=frames[frame+ShearTimeline.PREV_Y];var frameTime=frames[frame];var percent=this.getCurvePercent(frame/ShearTimeline.ENTRIES-1,1-(time-frameTime)/(frames[frame+ShearTimeline.PREV_TIME]-frameTime));x=x+(frames[frame+ShearTimeline.X]-x)*percent;y=y+(frames[frame+ShearTimeline.Y]-y)*percent}switch(blend){case MixBlend.setup:bone.shearX=bone.data.shearX+x*alpha;bone.shearY=bone.data.shearY+y*alpha;break;case MixBlend.first:case MixBlend.replace:bone.shearX+=(bone.data.shearX+x-bone.shearX)*alpha;bone.shearY+=(bone.data.shearY+y-bone.shearY)*alpha;break;case MixBlend.add:bone.shearX+=x*alpha;bone.shearY+=y*alpha}};return ShearTimeline}(TranslateTimeline));core.ShearTimeline=ShearTimeline;var ColorTimeline=(function(_super){__extends(ColorTimeline,_super);function ColorTimeline(frameCount){var _this=_super.call(this,frameCount)||this;_this.frames=core.Utils.newFloatArray(frameCount*ColorTimeline.ENTRIES);return _this}ColorTimeline.prototype.getPropertyId=function(){return(TimelineType.color<<24)+this.slotIndex};ColorTimeline.prototype.setFrame=function(frameIndex,time,r,g,b,a){frameIndex*=ColorTimeline.ENTRIES;this.frames[frameIndex]=time;this.frames[frameIndex+ColorTimeline.R]=r;this.frames[frameIndex+ColorTimeline.G]=g;this.frames[frameIndex+ColorTimeline.B]=b;this.frames[frameIndex+ColorTimeline.A]=a};ColorTimeline.prototype.apply=function(skeleton,lastTime,time,events,alpha,blend,direction){var slot=skeleton.slots[this.slotIndex];var frames=this.frames;if(time<frames[0]){switch(blend){case MixBlend.setup:slot.color.setFromColor(slot.data.color);return;case MixBlend.first:var color=slot.color,setup=slot.data.color;color.add((setup.r-color.r)*alpha,(setup.g-color.g)*alpha,(setup.b-color.b)*alpha,(setup.a-color.a)*alpha)}return}var r=0,g=0,b=0,a=0;if(time>=frames[frames.length-ColorTimeline.ENTRIES]){var i=frames.length;r=frames[i+ColorTimeline.PREV_R];g=frames[i+ColorTimeline.PREV_G];b=frames[i+ColorTimeline.PREV_B];a=frames[i+ColorTimeline.PREV_A]}else{var frame=Animation.binarySearch(frames,time,ColorTimeline.ENTRIES);r=frames[frame+ColorTimeline.PREV_R];g=frames[frame+ColorTimeline.PREV_G];b=frames[frame+ColorTimeline.PREV_B];a=frames[frame+ColorTimeline.PREV_A];var frameTime=frames[frame];var percent=this.getCurvePercent(frame/ColorTimeline.ENTRIES-1,1-(time-frameTime)/(frames[frame+ColorTimeline.PREV_TIME]-frameTime));r+=(frames[frame+ColorTimeline.R]-r)*percent;g+=(frames[frame+ColorTimeline.G]-g)*percent;b+=(frames[frame+ColorTimeline.B]-b)*percent;a+=(frames[frame+ColorTimeline.A]-a)*percent}if(alpha==1)slot.color.set(r,g,b,a);else{var color=slot.color;if(blend==MixBlend.setup)color.setFromColor(slot.data.color);color.add((r-color.r)*alpha,(g-color.g)*alpha,(b-color.b)*alpha,(a-color.a)*alpha)}};ColorTimeline.ENTRIES=5;ColorTimeline.PREV_TIME=-5;ColorTimeline.PREV_R=-4;ColorTimeline.PREV_G=-3;ColorTimeline.PREV_B=-2;ColorTimeline.PREV_A=-1;ColorTimeline.R=1;ColorTimeline.G=2;ColorTimeline.B=3;ColorTimeline.A=4;return ColorTimeline}(CurveTimeline));core.ColorTimeline=ColorTimeline;var TwoColorTimeline=(function(_super){__extends(TwoColorTimeline,_super);function TwoColorTimeline(frameCount){var _this=_super.call(this,frameCount)||this;_this.frames=core.Utils.newFloatArray(frameCount*TwoColorTimeline.ENTRIES);return _this}TwoColorTimeline.prototype.getPropertyId=function(){return(TimelineType.twoColor<<24)+this.slotIndex};TwoColorTimeline.prototype.setFrame=function(frameIndex,time,r,g,b,a,r2,g2,b2){frameIndex*=TwoColorTimeline.ENTRIES;this.frames[frameIndex]=time;this.frames[frameIndex+TwoColorTimeline.R]=r;this.frames[frameIndex+TwoColorTimeline.G]=g;this.frames[frameIndex+TwoColorTimeline.B]=b;this.frames[frameIndex+TwoColorTimeline.A]=a;this.frames[frameIndex+TwoColorTimeline.R2]=r2;this.frames[frameIndex+TwoColorTimeline.G2]=g2;this.frames[frameIndex+TwoColorTimeline.B2]=b2};TwoColorTimeline.prototype.apply=function(skeleton,lastTime,time,events,alpha,blend,direction){var slot=skeleton.slots[this.slotIndex];var frames=this.frames;if(time<frames[0]){switch(blend){case MixBlend.setup:slot.color.setFromColor(slot.data.color);slot.darkColor.setFromColor(slot.data.darkColor);return;case MixBlend.first:var light=slot.color,dark=slot.darkColor,setupLight=slot.data.color,setupDark=slot.data.darkColor;light.add((setupLight.r-light.r)*alpha,(setupLight.g-light.g)*alpha,(setupLight.b-light.b)*alpha,(setupLight.a-light.a)*alpha);dark.add((setupDark.r-dark.r)*alpha,(setupDark.g-dark.g)*alpha,(setupDark.b-dark.b)*alpha,0)}return}var r=0,g=0,b=0,a=0,r2=0,g2=0,b2=0;if(time>=frames[frames.length-TwoColorTimeline.ENTRIES]){var i=frames.length;r=frames[i+TwoColorTimeline.PREV_R];g=frames[i+TwoColorTimeline.PREV_G];b=frames[i+TwoColorTimeline.PREV_B];a=frames[i+TwoColorTimeline.PREV_A];r2=frames[i+TwoColorTimeline.PREV_R2];g2=frames[i+TwoColorTimeline.PREV_G2];b2=frames[i+TwoColorTimeline.PREV_B2]}else{var frame=Animation.binarySearch(frames,time,TwoColorTimeline.ENTRIES);r=frames[frame+TwoColorTimeline.PREV_R];g=frames[frame+TwoColorTimeline.PREV_G];b=frames[frame+TwoColorTimeline.PREV_B];a=frames[frame+TwoColorTimeline.PREV_A];r2=frames[frame+TwoColorTimeline.PREV_R2];g2=frames[frame+TwoColorTimeline.PREV_G2];b2=frames[frame+TwoColorTimeline.PREV_B2];var frameTime=frames[frame];var percent=this.getCurvePercent(frame/TwoColorTimeline.ENTRIES-1,1-(time-frameTime)/(frames[frame+TwoColorTimeline.PREV_TIME]-frameTime));r+=(frames[frame+TwoColorTimeline.R]-r)*percent;g+=(frames[frame+TwoColorTimeline.G]-g)*percent;b+=(frames[frame+TwoColorTimeline.B]-b)*percent;a+=(frames[frame+TwoColorTimeline.A]-a)*percent;r2+=(frames[frame+TwoColorTimeline.R2]-r2)*percent;g2+=(frames[frame+TwoColorTimeline.G2]-g2)*percent;b2+=(frames[frame+TwoColorTimeline.B2]-b2)*percent}if(alpha==1){slot.color.set(r,g,b,a);slot.darkColor.set(r2,g2,b2,1)}else{var light=slot.color,dark=slot.darkColor;if(blend==MixBlend.setup){light.setFromColor(slot.data.color);dark.setFromColor(slot.data.darkColor)}light.add((r-light.r)*alpha,(g-light.g)*alpha,(b-light.b)*alpha,(a-light.a)*alpha);dark.add((r2-dark.r)*alpha,(g2-dark.g)*alpha,(b2-dark.b)*alpha,0)}};TwoColorTimeline.ENTRIES=8;TwoColorTimeline.PREV_TIME=-8;TwoColorTimeline.PREV_R=-7;TwoColorTimeline.PREV_G=-6;TwoColorTimeline.PREV_B=-5;TwoColorTimeline.PREV_A=-4;TwoColorTimeline.PREV_R2=-3;TwoColorTimeline.PREV_G2=-2;TwoColorTimeline.PREV_B2=-1;TwoColorTimeline.R=1;TwoColorTimeline.G=2;TwoColorTimeline.B=3;TwoColorTimeline.A=4;TwoColorTimeline.R2=5;TwoColorTimeline.G2=6;TwoColorTimeline.B2=7;return TwoColorTimeline}(CurveTimeline));core.TwoColorTimeline=TwoColorTimeline;var AttachmentTimeline=(function(){function AttachmentTimeline(frameCount){this.frames=core.Utils.newFloatArray(frameCount);this.attachmentNames=new Array(frameCount)}AttachmentTimeline.prototype.getPropertyId=function(){return(TimelineType.attachment<<24)+this.slotIndex};AttachmentTimeline.prototype.getFrameCount=function(){return this.frames.length};AttachmentTimeline.prototype.setFrame=function(frameIndex,time,attachmentName){this.frames[frameIndex]=time;this.attachmentNames[frameIndex]=attachmentName};AttachmentTimeline.prototype.apply=function(skeleton,lastTime,time,events,alpha,blend,direction){var slot=skeleton.slots[this.slotIndex];if(direction==MixDirection.out&&blend==MixBlend.setup){var attachmentName_1=slot.data.attachmentName;slot.setAttachment(attachmentName_1==null?null:skeleton.getAttachment(this.slotIndex,attachmentName_1));return}var frames=this.frames;if(time<frames[0]){if(blend==MixBlend.setup||blend==MixBlend.first){var attachmentName_2=slot.data.attachmentName;slot.setAttachment(attachmentName_2==null?null:skeleton.getAttachment(this.slotIndex,attachmentName_2))}return}var frameIndex=0;if(time>=frames[frames.length-1])frameIndex=frames.length-1;else frameIndex=Animation.binarySearch(frames,time,1)-1;var attachmentName=this.attachmentNames[frameIndex];skeleton.slots[this.slotIndex].setAttachment(attachmentName==null?null:skeleton.getAttachment(this.slotIndex,attachmentName))};return AttachmentTimeline}());core.AttachmentTimeline=AttachmentTimeline;var zeros=null;var DeformTimeline=(function(_super){__extends(DeformTimeline,_super);function DeformTimeline(frameCount){var _this=_super.call(this,frameCount)||this;_this.frames=core.Utils.newFloatArray(frameCount);_this.frameVertices=new Array(frameCount);if(zeros==null)zeros=core.Utils.newFloatArray(64);return _this}DeformTimeline.prototype.getPropertyId=function(){return(TimelineType.deform<<27)+ +this.attachment.id+this.slotIndex};DeformTimeline.prototype.setFrame=function(frameIndex,time,vertices){this.frames[frameIndex]=time;this.frameVertices[frameIndex]=vertices};DeformTimeline.prototype.apply=function(skeleton,lastTime,time,firedEvents,alpha,blend,direction){var slot=skeleton.slots[this.slotIndex];var slotAttachment=slot.getAttachment();if(!(slotAttachment instanceof core.VertexAttachment)||!slotAttachment.applyDeform(this.attachment))return;var verticesArray=slot.attachmentVertices;if(verticesArray.length==0)blend=MixBlend.setup;var frameVertices=this.frameVertices;var vertexCount=frameVertices[0].length;var frames=this.frames;if(time<frames[0]){var vertexAttachment=slotAttachment;switch(blend){case MixBlend.setup:verticesArray.length=0;return;case MixBlend.first:if(alpha==1){verticesArray.length=0;break}var vertices_1=core.Utils.setArraySize(verticesArray,vertexCount);if(vertexAttachment.bones==null){var setupVertices=vertexAttachment.vertices;for(var i=0;i<vertexCount;i++)vertices_1[i]+=(setupVertices[i]-vertices_1[i])*alpha}else{alpha=1-alpha;for(var i=0;i<vertexCount;i++)vertices_1[i]*=alpha}}return}var vertices=core.Utils.setArraySize(verticesArray,vertexCount);if(time>=frames[frames.length-1]){var lastVertices=frameVertices[frames.length-1];if(alpha==1){if(blend==MixBlend.add){var vertexAttachment=slotAttachment;if(vertexAttachment.bones==null){var setupVertices=vertexAttachment.vertices;for(var i=0;i<vertexCount;i++){vertices[i]+=lastVertices[i]-setupVertices[i]}}else{for(var i=0;i<vertexCount;i++)vertices[i]+=lastVertices[i]}}else{core.Utils.arrayCopy(lastVertices,0,vertices,0,vertexCount)}}else{switch(blend){case MixBlend.setup:{var vertexAttachment_1=slotAttachment;if(vertexAttachment_1.bones==null){var setupVertices=vertexAttachment_1.vertices;for(var i=0;i<vertexCount;i++){var setup=setupVertices[i];vertices[i]=setup+(lastVertices[i]-setup)*alpha}}else{for(var i=0;i<vertexCount;i++)vertices[i]=lastVertices[i]*alpha}break}case MixBlend.first:case MixBlend.replace:for(var i=0;i<vertexCount;i++)vertices[i]+=(lastVertices[i]-vertices[i])*alpha;case MixBlend.add:var vertexAttachment=slotAttachment;if(vertexAttachment.bones==null){var setupVertices=vertexAttachment.vertices;for(var i=0;i<vertexCount;i++){vertices[i]+=(lastVertices[i]-setupVertices[i])*alpha}}else{for(var i=0;i<vertexCount;i++)vertices[i]+=lastVertices[i]*alpha}}}return}var frame=Animation.binarySearch(frames,time);var prevVertices=frameVertices[frame-1];var nextVertices=frameVertices[frame];var frameTime=frames[frame];var percent=this.getCurvePercent(frame-1,1-(time-frameTime)/(frames[frame-1]-frameTime));if(alpha==1){if(blend==MixBlend.add){var vertexAttachment=slotAttachment;if(vertexAttachment.bones==null){var setupVertices=vertexAttachment.vertices;for(var i=0;i<vertexCount;i++){var prev=prevVertices[i];vertices[i]+=prev+(nextVertices[i]-prev)*percent-setupVertices[i]}}else{for(var i=0;i<vertexCount;i++){var prev=prevVertices[i];vertices[i]+=prev+(nextVertices[i]-prev)*percent}}}else{for(var i=0;i<vertexCount;i++){var prev=prevVertices[i];vertices[i]=prev+(nextVertices[i]-prev)*percent}}}else{switch(blend){case MixBlend.setup:{var vertexAttachment_2=slotAttachment;if(vertexAttachment_2.bones==null){var setupVertices=vertexAttachment_2.vertices;for(var i=0;i<vertexCount;i++){var prev=prevVertices[i],setup=setupVertices[i];vertices[i]=setup+(prev+(nextVertices[i]-prev)*percent-setup)*alpha}}else{for(var i=0;i<vertexCount;i++){var prev=prevVertices[i];vertices[i]=(prev+(nextVertices[i]-prev)*percent)*alpha}}break}case MixBlend.first:case MixBlend.replace:for(var i=0;i<vertexCount;i++){var prev=prevVertices[i];vertices[i]+=(prev+(nextVertices[i]-prev)*percent-vertices[i])*alpha}break;case MixBlend.add:var vertexAttachment=slotAttachment;if(vertexAttachment.bones==null){var setupVertices=vertexAttachment.vertices;for(var i=0;i<vertexCount;i++){var prev=prevVertices[i];vertices[i]+=(prev+(nextVertices[i]-prev)*percent-setupVertices[i])*alpha}}else{for(var i=0;i<vertexCount;i++){var prev=prevVertices[i];vertices[i]+=(prev+(nextVertices[i]-prev)*percent)*alpha}}}}};return DeformTimeline}(CurveTimeline));core.DeformTimeline=DeformTimeline;var EventTimeline=(function(){function EventTimeline(frameCount){this.frames=core.Utils.newFloatArray(frameCount);this.events=new Array(frameCount)}EventTimeline.prototype.getPropertyId=function(){return TimelineType.event<<24};EventTimeline.prototype.getFrameCount=function(){return this.frames.length};EventTimeline.prototype.setFrame=function(frameIndex,event){this.frames[frameIndex]=event.time;this.events[frameIndex]=event};EventTimeline.prototype.apply=function(skeleton,lastTime,time,firedEvents,alpha,blend,direction){if(firedEvents==null)return;var frames=this.frames;var frameCount=this.frames.length;if(lastTime>time){this.apply(skeleton,lastTime,Number.MAX_VALUE,firedEvents,alpha,blend,direction);lastTime=-1}else if(lastTime>=frames[frameCount-1])return;if(time<frames[0])return;var frame=0;if(lastTime<frames[0])frame=0;else{frame=Animation.binarySearch(frames,lastTime);var frameTime=frames[frame];while(frame>0){if(frames[frame-1]!=frameTime)break;frame--}}for(;frame<frameCount&&time>=frames[frame];frame++)firedEvents.push(this.events[frame]);};return EventTimeline}());core.EventTimeline=EventTimeline;var DrawOrderTimeline=(function(){function DrawOrderTimeline(frameCount){this.frames=core.Utils.newFloatArray(frameCount);this.drawOrders=new Array(frameCount)}DrawOrderTimeline.prototype.getPropertyId=function(){return TimelineType.drawOrder<<24};DrawOrderTimeline.prototype.getFrameCount=function(){return this.frames.length};DrawOrderTimeline.prototype.setFrame=function(frameIndex,time,drawOrder){this.frames[frameIndex]=time;this.drawOrders[frameIndex]=drawOrder};DrawOrderTimeline.prototype.apply=function(skeleton,lastTime,time,firedEvents,alpha,blend,direction){var drawOrder=skeleton.drawOrder;var slots=skeleton.slots;if(direction==MixDirection.out&&blend==MixBlend.setup){core.Utils.arrayCopy(skeleton.slots,0,skeleton.drawOrder,0,skeleton.slots.length);return}var frames=this.frames;if(time<frames[0]){if(blend==MixBlend.setup||blend==MixBlend.first)core.Utils.arrayCopy(skeleton.slots,0,skeleton.drawOrder,0,skeleton.slots.length);return}var frame=0;if(time>=frames[frames.length-1])frame=frames.length-1;else frame=Animation.binarySearch(frames,time)-1;var drawOrderToSetupIndex=this.drawOrders[frame];if(drawOrderToSetupIndex==null)core.Utils.arrayCopy(slots,0,drawOrder,0,slots.length);else{for(var i=0,n=drawOrderToSetupIndex.length;i<n;i++)drawOrder[i]=slots[drawOrderToSetupIndex[i]]}};return DrawOrderTimeline}());core.DrawOrderTimeline=DrawOrderTimeline;var IkConstraintTimeline=(function(_super){__extends(IkConstraintTimeline,_super);function IkConstraintTimeline(frameCount){var _this=_super.call(this,frameCount)||this;_this.frames=core.Utils.newFloatArray(frameCount*IkConstraintTimeline.ENTRIES);return _this}IkConstraintTimeline.prototype.getPropertyId=function(){return(TimelineType.ikConstraint<<24)+this.ikConstraintIndex};IkConstraintTimeline.prototype.setFrame=function(frameIndex,time,mix,bendDirection,compress,stretch){frameIndex*=IkConstraintTimeline.ENTRIES;this.frames[frameIndex]=time;this.frames[frameIndex+IkConstraintTimeline.MIX]=mix;this.frames[frameIndex+IkConstraintTimeline.BEND_DIRECTION]=bendDirection;this.frames[frameIndex+IkConstraintTimeline.COMPRESS]=compress?1:0;this.frames[frameIndex+IkConstraintTimeline.STRETCH]=stretch?1:0};IkConstraintTimeline.prototype.apply=function(skeleton,lastTime,time,firedEvents,alpha,blend,direction){var frames=this.frames;var constraint=skeleton.ikConstraints[this.ikConstraintIndex];if(time<frames[0]){switch(blend){case MixBlend.setup:constraint.mix=constraint.data.mix;constraint.bendDirection=constraint.data.bendDirection;constraint.compress=constraint.data.compress;constraint.stretch=constraint.data.stretch;return;case MixBlend.first:constraint.mix+=(constraint.data.mix-constraint.mix)*alpha;constraint.bendDirection=constraint.data.bendDirection;constraint.compress=constraint.data.compress;constraint.stretch=constraint.data.stretch}return}if(time>=frames[frames.length-IkConstraintTimeline.ENTRIES]){if(blend==MixBlend.setup){constraint.mix=constraint.data.mix+(frames[frames.length+IkConstraintTimeline.PREV_MIX]-constraint.data.mix)*alpha;if(direction==MixDirection.out){constraint.bendDirection=constraint.data.bendDirection;constraint.compress=constraint.data.compress;constraint.stretch=constraint.data.stretch}else{constraint.bendDirection=frames[frames.length+IkConstraintTimeline.PREV_BEND_DIRECTION];constraint.compress=frames[frames.length+IkConstraintTimeline.PREV_COMPRESS]!=0;constraint.stretch=frames[frames.length+IkConstraintTimeline.PREV_STRETCH]!=0}}else{constraint.mix+=(frames[frames.length+IkConstraintTimeline.PREV_MIX]-constraint.mix)*alpha;if(direction==MixDirection.in){constraint.bendDirection=frames[frames.length+IkConstraintTimeline.PREV_BEND_DIRECTION];constraint.compress=frames[frames.length+IkConstraintTimeline.PREV_COMPRESS]!=0;constraint.stretch=frames[frames.length+IkConstraintTimeline.PREV_STRETCH]!=0}}return}var frame=Animation.binarySearch(frames,time,IkConstraintTimeline.ENTRIES);var mix=frames[frame+IkConstraintTimeline.PREV_MIX];var frameTime=frames[frame];var percent=this.getCurvePercent(frame/IkConstraintTimeline.ENTRIES-1,1-(time-frameTime)/(frames[frame+IkConstraintTimeline.PREV_TIME]-frameTime));if(blend==MixBlend.setup){constraint.mix=constraint.data.mix+(mix+(frames[frame+IkConstraintTimeline.MIX]-mix)*percent-constraint.data.mix)*alpha;if(direction==MixDirection.out){constraint.bendDirection=constraint.data.bendDirection;constraint.compress=constraint.data.compress;constraint.stretch=constraint.data.stretch}else{constraint.bendDirection=frames[frame+IkConstraintTimeline.PREV_BEND_DIRECTION];constraint.compress=frames[frame+IkConstraintTimeline.PREV_COMPRESS]!=0;constraint.stretch=frames[frame+IkConstraintTimeline.PREV_STRETCH]!=0}}else{constraint.mix+=(mix+(frames[frame+IkConstraintTimeline.MIX]-mix)*percent-constraint.mix)*alpha;if(direction==MixDirection.in){constraint.bendDirection=frames[frame+IkConstraintTimeline.PREV_BEND_DIRECTION];constraint.compress=frames[frame+IkConstraintTimeline.PREV_COMPRESS]!=0;constraint.stretch=frames[frame+IkConstraintTimeline.PREV_STRETCH]!=0}}};IkConstraintTimeline.ENTRIES=5;IkConstraintTimeline.PREV_TIME=-5;IkConstraintTimeline.PREV_MIX=-4;IkConstraintTimeline.PREV_BEND_DIRECTION=-3;IkConstraintTimeline.PREV_COMPRESS=-2;IkConstraintTimeline.PREV_STRETCH=-1;IkConstraintTimeline.MIX=1;IkConstraintTimeline.BEND_DIRECTION=2;IkConstraintTimeline.COMPRESS=3;IkConstraintTimeline.STRETCH=4;return IkConstraintTimeline}(CurveTimeline));core.IkConstraintTimeline=IkConstraintTimeline;var TransformConstraintTimeline=(function(_super){__extends(TransformConstraintTimeline,_super);function TransformConstraintTimeline(frameCount){var _this=_super.call(this,frameCount)||this;_this.frames=core.Utils.newFloatArray(frameCount*TransformConstraintTimeline.ENTRIES);return _this}TransformConstraintTimeline.prototype.getPropertyId=function(){return(TimelineType.transformConstraint<<24)+this.transformConstraintIndex};TransformConstraintTimeline.prototype.setFrame=function(frameIndex,time,rotateMix,translateMix,scaleMix,shearMix){frameIndex*=TransformConstraintTimeline.ENTRIES;this.frames[frameIndex]=time;this.frames[frameIndex+TransformConstraintTimeline.ROTATE]=rotateMix;this.frames[frameIndex+TransformConstraintTimeline.TRANSLATE]=translateMix;this.frames[frameIndex+TransformConstraintTimeline.SCALE]=scaleMix;this.frames[frameIndex+TransformConstraintTimeline.SHEAR]=shearMix};TransformConstraintTimeline.prototype.apply=function(skeleton,lastTime,time,firedEvents,alpha,blend,direction){var frames=this.frames;var constraint=skeleton.transformConstraints[this.transformConstraintIndex];if(time<frames[0]){var data=constraint.data;switch(blend){case MixBlend.setup:constraint.rotateMix=data.rotateMix;constraint.translateMix=data.translateMix;constraint.scaleMix=data.scaleMix;constraint.shearMix=data.shearMix;return;case MixBlend.first:constraint.rotateMix+=(data.rotateMix-constraint.rotateMix)*alpha;constraint.translateMix+=(data.translateMix-constraint.translateMix)*alpha;constraint.scaleMix+=(data.scaleMix-constraint.scaleMix)*alpha;constraint.shearMix+=(data.shearMix-constraint.shearMix)*alpha}return}var rotate=0,translate=0,scale=0,shear=0;if(time>=frames[frames.length-TransformConstraintTimeline.ENTRIES]){var i=frames.length;rotate=frames[i+TransformConstraintTimeline.PREV_ROTATE];translate=frames[i+TransformConstraintTimeline.PREV_TRANSLATE];scale=frames[i+TransformConstraintTimeline.PREV_SCALE];shear=frames[i+TransformConstraintTimeline.PREV_SHEAR]}else{var frame=Animation.binarySearch(frames,time,TransformConstraintTimeline.ENTRIES);rotate=frames[frame+TransformConstraintTimeline.PREV_ROTATE];translate=frames[frame+TransformConstraintTimeline.PREV_TRANSLATE];scale=frames[frame+TransformConstraintTimeline.PREV_SCALE];shear=frames[frame+TransformConstraintTimeline.PREV_SHEAR];var frameTime=frames[frame];var percent=this.getCurvePercent(frame/TransformConstraintTimeline.ENTRIES-1,1-(time-frameTime)/(frames[frame+TransformConstraintTimeline.PREV_TIME]-frameTime));rotate+=(frames[frame+TransformConstraintTimeline.ROTATE]-rotate)*percent;translate+=(frames[frame+TransformConstraintTimeline.TRANSLATE]-translate)*percent;scale+=(frames[frame+TransformConstraintTimeline.SCALE]-scale)*percent;shear+=(frames[frame+TransformConstraintTimeline.SHEAR]-shear)*percent}if(blend==MixBlend.setup){var data=constraint.data;constraint.rotateMix=data.rotateMix+(rotate-data.rotateMix)*alpha;constraint.translateMix=data.translateMix+(translate-data.translateMix)*alpha;constraint.scaleMix=data.scaleMix+(scale-data.scaleMix)*alpha;constraint.shearMix=data.shearMix+(shear-data.shearMix)*alpha}else{constraint.rotateMix+=(rotate-constraint.rotateMix)*alpha;constraint.translateMix+=(translate-constraint.translateMix)*alpha;constraint.scaleMix+=(scale-constraint.scaleMix)*alpha;constraint.shearMix+=(shear-constraint.shearMix)*alpha}};TransformConstraintTimeline.ENTRIES=5;TransformConstraintTimeline.PREV_TIME=-5;TransformConstraintTimeline.PREV_ROTATE=-4;TransformConstraintTimeline.PREV_TRANSLATE=-3;TransformConstraintTimeline.PREV_SCALE=-2;TransformConstraintTimeline.PREV_SHEAR=-1;TransformConstraintTimeline.ROTATE=1;TransformConstraintTimeline.TRANSLATE=2;TransformConstraintTimeline.SCALE=3;TransformConstraintTimeline.SHEAR=4;return TransformConstraintTimeline}(CurveTimeline));core.TransformConstraintTimeline=TransformConstraintTimeline;var PathConstraintPositionTimeline=(function(_super){__extends(PathConstraintPositionTimeline,_super);function PathConstraintPositionTimeline(frameCount){var _this=_super.call(this,frameCount)||this;_this.frames=core.Utils.newFloatArray(frameCount*PathConstraintPositionTimeline.ENTRIES);return _this}PathConstraintPositionTimeline.prototype.getPropertyId=function(){return(TimelineType.pathConstraintPosition<<24)+this.pathConstraintIndex};PathConstraintPositionTimeline.prototype.setFrame=function(frameIndex,time,value){frameIndex*=PathConstraintPositionTimeline.ENTRIES;this.frames[frameIndex]=time;this.frames[frameIndex+PathConstraintPositionTimeline.VALUE]=value};PathConstraintPositionTimeline.prototype.apply=function(skeleton,lastTime,time,firedEvents,alpha,blend,direction){var frames=this.frames;var constraint=skeleton.pathConstraints[this.pathConstraintIndex];if(time<frames[0]){switch(blend){case MixBlend.setup:constraint.position=constraint.data.position;return;case MixBlend.first:constraint.position+=(constraint.data.position-constraint.position)*alpha}return}var position=0;if(time>=frames[frames.length-PathConstraintPositionTimeline.ENTRIES])position=frames[frames.length+PathConstraintPositionTimeline.PREV_VALUE];else{var frame=Animation.binarySearch(frames,time,PathConstraintPositionTimeline.ENTRIES);position=frames[frame+PathConstraintPositionTimeline.PREV_VALUE];var frameTime=frames[frame];var percent=this.getCurvePercent(frame/PathConstraintPositionTimeline.ENTRIES-1,1-(time-frameTime)/(frames[frame+PathConstraintPositionTimeline.PREV_TIME]-frameTime));position+=(frames[frame+PathConstraintPositionTimeline.VALUE]-position)*percent}if(blend==MixBlend.setup)constraint.position=constraint.data.position+(position-constraint.data.position)*alpha;else constraint.position+=(position-constraint.position)*alpha};PathConstraintPositionTimeline.ENTRIES=2;PathConstraintPositionTimeline.PREV_TIME=-2;PathConstraintPositionTimeline.PREV_VALUE=-1;PathConstraintPositionTimeline.VALUE=1;return PathConstraintPositionTimeline}(CurveTimeline));core.PathConstraintPositionTimeline=PathConstraintPositionTimeline;var PathConstraintSpacingTimeline=(function(_super){__extends(PathConstraintSpacingTimeline,_super);function PathConstraintSpacingTimeline(frameCount){return _super.call(this,frameCount)||this}PathConstraintSpacingTimeline.prototype.getPropertyId=function(){return(TimelineType.pathConstraintSpacing<<24)+this.pathConstraintIndex};PathConstraintSpacingTimeline.prototype.apply=function(skeleton,lastTime,time,firedEvents,alpha,blend,direction){var frames=this.frames;var constraint=skeleton.pathConstraints[this.pathConstraintIndex];if(time<frames[0]){switch(blend){case MixBlend.setup:constraint.spacing=constraint.data.spacing;return;case MixBlend.first:constraint.spacing+=(constraint.data.spacing-constraint.spacing)*alpha}return}var spacing=0;if(time>=frames[frames.length-PathConstraintSpacingTimeline.ENTRIES])spacing=frames[frames.length+PathConstraintSpacingTimeline.PREV_VALUE];else{var frame=Animation.binarySearch(frames,time,PathConstraintSpacingTimeline.ENTRIES);spacing=frames[frame+PathConstraintSpacingTimeline.PREV_VALUE];var frameTime=frames[frame];var percent=this.getCurvePercent(frame/PathConstraintSpacingTimeline.ENTRIES-1,1-(time-frameTime)/(frames[frame+PathConstraintSpacingTimeline.PREV_TIME]-frameTime));spacing+=(frames[frame+PathConstraintSpacingTimeline.VALUE]-spacing)*percent}if(blend==MixBlend.setup)constraint.spacing=constraint.data.spacing+(spacing-constraint.data.spacing)*alpha;else constraint.spacing+=(spacing-constraint.spacing)*alpha};return PathConstraintSpacingTimeline}(PathConstraintPositionTimeline));core.PathConstraintSpacingTimeline=PathConstraintSpacingTimeline;var PathConstraintMixTimeline=(function(_super){__extends(PathConstraintMixTimeline,_super);function PathConstraintMixTimeline(frameCount){var _this=_super.call(this,frameCount)||this;_this.frames=core.Utils.newFloatArray(frameCount*PathConstraintMixTimeline.ENTRIES);return _this}PathConstraintMixTimeline.prototype.getPropertyId=function(){return(TimelineType.pathConstraintMix<<24)+this.pathConstraintIndex};PathConstraintMixTimeline.prototype.setFrame=function(frameIndex,time,rotateMix,translateMix){frameIndex*=PathConstraintMixTimeline.ENTRIES;this.frames[frameIndex]=time;this.frames[frameIndex+PathConstraintMixTimeline.ROTATE]=rotateMix;this.frames[frameIndex+PathConstraintMixTimeline.TRANSLATE]=translateMix};PathConstraintMixTimeline.prototype.apply=function(skeleton,lastTime,time,firedEvents,alpha,blend,direction){var frames=this.frames;var constraint=skeleton.pathConstraints[this.pathConstraintIndex];if(time<frames[0]){switch(blend){case MixBlend.setup:constraint.rotateMix=constraint.data.rotateMix;constraint.translateMix=constraint.data.translateMix;return;case MixBlend.first:constraint.rotateMix+=(constraint.data.rotateMix-constraint.rotateMix)*alpha;constraint.translateMix+=(constraint.data.translateMix-constraint.translateMix)*alpha}return}var rotate=0,translate=0;if(time>=frames[frames.length-PathConstraintMixTimeline.ENTRIES]){rotate=frames[frames.length+PathConstraintMixTimeline.PREV_ROTATE];translate=frames[frames.length+PathConstraintMixTimeline.PREV_TRANSLATE]}else{var frame=Animation.binarySearch(frames,time,PathConstraintMixTimeline.ENTRIES);rotate=frames[frame+PathConstraintMixTimeline.PREV_ROTATE];translate=frames[frame+PathConstraintMixTimeline.PREV_TRANSLATE];var frameTime=frames[frame];var percent=this.getCurvePercent(frame/PathConstraintMixTimeline.ENTRIES-1,1-(time-frameTime)/(frames[frame+PathConstraintMixTimeline.PREV_TIME]-frameTime));rotate+=(frames[frame+PathConstraintMixTimeline.ROTATE]-rotate)*percent;translate+=(frames[frame+PathConstraintMixTimeline.TRANSLATE]-translate)*percent}if(blend==MixBlend.setup){constraint.rotateMix=constraint.data.rotateMix+(rotate-constraint.data.rotateMix)*alpha;constraint.translateMix=constraint.data.translateMix+(translate-constraint.data.translateMix)*alpha}else{constraint.rotateMix+=(rotate-constraint.rotateMix)*alpha;constraint.translateMix+=(translate-constraint.translateMix)*alpha}};PathConstraintMixTimeline.ENTRIES=3;PathConstraintMixTimeline.PREV_TIME=-3;PathConstraintMixTimeline.PREV_ROTATE=-2;PathConstraintMixTimeline.PREV_TRANSLATE=-1;PathConstraintMixTimeline.ROTATE=1;PathConstraintMixTimeline.TRANSLATE=2;return PathConstraintMixTimeline}(CurveTimeline));core.PathConstraintMixTimeline=PathConstraintMixTimeline})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var AnimationState=(function(){function AnimationState(data){this.tracks=new Array();this.events=new Array();this.listeners=new Array();this.queue=new EventQueue(this);this.propertyIDs=new core.IntSet();this.animationsChanged=!1;this.timeScale=1;this.trackEntryPool=new core.Pool(function(){return new TrackEntry()});this.data=data}AnimationState.prototype.update=function(delta){delta*=this.timeScale;var tracks=this.tracks;for(var i=0,n=tracks.length;i<n;i++){var current=tracks[i];if(current==null)continue;current.animationLast=current.nextAnimationLast;current.trackLast=current.nextTrackLast;var currentDelta=delta*current.timeScale;if(current.delay>0){current.delay-=currentDelta;if(current.delay>0)continue;currentDelta=-current.delay;current.delay=0}var next=current.next;if(next!=null){var nextTime=current.trackLast-next.delay;if(nextTime>=0){next.delay=0;next.trackTime=current.timeScale==0?0:(nextTime/current.timeScale+delta)*next.timeScale;current.trackTime+=currentDelta;this.setCurrent(i,next,!0);while(next.mixingFrom!=null){next.mixTime+=delta;next=next.mixingFrom}continue}}else if(current.trackLast>=current.trackEnd&&current.mixingFrom==null){tracks[i]=null;this.queue.end(current);this.disposeNext(current);continue}if(current.mixingFrom!=null&&this.updateMixingFrom(current,delta)){var from=current.mixingFrom;current.mixingFrom=null;if(from!=null)from.mixingTo=null;while(from!=null){this.queue.end(from);from=from.mixingFrom}}current.trackTime+=currentDelta}this.queue.drain()};AnimationState.prototype.updateMixingFrom=function(to,delta){var from=to.mixingFrom;if(from==null)return!0;var finished=this.updateMixingFrom(from,delta);from.animationLast=from.nextAnimationLast;from.trackLast=from.nextTrackLast;if(to.mixTime>0&&to.mixTime>=to.mixDuration){if(from.totalAlpha==0||to.mixDuration==0){to.mixingFrom=from.mixingFrom;if(from.mixingFrom!=null)from.mixingFrom.mixingTo=to;to.interruptAlpha=from.interruptAlpha;this.queue.end(from)}return finished}from.trackTime+=delta*from.timeScale;to.mixTime+=delta;return!1};AnimationState.prototype.apply=function(skeleton){if(skeleton==null)throw new Error("skeleton cannot be null.");if(this.animationsChanged)this._animationsChanged();var events=this.events;var tracks=this.tracks;var applied=!1;for(var i=0,n=tracks.length;i<n;i++){var current=tracks[i];if(current==null||current.delay>0)continue;applied=!0;var blend=i==0?core.MixBlend.first:current.mixBlend;var mix=current.alpha;if(current.mixingFrom!=null)mix*=this.applyMixingFrom(current,skeleton,blend);else if(current.trackTime>=current.trackEnd&&current.next==null)mix=0;var animationLast=current.animationLast,animationTime=current.getAnimationTime();var timelineCount=current.animation.timelines.length;var timelines=current.animation.timelines;if((i==0&&mix==1)||blend==core.MixBlend.add){for(var ii=0;ii<timelineCount;ii++){core.Utils.webkit602BugfixHelper(mix,blend);timelines[ii].apply(skeleton,animationLast,animationTime,events,mix,blend,core.MixDirection.in)}}else{var timelineMode=current.timelineMode;var firstFrame=current.timelinesRotation.length==0;if(firstFrame)core.Utils.setArraySize(current.timelinesRotation,timelineCount<<1,null);var timelinesRotation=current.timelinesRotation;for(var ii=0;ii<timelineCount;ii++){var timeline=timelines[ii];var timelineBlend=timelineMode[ii]==AnimationState.SUBSEQUENT?blend:core.MixBlend.setup;if(timeline instanceof core.RotateTimeline){this.applyRotateTimeline(timeline,skeleton,animationTime,mix,timelineBlend,timelinesRotation,ii<<1,firstFrame)}else{core.Utils.webkit602BugfixHelper(mix,blend);timeline.apply(skeleton,animationLast,animationTime,events,mix,timelineBlend,core.MixDirection.in)}}}this.queueEvents(current,animationTime);events.length=0;current.nextAnimationLast=animationTime;current.nextTrackLast=current.trackTime}this.queue.drain();return applied};AnimationState.prototype.applyMixingFrom=function(to,skeleton,blend){var from=to.mixingFrom;if(from.mixingFrom!=null)this.applyMixingFrom(from,skeleton,blend);var mix=0;if(to.mixDuration==0){mix=1;if(blend==core.MixBlend.first)blend=core.MixBlend.setup}else{mix=to.mixTime/to.mixDuration;if(mix>1)mix=1;if(blend!=core.MixBlend.first)blend=from.mixBlend}var events=mix<from.eventThreshold?this.events:null;var attachments=mix<from.attachmentThreshold,drawOrder=mix<from.drawOrderThreshold;var animationLast=from.animationLast,animationTime=from.getAnimationTime();var timelineCount=from.animation.timelines.length;var timelines=from.animation.timelines;var alphaHold=from.alpha*to.interruptAlpha,alphaMix=alphaHold*(1-mix);if(blend==core.MixBlend.add){for(var i=0;i<timelineCount;i++)timelines[i].apply(skeleton,animationLast,animationTime,events,alphaMix,blend,core.MixDirection.out);}else{var timelineMode=from.timelineMode;var timelineHoldMix=from.timelineHoldMix;var firstFrame=from.timelinesRotation.length==0;if(firstFrame)core.Utils.setArraySize(from.timelinesRotation,timelineCount<<1,null);var timelinesRotation=from.timelinesRotation;from.totalAlpha=0;for(var i=0;i<timelineCount;i++){var timeline=timelines[i];var direction=core.MixDirection.out;var timelineBlend=void 0;var alpha=0;switch(timelineMode[i]){case AnimationState.SUBSEQUENT:if(!attachments&&timeline instanceof core.AttachmentTimeline)continue;if(!drawOrder&&timeline instanceof core.DrawOrderTimeline)continue;timelineBlend=blend;alpha=alphaMix;break;case AnimationState.FIRST:timelineBlend=core.MixBlend.setup;alpha=alphaMix;break;case AnimationState.HOLD:timelineBlend=core.MixBlend.setup;alpha=alphaHold;break;default:timelineBlend=core.MixBlend.setup;var holdMix=timelineHoldMix[i];alpha=alphaHold*Math.max(0,1-holdMix.mixTime/holdMix.mixDuration);break}from.totalAlpha+=alpha;if(timeline instanceof core.RotateTimeline)this.applyRotateTimeline(timeline,skeleton,animationTime,alpha,timelineBlend,timelinesRotation,i<<1,firstFrame);else{core.Utils.webkit602BugfixHelper(alpha,blend);if(timelineBlend==core.MixBlend.setup){if(timeline instanceof core.AttachmentTimeline){if(attachments)direction=core.MixDirection.out}else if(timeline instanceof core.DrawOrderTimeline){if(drawOrder)direction=core.MixDirection.out}}timeline.apply(skeleton,animationLast,animationTime,events,alpha,timelineBlend,direction)}}}if(to.mixDuration>0)this.queueEvents(from,animationTime);this.events.length=0;from.nextAnimationLast=animationTime;from.nextTrackLast=from.trackTime;return mix};AnimationState.prototype.applyRotateTimeline=function(timeline,skeleton,time,alpha,blend,timelinesRotation,i,firstFrame){if(firstFrame)timelinesRotation[i]=0;if(alpha==1){timeline.apply(skeleton,0,time,null,1,blend,core.MixDirection.in);return}var rotateTimeline=timeline;var frames=rotateTimeline.frames;var bone=skeleton.bones[rotateTimeline.boneIndex];var r1=0,r2=0;if(time<frames[0]){switch(blend){case core.MixBlend.setup:bone.rotation=bone.data.rotation;default:return;case core.MixBlend.first:r1=bone.rotation;r2=bone.data.rotation}}else{r1=blend==core.MixBlend.setup?bone.data.rotation:bone.rotation;if(time>=frames[frames.length-core.RotateTimeline.ENTRIES])r2=bone.data.rotation+frames[frames.length+core.RotateTimeline.PREV_ROTATION];else{var frame=core.Animation.binarySearch(frames,time,core.RotateTimeline.ENTRIES);var prevRotation=frames[frame+core.RotateTimeline.PREV_ROTATION];var frameTime=frames[frame];var percent=rotateTimeline.getCurvePercent((frame>>1)-1,1-(time-frameTime)/(frames[frame+core.RotateTimeline.PREV_TIME]-frameTime));r2=frames[frame+core.RotateTimeline.ROTATION]-prevRotation;r2-=(16384-((16384.499999999996-r2/360)|0))*360;r2=prevRotation+r2*percent+bone.data.rotation;r2-=(16384-((16384.499999999996-r2/360)|0))*360}}var total=0,diff=r2-r1;diff-=(16384-((16384.499999999996-diff/360)|0))*360;if(diff==0){total=timelinesRotation[i]}else{var lastTotal=0,lastDiff=0;if(firstFrame){lastTotal=0;lastDiff=diff}else{lastTotal=timelinesRotation[i];lastDiff=timelinesRotation[i+1]}var current=diff>0,dir=lastTotal>=0;if(core.MathUtils.signum(lastDiff)!=core.MathUtils.signum(diff)&&Math.abs(lastDiff)<=90){if(Math.abs(lastTotal)>180)lastTotal+=360*core.MathUtils.signum(lastTotal);dir=current}total=diff+lastTotal-lastTotal%360;if(dir!=current)total+=360*core.MathUtils.signum(lastTotal);timelinesRotation[i]=total}timelinesRotation[i+1]=diff;r1+=total*alpha;bone.rotation=r1-(16384-((16384.499999999996-r1/360)|0))*360};AnimationState.prototype.queueEvents=function(entry,animationTime){var animationStart=entry.animationStart,animationEnd=entry.animationEnd;var duration=animationEnd-animationStart;var trackLastWrapped=entry.trackLast%duration;var events=this.events;var i=0,n=events.length;for(;i<n;i++){var event_1=events[i];if(event_1.time<trackLastWrapped)break;if(event_1.time>animationEnd)continue;this.queue.event(entry,event_1)}var complete=!1;if(entry.loop)complete=duration==0||trackLastWrapped>entry.trackTime%duration;else complete=animationTime>=animationEnd&&entry.animationLast<animationEnd;if(complete)this.queue.complete(entry);for(;i<n;i++){var event_2=events[i];if(event_2.time<animationStart)continue;this.queue.event(entry,events[i])}};AnimationState.prototype.clearTracks=function(){var oldDrainDisabled=this.queue.drainDisabled;this.queue.drainDisabled=!0;for(var i=0,n=this.tracks.length;i<n;i++)this.clearTrack(i);this.tracks.length=0;this.queue.drainDisabled=oldDrainDisabled;this.queue.drain()};AnimationState.prototype.clearTrack=function(trackIndex){if(trackIndex>=this.tracks.length)return;var current=this.tracks[trackIndex];if(current==null)return;this.queue.end(current);this.disposeNext(current);var entry=current;while(!0){var from=entry.mixingFrom;if(from==null)break;this.queue.end(from);entry.mixingFrom=null;entry.mixingTo=null;entry=from}this.tracks[current.trackIndex]=null;this.queue.drain()};AnimationState.prototype.setCurrent=function(index,current,interrupt){var from=this.expandToIndex(index);this.tracks[index]=current;if(from!=null){if(interrupt)this.queue.interrupt(from);current.mixingFrom=from;from.mixingTo=current;current.mixTime=0;if(from.mixingFrom!=null&&from.mixDuration>0)current.interruptAlpha*=Math.min(1,from.mixTime/from.mixDuration);from.timelinesRotation.length=0}this.queue.start(current)};AnimationState.prototype.setAnimation=function(trackIndex,animationName,loop){var animation=this.data.skeletonData.findAnimation(animationName);if(animation==null)throw new Error("Animation not found: "+animationName);return this.setAnimationWith(trackIndex,animation,loop)};AnimationState.prototype.setAnimationWith=function(trackIndex,animation,loop){if(animation==null)throw new Error("animation cannot be null.");var interrupt=!0;var current=this.expandToIndex(trackIndex);if(current!=null){if(current.nextTrackLast==-1){this.tracks[trackIndex]=current.mixingFrom;this.queue.interrupt(current);this.queue.end(current);this.disposeNext(current);current=current.mixingFrom;interrupt=!1}else this.disposeNext(current)}var entry=this.trackEntry(trackIndex,animation,loop,current);this.setCurrent(trackIndex,entry,interrupt);this.queue.drain();return entry};AnimationState.prototype.addAnimation=function(trackIndex,animationName,loop,delay){var animation=this.data.skeletonData.findAnimation(animationName);if(animation==null)throw new Error("Animation not found: "+animationName);return this.addAnimationWith(trackIndex,animation,loop,delay)};AnimationState.prototype.addAnimationWith=function(trackIndex,animation,loop,delay){if(animation==null)throw new Error("animation cannot be null.");var last=this.expandToIndex(trackIndex);if(last!=null){while(last.next!=null)last=last.next}var entry=this.trackEntry(trackIndex,animation,loop,last);if(last==null){this.setCurrent(trackIndex,entry,!0);this.queue.drain()}else{last.next=entry;if(delay<=0){var duration=last.animationEnd-last.animationStart;if(duration!=0){if(last.loop)delay+=duration*(1+((last.trackTime/duration)|0));else delay+=Math.max(duration,last.trackTime);delay-=this.data.getMix(last.animation,animation)}else delay=last.trackTime}}entry.delay=delay;return entry};AnimationState.prototype.setEmptyAnimation=function(trackIndex,mixDuration){var entry=this.setAnimationWith(trackIndex,AnimationState.emptyAnimation,!1);entry.mixDuration=mixDuration;entry.trackEnd=mixDuration;return entry};AnimationState.prototype.addEmptyAnimation=function(trackIndex,mixDuration,delay){if(delay<=0)delay-=mixDuration;var entry=this.addAnimationWith(trackIndex,AnimationState.emptyAnimation,!1,delay);entry.mixDuration=mixDuration;entry.trackEnd=mixDuration;return entry};AnimationState.prototype.setEmptyAnimations=function(mixDuration){var oldDrainDisabled=this.queue.drainDisabled;this.queue.drainDisabled=!0;for(var i=0,n=this.tracks.length;i<n;i++){var current=this.tracks[i];if(current!=null)this.setEmptyAnimation(current.trackIndex,mixDuration)}this.queue.drainDisabled=oldDrainDisabled;this.queue.drain()};AnimationState.prototype.expandToIndex=function(index){if(index<this.tracks.length)return this.tracks[index];core.Utils.ensureArrayCapacity(this.tracks,index-this.tracks.length+1,null);this.tracks.length=index+1;return null};AnimationState.prototype.trackEntry=function(trackIndex,animation,loop,last){var entry=this.trackEntryPool.obtain();entry.trackIndex=trackIndex;entry.animation=animation;entry.loop=loop;entry.holdPrevious=!1;entry.eventThreshold=0;entry.attachmentThreshold=0;entry.drawOrderThreshold=0;entry.animationStart=0;entry.animationEnd=animation.duration;entry.animationLast=-1;entry.nextAnimationLast=-1;entry.delay=0;entry.trackTime=0;entry.trackLast=-1;entry.nextTrackLast=-1;entry.trackEnd=Number.MAX_VALUE;entry.timeScale=1;entry.alpha=1;entry.interruptAlpha=1;entry.mixTime=0;entry.mixDuration=last==null?0:this.data.getMix(last.animation,animation);return entry};AnimationState.prototype.disposeNext=function(entry){var next=entry.next;while(next!=null){this.queue.dispose(next);next=next.next}entry.next=null};AnimationState.prototype._animationsChanged=function(){this.animationsChanged=!1;this.propertyIDs.clear();for(var i=0,n=this.tracks.length;i<n;i++){var entry=this.tracks[i];if(entry==null)continue;while(entry.mixingFrom!=null)entry=entry.mixingFrom;do{if(entry.mixingFrom==null||entry.mixBlend!=core.MixBlend.add)this.setTimelineModes(entry);entry=entry.mixingTo}while(entry!=null);}};AnimationState.prototype.setTimelineModes=function(entry){var to=entry.mixingTo;var timelines=entry.animation.timelines;var timelinesCount=entry.animation.timelines.length;var timelineMode=core.Utils.setArraySize(entry.timelineMode,timelinesCount);entry.timelineHoldMix.length=0;var timelineDipMix=core.Utils.setArraySize(entry.timelineHoldMix,timelinesCount);var propertyIDs=this.propertyIDs;if(to!=null&&to.holdPrevious){for(var i=0;i<timelinesCount;i++){propertyIDs.add(timelines[i].getPropertyId());timelineMode[i]=AnimationState.HOLD}return}outer:for(var i=0;i<timelinesCount;i++){var id=timelines[i].getPropertyId();if(!propertyIDs.add(id))timelineMode[i]=AnimationState.SUBSEQUENT;else if(to==null||!this.hasTimeline(to,id))timelineMode[i]=AnimationState.FIRST;else{for(var next=to.mixingTo;next!=null;next=next.mixingTo){if(this.hasTimeline(next,id))continue;if(entry.mixDuration>0){timelineMode[i]=AnimationState.HOLD_MIX;timelineDipMix[i]=next;continue outer}break}timelineMode[i]=AnimationState.HOLD}}};AnimationState.prototype.hasTimeline=function(entry,id){var timelines=entry.animation.timelines;for(var i=0,n=timelines.length;i<n;i++)if(timelines[i].getPropertyId()==id)return!0;return!1};AnimationState.prototype.getCurrent=function(trackIndex){if(trackIndex>=this.tracks.length)return null;return this.tracks[trackIndex]};AnimationState.prototype.addListener=function(listener){if(listener==null)throw new Error("listener cannot be null.");this.listeners.push(listener)};AnimationState.prototype.removeListener=function(listener){var index=this.listeners.indexOf(listener);if(index>=0)this.listeners.splice(index,1)};AnimationState.prototype.clearListeners=function(){this.listeners.length=0};AnimationState.prototype.clearListenerNotifications=function(){this.queue.clear()};AnimationState.prototype.setAnimationByName=function(trackIndex,animationName,loop){if(!AnimationState.deprecatedWarning1){AnimationState.deprecatedWarning1=!0;console.warn("Spine Deprecation Warning: AnimationState.setAnimationByName is deprecated, please use setAnimation from now on.")}this.setAnimation(trackIndex,animationName,loop)};AnimationState.prototype.addAnimationByName=function(trackIndex,animationName,loop,delay){if(!AnimationState.deprecatedWarning2){AnimationState.deprecatedWarning2=!0;console.warn("Spine Deprecation Warning: AnimationState.addAnimationByName is deprecated, please use addAnimation from now on.")}this.addAnimation(trackIndex,animationName,loop,delay)};AnimationState.prototype.hasAnimation=function(animationName){var animation=this.data.skeletonData.findAnimation(animationName);return animation!==null};AnimationState.prototype.hasAnimationByName=function(animationName){if(!AnimationState.deprecatedWarning3){AnimationState.deprecatedWarning3=!0;console.warn("Spine Deprecation Warning: AnimationState.hasAnimationByName is deprecated, please use hasAnimation from now on.")}return this.hasAnimation(animationName)};AnimationState.emptyAnimation=new core.Animation("<empty>",[],0);AnimationState.SUBSEQUENT=0;AnimationState.FIRST=1;AnimationState.HOLD=2;AnimationState.HOLD_MIX=3;AnimationState.deprecatedWarning1=!1;AnimationState.deprecatedWarning2=!1;AnimationState.deprecatedWarning3=!1;return AnimationState}());core.AnimationState=AnimationState;var TrackEntry=(function(){function TrackEntry(){this.mixBlend=core.MixBlend.replace;this.timelineMode=new Array();this.timelineHoldMix=new Array();this.timelinesRotation=new Array()}TrackEntry.prototype.reset=function(){this.next=null;this.mixingFrom=null;this.mixingTo=null;this.animation=null;this.listener=null;this.timelineMode.length=0;this.timelineHoldMix.length=0;this.timelinesRotation.length=0};TrackEntry.prototype.getAnimationTime=function(){if(this.loop){var duration=this.animationEnd-this.animationStart;if(duration==0)return this.animationStart;return(this.trackTime%duration)+this.animationStart}return Math.min(this.trackTime+this.animationStart,this.animationEnd)};TrackEntry.prototype.setAnimationLast=function(animationLast){this.animationLast=animationLast;this.nextAnimationLast=animationLast};TrackEntry.prototype.isComplete=function(){return this.trackTime>=this.animationEnd-this.animationStart};TrackEntry.prototype.resetRotationDirections=function(){this.timelinesRotation.length=0};Object.defineProperty(TrackEntry.prototype,"time",{get:function(){if(!TrackEntry.deprecatedWarning1){TrackEntry.deprecatedWarning1=!0;console.warn("Spine Deprecation Warning: TrackEntry.time is deprecated, please use trackTime from now on.")}return this.trackTime},set:function(value){if(!TrackEntry.deprecatedWarning1){TrackEntry.deprecatedWarning1=!0;console.warn("Spine Deprecation Warning: TrackEntry.time is deprecated, please use trackTime from now on.")}this.trackTime=value},enumerable:!0,configurable:!0});Object.defineProperty(TrackEntry.prototype,"endTime",{get:function(){if(!TrackEntry.deprecatedWarning2){TrackEntry.deprecatedWarning2=!0;console.warn("Spine Deprecation Warning: TrackEntry.endTime is deprecated, please use trackEnd from now on.")}return this.trackTime},set:function(value){if(!TrackEntry.deprecatedWarning2){TrackEntry.deprecatedWarning2=!0;console.warn("Spine Deprecation Warning: TrackEntry.endTime is deprecated, please use trackEnd from now on.")}this.trackTime=value},enumerable:!0,configurable:!0});TrackEntry.prototype.loopsCount=function(){return Math.floor(this.trackTime/this.trackEnd)};TrackEntry.deprecatedWarning1=!1;TrackEntry.deprecatedWarning2=!1;return TrackEntry}());core.TrackEntry=TrackEntry;var EventQueue=(function(){function EventQueue(animState){this.objects=[];this.drainDisabled=!1;this.animState=animState}EventQueue.prototype.start=function(entry){this.objects.push(EventType.start);this.objects.push(entry);this.animState.animationsChanged=!0};EventQueue.prototype.interrupt=function(entry){this.objects.push(EventType.interrupt);this.objects.push(entry)};EventQueue.prototype.end=function(entry){this.objects.push(EventType.end);this.objects.push(entry);this.animState.animationsChanged=!0};EventQueue.prototype.dispose=function(entry){this.objects.push(EventType.dispose);this.objects.push(entry)};EventQueue.prototype.complete=function(entry){this.objects.push(EventType.complete);this.objects.push(entry)};EventQueue.prototype.event=function(entry,event){this.objects.push(EventType.event);this.objects.push(entry);this.objects.push(event)};EventQueue.prototype.deprecateStuff=function(){if(!EventQueue.deprecatedWarning1){EventQueue.deprecatedWarning1=!0;console.warn("Spine Deprecation Warning: onComplete, onStart, onEnd, onEvent art deprecated, please use listeners from now on. 'state.addListener({complete: function(track, event){}})'")}return!0};EventQueue.prototype.drain=function(){if(this.drainDisabled)return;this.drainDisabled=!0;var objects=this.objects;var listeners=this.animState.listeners;for(var i=0;i<objects.length;i+=2){var type=objects[i];var entry=objects[i+1];switch(type){case EventType.start:if(entry.listener!=null&&entry.listener.start)entry.listener.start(entry);for(var ii=0;ii<listeners.length;ii++)if(listeners[ii].start)listeners[ii].start(entry);entry.onStart&&this.deprecateStuff()&&entry.onStart(entry.trackIndex);this.animState.onStart&&this.deprecateStuff()&&this.deprecateStuff&&this.animState.onStart(entry.trackIndex);break;case EventType.interrupt:if(entry.listener!=null&&entry.listener.interrupt)entry.listener.interrupt(entry);for(var ii=0;ii<listeners.length;ii++)if(listeners[ii].interrupt)listeners[ii].interrupt(entry);break;case EventType.end:if(entry.listener!=null&&entry.listener.end)entry.listener.end(entry);for(var ii=0;ii<listeners.length;ii++)if(listeners[ii].end)listeners[ii].end(entry);entry.onEnd&&this.deprecateStuff()&&entry.onEnd(entry.trackIndex);this.animState.onEnd&&this.deprecateStuff()&&this.animState.onEnd(entry.trackIndex);case EventType.dispose:if(entry.listener!=null&&entry.listener.dispose)entry.listener.dispose(entry);for(var ii=0;ii<listeners.length;ii++)if(listeners[ii].dispose)listeners[ii].dispose(entry);this.animState.trackEntryPool.free(entry);break;case EventType.complete:if(entry.listener!=null&&entry.listener.complete)entry.listener.complete(entry);for(var ii=0;ii<listeners.length;ii++)if(listeners[ii].complete)listeners[ii].complete(entry);var count=core.MathUtils.toInt(entry.loopsCount());entry.onComplete&&this.deprecateStuff()&&entry.onComplete(entry.trackIndex,count);this.animState.onComplete&&this.deprecateStuff()&&this.animState.onComplete(entry.trackIndex,count);break;case EventType.event:var event_3=objects[i++ +2];if(entry.listener!=null&&entry.listener.event)entry.listener.event(entry,event_3);for(var ii=0;ii<listeners.length;ii++)if(listeners[ii].event)listeners[ii].event(entry,event_3);entry.onEvent&&this.deprecateStuff()&&entry.onEvent(entry.trackIndex,event_3);this.animState.onEvent&&this.deprecateStuff()&&this.animState.onEvent(entry.trackIndex,event_3);break}}this.clear();this.drainDisabled=!1};EventQueue.prototype.clear=function(){this.objects.length=0};EventQueue.deprecatedWarning1=!1;return EventQueue}());core.EventQueue=EventQueue;var EventType;(function(EventType){EventType[EventType.start=0]="start";EventType[EventType.interrupt=1]="interrupt";EventType[EventType.end=2]="end";EventType[EventType.dispose=3]="dispose";EventType[EventType.complete=4]="complete";EventType[EventType.event=5]="event"})(EventType=core.EventType||(core.EventType={}));var AnimationStateAdapter2=(function(){function AnimationStateAdapter2(){}AnimationStateAdapter2.prototype.start=function(entry){};AnimationStateAdapter2.prototype.interrupt=function(entry){};AnimationStateAdapter2.prototype.end=function(entry){};AnimationStateAdapter2.prototype.dispose=function(entry){};AnimationStateAdapter2.prototype.complete=function(entry){};AnimationStateAdapter2.prototype.event=function(entry,event){};return AnimationStateAdapter2}());core.AnimationStateAdapter2=AnimationStateAdapter2})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var AnimationStateData=(function(){function AnimationStateData(skeletonData){this.animationToMixTime={};this.defaultMix=0;if(skeletonData==null)throw new Error("skeletonData cannot be null.");this.skeletonData=skeletonData}AnimationStateData.prototype.setMix=function(fromName,toName,duration){var from=this.skeletonData.findAnimation(fromName);if(from==null)throw new Error("Animation not found: "+fromName);var to=this.skeletonData.findAnimation(toName);if(to==null)throw new Error("Animation not found: "+toName);this.setMixWith(from,to,duration)};AnimationStateData.prototype.setMixByName=function(fromName,toName,duration){if(!AnimationStateData.deprecatedWarning1){AnimationStateData.deprecatedWarning1=!0;console.warn("Deprecation Warning: AnimationStateData.setMixByName is deprecated, please use setMix from now on.")}this.setMix(fromName,toName,duration)};AnimationStateData.prototype.setMixWith=function(from,to,duration){if(from==null)throw new Error("from cannot be null.");if(to==null)throw new Error("to cannot be null.");var key=from.name+"."+to.name;this.animationToMixTime[key]=duration};AnimationStateData.prototype.getMix=function(from,to){var key=from.name+"."+to.name;var value=this.animationToMixTime[key];return value===undefined?this.defaultMix:value};AnimationStateData.deprecatedWarning1=!1;return AnimationStateData}());core.AnimationStateData=AnimationStateData})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var AtlasAttachmentLoader=(function(){function AtlasAttachmentLoader(atlas){this.atlas=atlas}AtlasAttachmentLoader.prototype.newRegionAttachment=function(skin,name,path){var region=this.atlas.findRegion(path);if(region==null)throw new Error("Region not found in atlas: "+path+" (region attachment: "+name+")");var attachment=new core.RegionAttachment(name);attachment.region=region;return attachment};AtlasAttachmentLoader.prototype.newMeshAttachment=function(skin,name,path){var region=this.atlas.findRegion(path);if(region==null)throw new Error("Region not found in atlas: "+path+" (mesh attachment: "+name+")");var attachment=new core.MeshAttachment(name);attachment.region=region;return attachment};AtlasAttachmentLoader.prototype.newBoundingBoxAttachment=function(skin,name){return new core.BoundingBoxAttachment(name)};AtlasAttachmentLoader.prototype.newPathAttachment=function(skin,name){return new core.PathAttachment(name)};AtlasAttachmentLoader.prototype.newPointAttachment=function(skin,name){return new core.PointAttachment(name)};AtlasAttachmentLoader.prototype.newClippingAttachment=function(skin,name){return new core.ClippingAttachment(name)};return AtlasAttachmentLoader}());core.AtlasAttachmentLoader=AtlasAttachmentLoader})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var BlendMode;(function(BlendMode){BlendMode[BlendMode.Normal=0]="Normal";BlendMode[BlendMode.Additive=1]="Additive";BlendMode[BlendMode.Multiply=2]="Multiply";BlendMode[BlendMode.Screen=3]="Screen"})(BlendMode=core.BlendMode||(core.BlendMode={}))})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var Bone=(function(){function Bone(data,skeleton,parent){this.matrix=new PIXI.Matrix();this.children=new Array();this.x=0;this.y=0;this.rotation=0;this.scaleX=0;this.scaleY=0;this.shearX=0;this.shearY=0;this.ax=0;this.ay=0;this.arotation=0;this.ascaleX=0;this.ascaleY=0;this.ashearX=0;this.ashearY=0;this.appliedValid=!1;this.sorted=!1;if(data==null)throw new Error("data cannot be null.");if(skeleton==null)throw new Error("skeleton cannot be null.");this.data=data;this.skeleton=skeleton;this.parent=parent;this.setToSetupPose()}Object.defineProperty(Bone.prototype,"worldX",{get:function(){return this.matrix.tx},enumerable:!0,configurable:!0});Object.defineProperty(Bone.prototype,"worldY",{get:function(){return this.matrix.ty},enumerable:!0,configurable:!0});Bone.prototype.update=function(){this.updateWorldTransformWith(this.x,this.y,this.rotation,this.scaleX,this.scaleY,this.shearX,this.shearY)};Bone.prototype.updateWorldTransform=function(){this.updateWorldTransformWith(this.x,this.y,this.rotation,this.scaleX,this.scaleY,this.shearX,this.shearY)};Bone.prototype.updateWorldTransformWith=function(x,y,rotation,scaleX,scaleY,shearX,shearY){this.ax=x;this.ay=y;this.arotation=rotation;this.ascaleX=scaleX;this.ascaleY=scaleY;this.ashearX=shearX;this.ashearY=shearY;this.appliedValid=!0;var parent=this.parent;var m=this.matrix;var sx=this.skeleton.scaleX;var sy=Bone.yDown?-this.skeleton.scaleY:this.skeleton.scaleY;if(parent==null){var skeleton=this.skeleton;var rotationY=rotation+90+shearY;m.a=core.MathUtils.cosDeg(rotation+shearX)*scaleX*sx;m.c=core.MathUtils.cosDeg(rotationY)*scaleY*sx;m.b=core.MathUtils.sinDeg(rotation+shearX)*scaleX*sy;m.d=core.MathUtils.sinDeg(rotationY)*scaleY*sy;m.tx=x*sx+skeleton.x;m.ty=y*sy+skeleton.y;return}var pa=parent.matrix.a,pb=parent.matrix.c,pc=parent.matrix.b,pd=parent.matrix.d;m.tx=pa*x+pb*y+parent.matrix.tx;m.ty=pc*x+pd*y+parent.matrix.ty;switch(this.data.transformMode){case core.TransformMode.Normal:{var rotationY=rotation+90+shearY;var la=core.MathUtils.cosDeg(rotation+shearX)*scaleX;var lb=core.MathUtils.cosDeg(rotationY)*scaleY;var lc=core.MathUtils.sinDeg(rotation+shearX)*scaleX;var ld=core.MathUtils.sinDeg(rotationY)*scaleY;m.a=pa*la+pb*lc;m.c=pa*lb+pb*ld;m.b=pc*la+pd*lc;m.d=pc*lb+pd*ld;return}case core.TransformMode.OnlyTranslation:{var rotationY=rotation+90+shearY;m.a=core.MathUtils.cosDeg(rotation+shearX)*scaleX;m.c=core.MathUtils.cosDeg(rotationY)*scaleY;m.b=core.MathUtils.sinDeg(rotation+shearX)*scaleX;m.d=core.MathUtils.sinDeg(rotationY)*scaleY;break}case core.TransformMode.NoRotationOrReflection:{var s=pa*pa+pc*pc;var prx=0;if(s>0.0001){s=Math.abs(pa*pd-pb*pc)/s;pb=pc*s;pd=pa*s;prx=Math.atan2(pc,pa)*core.MathUtils.radDeg}else{pa=0;pc=0;prx=90-Math.atan2(pd,pb)*core.MathUtils.radDeg}var rx=rotation+shearX-prx;var ry=rotation+shearY-prx+90;var la=core.MathUtils.cosDeg(rx)*scaleX;var lb=core.MathUtils.cosDeg(ry)*scaleY;var lc=core.MathUtils.sinDeg(rx)*scaleX;var ld=core.MathUtils.sinDeg(ry)*scaleY;m.a=pa*la-pb*lc;m.c=pa*lb-pb*ld;m.b=pc*la+pd*lc;m.d=pc*lb+pd*ld;break}case core.TransformMode.NoScale:case core.TransformMode.NoScaleOrReflection:{var cos=core.MathUtils.cosDeg(rotation);var sin=core.MathUtils.sinDeg(rotation);var za=(pa*cos+pb*sin)/sx;var zc=(pc*cos+pd*sin)/sy;var s=Math.sqrt(za*za+zc*zc);if(s>0.00001)s=1/s;za*=s;zc*=s;s=Math.sqrt(za*za+zc*zc);if(this.data.transformMode==core.TransformMode.NoScale&&(pa*pd-pb*pc<0)!=(Bone.yDown?(this.skeleton.scaleX<0!=this.skeleton.scaleY>0):(this.skeleton.scaleX<0!=this.skeleton.scaleY<0)))s=-s;var r=Math.PI/2+Math.atan2(zc,za);var zb=Math.cos(r)*s;var zd=Math.sin(r)*s;var la=core.MathUtils.cosDeg(shearX)*scaleX;var lb=core.MathUtils.cosDeg(90+shearY)*scaleY;var lc=core.MathUtils.sinDeg(shearX)*scaleX;var ld=core.MathUtils.sinDeg(90+shearY)*scaleY;m.a=za*la+zb*lc;m.c=za*lb+zb*ld;m.b=zc*la+zd*lc;m.d=zc*lb+zd*ld;break}}m.a*=sx;m.c*=sx;m.b*=sy;m.d*=sy};Bone.prototype.setToSetupPose=function(){var data=this.data;this.x=data.x;this.y=data.y;this.rotation=data.rotation;this.scaleX=data.scaleX;this.scaleY=data.scaleY;this.shearX=data.shearX;this.shearY=data.shearY};Bone.prototype.getWorldRotationX=function(){return Math.atan2(this.matrix.b,this.matrix.a)*core.MathUtils.radDeg};Bone.prototype.getWorldRotationY=function(){return Math.atan2(this.matrix.d,this.matrix.c)*core.MathUtils.radDeg};Bone.prototype.getWorldScaleX=function(){var m=this.matrix;return Math.sqrt(m.a*m.a+m.c*m.c)};Bone.prototype.getWorldScaleY=function(){var m=this.matrix;return Math.sqrt(m.b*m.b+m.d*m.d)};Bone.prototype.updateAppliedTransform=function(){this.appliedValid=!0;var parent=this.parent;var m=this.matrix;if(parent==null){this.ax=m.tx;this.ay=m.ty;this.arotation=Math.atan2(m.b,m.a)*core.MathUtils.radDeg;this.ascaleX=Math.sqrt(m.a*m.a+m.b*m.b);this.ascaleY=Math.sqrt(m.c*m.c+m.d*m.d);this.ashearX=0;this.ashearY=Math.atan2(m.a*m.c+m.b*m.d,m.a*m.d-m.b*m.c)*core.MathUtils.radDeg;return}var pm=parent.matrix;var pid=1/(pm.a*pm.d-pm.b*pm.c);var dx=m.tx-pm.tx,dy=m.ty-pm.ty;this.ax=(dx*pm.d*pid-dy*pm.c*pid);this.ay=(dy*pm.a*pid-dx*pm.b*pid);var ia=pid*pm.d;var id=pid*pm.a;var ib=pid*pm.c;var ic=pid*pm.b;var ra=ia*m.a-ib*m.b;var rb=ia*m.c-ib*m.d;var rc=id*m.b-ic*m.a;var rd=id*m.d-ic*m.c;this.ashearX=0;this.ascaleX=Math.sqrt(ra*ra+rc*rc);if(this.ascaleX>0.0001){var det=ra*rd-rb*rc;this.ascaleY=det/this.ascaleX;this.ashearY=Math.atan2(ra*rb+rc*rd,det)*core.MathUtils.radDeg;this.arotation=Math.atan2(rc,ra)*core.MathUtils.radDeg}else{this.ascaleX=0;this.ascaleY=Math.sqrt(rb*rb+rd*rd);this.ashearY=0;this.arotation=90-Math.atan2(rd,rb)*core.MathUtils.radDeg}};Bone.prototype.worldToLocal=function(world){var m=this.matrix;var a=m.a,b=m.c,c=m.b,d=m.d;var invDet=1/(a*d-b*c);var x=world.x-m.tx,y=world.y-m.ty;world.x=(x*d*invDet-y*b*invDet);world.y=(y*a*invDet-x*c*invDet);return world};Bone.prototype.localToWorld=function(local){var m=this.matrix;var x=local.x,y=local.y;local.x=x*m.a+y*m.c+m.tx;local.y=x*m.b+y*m.d+m.ty;return local};Bone.prototype.worldToLocalRotation=function(worldRotation){var sin=core.MathUtils.sinDeg(worldRotation),cos=core.MathUtils.cosDeg(worldRotation);var mat=this.matrix;return Math.atan2(mat.a*sin-mat.b*cos,mat.d*cos-mat.c*sin)*core.MathUtils.radDeg};Bone.prototype.localToWorldRotation=function(localRotation){var sin=core.MathUtils.sinDeg(localRotation),cos=core.MathUtils.cosDeg(localRotation);var mat=this.matrix;return Math.atan2(cos*mat.b+sin*mat.d,cos*mat.a+sin*mat.c)*core.MathUtils.radDeg};Bone.prototype.rotateWorld=function(degrees){var mat=this.matrix;var a=mat.a,b=mat.c,c=mat.b,d=mat.d;var cos=core.MathUtils.cosDeg(degrees),sin=core.MathUtils.sinDeg(degrees);mat.a=cos*a-sin*c;mat.c=cos*b-sin*d;mat.b=sin*a+cos*c;mat.d=sin*b+cos*d;this.appliedValid=!1};Bone.yDown=!1;return Bone}());core.Bone=Bone})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var BoneData=(function(){function BoneData(index,name,parent){this.x=0;this.y=0;this.rotation=0;this.scaleX=1;this.scaleY=1;this.shearX=0;this.shearY=0;this.transformMode=TransformMode.Normal;if(index<0)throw new Error("index must be >=0.");if(name==null)throw new Error("name cannot be null.");this.index=index;this.name=name;this.parent=parent}return BoneData}());core.BoneData=BoneData;var TransformMode;(function(TransformMode){TransformMode[TransformMode.Normal=0]="Normal";TransformMode[TransformMode.OnlyTranslation=1]="OnlyTranslation";TransformMode[TransformMode.NoRotationOrReflection=2]="NoRotationOrReflection";TransformMode[TransformMode.NoScale=3]="NoScale";TransformMode[TransformMode.NoScaleOrReflection=4]="NoScaleOrReflection"})(TransformMode=core.TransformMode||(core.TransformMode={}))})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var Event=(function(){function Event(time,data){if(data==null)throw new Error("data cannot be null.");this.time=time;this.data=data}return Event}());core.Event=Event})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var EventData=(function(){function EventData(name){this.name=name}return EventData}());core.EventData=EventData})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var IkConstraint=(function(){function IkConstraint(data,skeleton){this.bendDirection=0;this.compress=!1;this.stretch=!1;this.mix=1;if(data==null)throw new Error("data cannot be null.");if(skeleton==null)throw new Error("skeleton cannot be null.");this.data=data;this.mix=data.mix;this.bendDirection=data.bendDirection;this.compress=data.compress;this.stretch=data.stretch;this.bones=new Array();for(var i=0;i<data.bones.length;i++)this.bones.push(skeleton.findBone(data.bones[i].name));this.target=skeleton.findBone(data.target.name)}IkConstraint.prototype.getOrder=function(){return this.data.order};IkConstraint.prototype.apply=function(){this.update()};IkConstraint.prototype.update=function(){var target=this.target;var bones=this.bones;switch(bones.length){case 1:this.apply1(bones[0],target.worldX,target.worldY,this.compress,this.stretch,this.data.uniform,this.mix);break;case 2:this.apply2(bones[0],bones[1],target.worldX,target.worldY,this.bendDirection,this.stretch,this.mix);break}};IkConstraint.prototype.apply1=function(bone,targetX,targetY,compress,stretch,uniform,alpha){if(!bone.appliedValid)bone.updateAppliedTransform();var p=bone.parent.matrix;var id=1/(p.a*p.d-p.b*p.c);var x=targetX-p.tx,y=targetY-p.ty;var tx=(x*p.d-y*p.c)*id-bone.ax,ty=(y*p.a-x*p.b)*id-bone.ay;var rotationIK=Math.atan2(ty,tx)*core.MathUtils.radDeg-bone.ashearX-bone.arotation;if(bone.ascaleX<0)rotationIK+=180;if(rotationIK>180)rotationIK-=360;else if(rotationIK<-180)rotationIK+=360;var sx=bone.ascaleX,sy=bone.ascaleY;if(compress||stretch){var b=bone.data.length*sx,dd=Math.sqrt(tx*tx+ty*ty);if((compress&&dd<b)||(stretch&&dd>b)&&b>0.0001){var s=(dd/b-1)*alpha+1;sx*=s;if(uniform)sy*=s}}bone.updateWorldTransformWith(bone.ax,bone.ay,bone.arotation+rotationIK*alpha,sx,sy,bone.ashearX,bone.ashearY)};IkConstraint.prototype.apply2=function(parent,child,targetX,targetY,bendDir,stretch,alpha){if(alpha==0){child.updateWorldTransform();return}if(!parent.appliedValid)parent.updateAppliedTransform();if(!child.appliedValid)child.updateAppliedTransform();var px=parent.ax,py=parent.ay,psx=parent.ascaleX,sx=psx,psy=parent.ascaleY,csx=child.ascaleX;var pmat=parent.matrix;var os1=0,os2=0,s2=0;if(psx<0){psx=-psx;os1=180;s2=-1}else{os1=0;s2=1}if(psy<0){psy=-psy;s2=-s2}if(csx<0){csx=-csx;os2=180}else os2=0;var cx=child.ax,cy=0,cwx=0,cwy=0,a=pmat.a,b=pmat.c,c=pmat.b,d=pmat.d;var u=Math.abs(psx-psy)<=0.0001;if(!u){cy=0;cwx=a*cx+pmat.tx;cwy=c*cx+pmat.ty}else{cy=child.ay;cwx=a*cx+b*cy+pmat.tx;cwy=c*cx+d*cy+pmat.ty}var pp=parent.parent.matrix;a=pp.a;b=pp.c;c=pp.b;d=pp.d;var id=1/(a*d-b*c),x=targetX-pp.tx,y=targetY-pp.ty;var tx=(x*d-y*b)*id-px,ty=(y*a-x*c)*id-py,dd=tx*tx+ty*ty;x=cwx-pp.tx;y=cwy-pp.ty;var dx=(x*d-y*b)*id-px,dy=(y*a-x*c)*id-py;var l1=Math.sqrt(dx*dx+dy*dy),l2=child.data.length*csx,a1=0,a2=0;outer:if(u){l2*=psx;var cos=(dd-l1*l1-l2*l2)/(2*l1*l2);if(cos<-1)cos=-1;else if(cos>1){cos=1;if(stretch&&l1+l2>0.0001)sx*=(Math.sqrt(dd)/(l1+l2)-1)*alpha+1}a2=Math.acos(cos)*bendDir;a=l1+l2*cos;b=l2*Math.sin(a2);a1=Math.atan2(ty*a-tx*b,tx*a+ty*b)}else{a=psx*l2;b=psy*l2;var aa=a*a,bb=b*b,ta=Math.atan2(ty,tx);c=bb*l1*l1+aa*dd-aa*bb;var c1=-2*bb*l1,c2=bb-aa;d=c1*c1-4*c2*c;if(d>=0){var q=Math.sqrt(d);if(c1<0)q=-q;q=-(c1+q)/2;var r0=q/c2,r1=c/q;var r=Math.abs(r0)<Math.abs(r1)?r0:r1;if(r*r<=dd){y=Math.sqrt(dd-r*r)*bendDir;a1=ta-Math.atan2(y,r);a2=Math.atan2(y/psy,(r-l1)/psx);break outer}}var minAngle=core.MathUtils.PI,minX=l1-a,minDist=minX*minX,minY=0;var maxAngle=0,maxX=l1+a,maxDist=maxX*maxX,maxY=0;c=-a*l1/(aa-bb);if(c>=-1&&c<=1){c=Math.acos(c);x=a*Math.cos(c)+l1;y=b*Math.sin(c);d=x*x+y*y;if(d<minDist){minAngle=c;minDist=d;minX=x;minY=y}if(d>maxDist){maxAngle=c;maxDist=d;maxX=x;maxY=y}}if(dd<=(minDist+maxDist)/2){a1=ta-Math.atan2(minY*bendDir,minX);a2=minAngle*bendDir}else{a1=ta-Math.atan2(maxY*bendDir,maxX);a2=maxAngle*bendDir}}var os=Math.atan2(cy,cx)*s2;var rotation=parent.arotation;a1=(a1-os)*core.MathUtils.radDeg+os1-rotation;if(a1>180)a1-=360;else if(a1<-180)a1+=360;parent.updateWorldTransformWith(px,py,rotation+a1*alpha,sx,parent.ascaleY,0,0);rotation=child.arotation;a2=((a2+os)*core.MathUtils.radDeg-child.ashearX)*s2+os2-rotation;if(a2>180)a2-=360;else if(a2<-180)a2+=360;child.updateWorldTransformWith(cx,cy,rotation+a2*alpha,child.ascaleX,child.ascaleY,child.ashearX,child.ashearY)};return IkConstraint}());core.IkConstraint=IkConstraint})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var IkConstraintData=(function(){function IkConstraintData(name){this.order=0;this.bones=new Array();this.bendDirection=1;this.compress=!1;this.stretch=!1;this.uniform=!1;this.mix=1;this.name=name}return IkConstraintData}());core.IkConstraintData=IkConstraintData})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var PathConstraint=(function(){function PathConstraint(data,skeleton){this.position=0;this.spacing=0;this.rotateMix=0;this.translateMix=0;this.spaces=new Array();this.positions=new Array();this.world=new Array();this.curves=new Array();this.lengths=new Array();this.segments=new Array();if(data==null)throw new Error("data cannot be null.");if(skeleton==null)throw new Error("skeleton cannot be null.");this.data=data;this.bones=new Array();for(var i=0,n=data.bones.length;i<n;i++)this.bones.push(skeleton.findBone(data.bones[i].name));this.target=skeleton.findSlot(data.target.name);this.position=data.position;this.spacing=data.spacing;this.rotateMix=data.rotateMix;this.translateMix=data.translateMix}PathConstraint.prototype.apply=function(){this.update()};PathConstraint.prototype.update=function(){var attachment=this.target.getAttachment();if(!(attachment instanceof core.PathAttachment))return;var rotateMix=this.rotateMix,translateMix=this.translateMix;var translate=translateMix>0,rotate=rotateMix>0;if(!translate&&!rotate)return;var data=this.data;var spacingMode=data.spacingMode;var lengthSpacing=spacingMode==core.SpacingMode.Length;var rotateMode=data.rotateMode;var tangents=rotateMode==core.RotateMode.Tangent,scale=rotateMode==core.RotateMode.ChainScale;var boneCount=this.bones.length,spacesCount=tangents?boneCount:boneCount+1;var bones=this.bones;var spaces=core.Utils.setArraySize(this.spaces,spacesCount),lengths=null;var spacing=this.spacing;if(scale||lengthSpacing){if(scale)lengths=core.Utils.setArraySize(this.lengths,boneCount);for(var i=0,n=spacesCount-1;i<n;){var bone=bones[i];var setupLength=bone.data.length;if(setupLength<PathConstraint.epsilon){if(scale)lengths[i]=0;spaces[++i]=0}else{var x=setupLength*bone.matrix.a,y=setupLength*bone.matrix.b;var length_1=Math.sqrt(x*x+y*y);if(scale)lengths[i]=length_1;spaces[++i]=(lengthSpacing?setupLength+spacing:spacing)*length_1/setupLength}}}else{for(var i=1;i<spacesCount;i++)spaces[i]=spacing}var positions=this.computeWorldPositions(attachment,spacesCount,tangents,data.positionMode==core.PositionMode.Percent,spacingMode==core.SpacingMode.Percent);var boneX=positions[0],boneY=positions[1],offsetRotation=data.offsetRotation;var tip=!1;if(offsetRotation==0)tip=rotateMode==core.RotateMode.Chain;else{tip=!1;var p=this.target.bone.matrix;offsetRotation*=p.a*p.d-p.b*p.c>0?core.MathUtils.degRad:-core.MathUtils.degRad}for(var i=0,p=3;i<boneCount;i++,p+=3){var bone=bones[i];var mat=bone.matrix;mat.tx+=(boneX-mat.tx)*translateMix;mat.ty+=(boneY-mat.ty)*translateMix;var x=positions[p],y=positions[p+1],dx=x-boneX,dy=y-boneY;if(scale){var length_2=lengths[i];if(length_2!=0){var s=(Math.sqrt(dx*dx+dy*dy)/length_2-1)*rotateMix+1;mat.a*=s;mat.b*=s}}boneX=x;boneY=y;if(rotate){var a=mat.a,b=mat.c,c=mat.b,d=mat.d,r=0,cos=0,sin=0;if(tangents)r=positions[p-1];else if(spaces[i+1]==0)r=positions[p+2];else r=Math.atan2(dy,dx);r-=Math.atan2(c,a);if(tip){cos=Math.cos(r);sin=Math.sin(r);var length_3=bone.data.length;boneX+=(length_3*(cos*a-sin*c)-dx)*rotateMix;boneY+=(length_3*(sin*a+cos*c)-dy)*rotateMix}else{r+=offsetRotation}if(r>core.MathUtils.PI)r-=core.MathUtils.PI2;else if(r<-core.MathUtils.PI)r+=core.MathUtils.PI2;r*=rotateMix;cos=Math.cos(r);sin=Math.sin(r);mat.a=cos*a-sin*c;mat.c=cos*b-sin*d;mat.b=sin*a+cos*c;mat.d=sin*b+cos*d}bone.appliedValid=!1}};PathConstraint.prototype.computeWorldPositions=function(path,spacesCount,tangents,percentPosition,percentSpacing){var target=this.target;var position=this.position;var spaces=this.spaces,out=core.Utils.setArraySize(this.positions,spacesCount*3+2),world=null;var closed=path.closed;var verticesLength=path.worldVerticesLength,curveCount=verticesLength/6,prevCurve=PathConstraint.NONE;if(!path.constantSpeed){var lengths=path.lengths;curveCount-=closed?1:2;var pathLength_1=lengths[curveCount];if(percentPosition)position*=pathLength_1;if(percentSpacing){for(var i=0;i<spacesCount;i++)spaces[i]*=pathLength_1}world=core.Utils.setArraySize(this.world,8);for(var i=0,o=0,curve=0;i<spacesCount;i++,o+=3){var space=spaces[i];position+=space;var p=position;if(closed){p%=pathLength_1;if(p<0)p+=pathLength_1;curve=0}else if(p<0){if(prevCurve!=PathConstraint.BEFORE){prevCurve=PathConstraint.BEFORE;path.computeWorldVertices(target,2,4,world,0,2)}this.addBeforePosition(p,world,0,out,o);continue}else if(p>pathLength_1){if(prevCurve!=PathConstraint.AFTER){prevCurve=PathConstraint.AFTER;path.computeWorldVertices(target,verticesLength-6,4,world,0,2)}this.addAfterPosition(p-pathLength_1,world,0,out,o);continue}for(;;curve++){var length_4=lengths[curve];if(p>length_4)continue;if(curve==0)p/=length_4;else{var prev=lengths[curve-1];p=(p-prev)/(length_4-prev)}break}if(curve!=prevCurve){prevCurve=curve;if(closed&&curve==curveCount){path.computeWorldVertices(target,verticesLength-4,4,world,0,2);path.computeWorldVertices(target,0,4,world,4,2)}else path.computeWorldVertices(target,curve*6+2,8,world,0,2)}this.addCurvePosition(p,world[0],world[1],world[2],world[3],world[4],world[5],world[6],world[7],out,o,tangents||(i>0&&space==0))}return out}if(closed){verticesLength+=2;world=core.Utils.setArraySize(this.world,verticesLength);path.computeWorldVertices(target,2,verticesLength-4,world,0,2);path.computeWorldVertices(target,0,2,world,verticesLength-4,2);world[verticesLength-2]=world[0];world[verticesLength-1]=world[1]}else{curveCount--;verticesLength-=4;world=core.Utils.setArraySize(this.world,verticesLength);path.computeWorldVertices(target,2,verticesLength,world,0,2)}var curves=core.Utils.setArraySize(this.curves,curveCount);var pathLength=0;var x1=world[0],y1=world[1],cx1=0,cy1=0,cx2=0,cy2=0,x2=0,y2=0;var tmpx=0,tmpy=0,dddfx=0,dddfy=0,ddfx=0,ddfy=0,dfx=0,dfy=0;for(var i=0,w=2;i<curveCount;i++,w+=6){cx1=world[w];cy1=world[w+1];cx2=world[w+2];cy2=world[w+3];x2=world[w+4];y2=world[w+5];tmpx=(x1-cx1*2+cx2)*0.1875;tmpy=(y1-cy1*2+cy2)*0.1875;dddfx=((cx1-cx2)*3-x1+x2)*0.09375;dddfy=((cy1-cy2)*3-y1+y2)*0.09375;ddfx=tmpx*2+dddfx;ddfy=tmpy*2+dddfy;dfx=(cx1-x1)*0.75+tmpx+dddfx*0.16666667;dfy=(cy1-y1)*0.75+tmpy+dddfy*0.16666667;pathLength+=Math.sqrt(dfx*dfx+dfy*dfy);dfx+=ddfx;dfy+=ddfy;ddfx+=dddfx;ddfy+=dddfy;pathLength+=Math.sqrt(dfx*dfx+dfy*dfy);dfx+=ddfx;dfy+=ddfy;pathLength+=Math.sqrt(dfx*dfx+dfy*dfy);dfx+=ddfx+dddfx;dfy+=ddfy+dddfy;pathLength+=Math.sqrt(dfx*dfx+dfy*dfy);curves[i]=pathLength;x1=x2;y1=y2}if(percentPosition)position*=pathLength;if(percentSpacing){for(var i=0;i<spacesCount;i++)spaces[i]*=pathLength}var segments=this.segments;var curveLength=0;for(var i=0,o=0,curve=0,segment=0;i<spacesCount;i++,o+=3){var space=spaces[i];position+=space;var p=position;if(closed){p%=pathLength;if(p<0)p+=pathLength;curve=0}else if(p<0){this.addBeforePosition(p,world,0,out,o);continue}else if(p>pathLength){this.addAfterPosition(p-pathLength,world,verticesLength-4,out,o);continue}for(;;curve++){var length_5=curves[curve];if(p>length_5)continue;if(curve==0)p/=length_5;else{var prev=curves[curve-1];p=(p-prev)/(length_5-prev)}break}if(curve!=prevCurve){prevCurve=curve;var ii=curve*6;x1=world[ii];y1=world[ii+1];cx1=world[ii+2];cy1=world[ii+3];cx2=world[ii+4];cy2=world[ii+5];x2=world[ii+6];y2=world[ii+7];tmpx=(x1-cx1*2+cx2)*0.03;tmpy=(y1-cy1*2+cy2)*0.03;dddfx=((cx1-cx2)*3-x1+x2)*0.006;dddfy=((cy1-cy2)*3-y1+y2)*0.006;ddfx=tmpx*2+dddfx;ddfy=tmpy*2+dddfy;dfx=(cx1-x1)*0.3+tmpx+dddfx*0.16666667;dfy=(cy1-y1)*0.3+tmpy+dddfy*0.16666667;curveLength=Math.sqrt(dfx*dfx+dfy*dfy);segments[0]=curveLength;for(ii=1;ii<8;ii++){dfx+=ddfx;dfy+=ddfy;ddfx+=dddfx;ddfy+=dddfy;curveLength+=Math.sqrt(dfx*dfx+dfy*dfy);segments[ii]=curveLength}dfx+=ddfx;dfy+=ddfy;curveLength+=Math.sqrt(dfx*dfx+dfy*dfy);segments[8]=curveLength;dfx+=ddfx+dddfx;dfy+=ddfy+dddfy;curveLength+=Math.sqrt(dfx*dfx+dfy*dfy);segments[9]=curveLength;segment=0}p*=curveLength;for(;;segment++){var length_6=segments[segment];if(p>length_6)continue;if(segment==0)p/=length_6;else{var prev=segments[segment-1];p=segment+(p-prev)/(length_6-prev)}break}this.addCurvePosition(p*0.1,x1,y1,cx1,cy1,cx2,cy2,x2,y2,out,o,tangents||(i>0&&space==0))}return out};PathConstraint.prototype.addBeforePosition=function(p,temp,i,out,o){var x1=temp[i],y1=temp[i+1],dx=temp[i+2]-x1,dy=temp[i+3]-y1,r=Math.atan2(dy,dx);out[o]=x1+p*Math.cos(r);out[o+1]=y1+p*Math.sin(r);out[o+2]=r};PathConstraint.prototype.addAfterPosition=function(p,temp,i,out,o){var x1=temp[i+2],y1=temp[i+3],dx=x1-temp[i],dy=y1-temp[i+1],r=Math.atan2(dy,dx);out[o]=x1+p*Math.cos(r);out[o+1]=y1+p*Math.sin(r);out[o+2]=r};PathConstraint.prototype.addCurvePosition=function(p,x1,y1,cx1,cy1,cx2,cy2,x2,y2,out,o,tangents){if(p==0||isNaN(p))p=0.0001;var tt=p*p,ttt=tt*p,u=1-p,uu=u*u,uuu=uu*u;var ut=u*p,ut3=ut*3,uut3=u*ut3,utt3=ut3*p;var x=x1*uuu+cx1*uut3+cx2*utt3+x2*ttt,y=y1*uuu+cy1*uut3+cy2*utt3+y2*ttt;out[o]=x;out[o+1]=y;if(tangents)out[o+2]=Math.atan2(y-(y1*uu+cy1*ut*2+cy2*tt),x-(x1*uu+cx1*ut*2+cx2*tt))};PathConstraint.prototype.getOrder=function(){return this.data.order};PathConstraint.NONE=-1;PathConstraint.BEFORE=-2;PathConstraint.AFTER=-3;PathConstraint.epsilon=0.00001;return PathConstraint}());core.PathConstraint=PathConstraint})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var PathConstraintData=(function(){function PathConstraintData(name){this.order=0;this.bones=new Array();this.name=name}return PathConstraintData}());core.PathConstraintData=PathConstraintData;var PositionMode;(function(PositionMode){PositionMode[PositionMode.Fixed=0]="Fixed";PositionMode[PositionMode.Percent=1]="Percent"})(PositionMode=core.PositionMode||(core.PositionMode={}));var SpacingMode;(function(SpacingMode){SpacingMode[SpacingMode.Length=0]="Length";SpacingMode[SpacingMode.Fixed=1]="Fixed";SpacingMode[SpacingMode.Percent=2]="Percent"})(SpacingMode=core.SpacingMode||(core.SpacingMode={}));var RotateMode;(function(RotateMode){RotateMode[RotateMode.Tangent=0]="Tangent";RotateMode[RotateMode.Chain=1]="Chain";RotateMode[RotateMode.ChainScale=2]="ChainScale"})(RotateMode=core.RotateMode||(core.RotateMode={}))})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var Skeleton=(function(){function Skeleton(data){this._updateCache=new Array();this.updateCacheReset=new Array();this.time=0;this.scaleX=1;this.scaleY=1;this.x=0;this.y=0;if(data==null)throw new Error("data cannot be null.");this.data=data;this.bones=new Array();for(var i=0;i<data.bones.length;i++){var boneData=data.bones[i];var bone=void 0;if(boneData.parent==null)bone=new core.Bone(boneData,this,null);else{var parent_1=this.bones[boneData.parent.index];bone=new core.Bone(boneData,this,parent_1);parent_1.children.push(bone)}this.bones.push(bone)}this.slots=new Array();this.drawOrder=new Array();for(var i=0;i<data.slots.length;i++){var slotData=data.slots[i];var bone=this.bones[slotData.boneData.index];var slot=new core.Slot(slotData,bone);this.slots.push(slot);this.drawOrder.push(slot)}this.ikConstraints=new Array();for(var i=0;i<data.ikConstraints.length;i++){var ikConstraintData=data.ikConstraints[i];this.ikConstraints.push(new core.IkConstraint(ikConstraintData,this))}this.transformConstraints=new Array();for(var i=0;i<data.transformConstraints.length;i++){var transformConstraintData=data.transformConstraints[i];this.transformConstraints.push(new core.TransformConstraint(transformConstraintData,this))}this.pathConstraints=new Array();for(var i=0;i<data.pathConstraints.length;i++){var pathConstraintData=data.pathConstraints[i];this.pathConstraints.push(new core.PathConstraint(pathConstraintData,this))}this.color=new core.Color(1,1,1,1);this.updateCache()}Skeleton.prototype.updateCache=function(){var updateCache=this._updateCache;updateCache.length=0;this.updateCacheReset.length=0;var bones=this.bones;for(var i=0,n=bones.length;i<n;i++)bones[i].sorted=!1;var ikConstraints=this.ikConstraints;var transformConstraints=this.transformConstraints;var pathConstraints=this.pathConstraints;var ikCount=ikConstraints.length,transformCount=transformConstraints.length,pathCount=pathConstraints.length;var constraintCount=ikCount+transformCount+pathCount;outer:for(var i=0;i<constraintCount;i++){for(var ii=0;ii<ikCount;ii++){var constraint=ikConstraints[ii];if(constraint.data.order==i){this.sortIkConstraint(constraint);continue outer}}for(var ii=0;ii<transformCount;ii++){var constraint=transformConstraints[ii];if(constraint.data.order==i){this.sortTransformConstraint(constraint);continue outer}}for(var ii=0;ii<pathCount;ii++){var constraint=pathConstraints[ii];if(constraint.data.order==i){this.sortPathConstraint(constraint);continue outer}}}for(var i=0,n=bones.length;i<n;i++)this.sortBone(bones[i]);};Skeleton.prototype.sortIkConstraint=function(constraint){var target=constraint.target;this.sortBone(target);var constrained=constraint.bones;var parent=constrained[0];this.sortBone(parent);if(constrained.length>1){var child=constrained[constrained.length-1];if(!(this._updateCache.indexOf(child)>-1))this.updateCacheReset.push(child)}this._updateCache.push(constraint);this.sortReset(parent.children);constrained[constrained.length-1].sorted=!0};Skeleton.prototype.sortPathConstraint=function(constraint){var slot=constraint.target;var slotIndex=slot.data.index;var slotBone=slot.bone;if(this.skin!=null)this.sortPathConstraintAttachment(this.skin,slotIndex,slotBone);if(this.data.defaultSkin!=null&&this.data.defaultSkin!=this.skin)this.sortPathConstraintAttachment(this.data.defaultSkin,slotIndex,slotBone);for(var i=0,n=this.data.skins.length;i<n;i++)this.sortPathConstraintAttachment(this.data.skins[i],slotIndex,slotBone);var attachment=slot.getAttachment();if(attachment instanceof core.PathAttachment)this.sortPathConstraintAttachmentWith(attachment,slotBone);var constrained=constraint.bones;var boneCount=constrained.length;for(var i=0;i<boneCount;i++)this.sortBone(constrained[i]);this._updateCache.push(constraint);for(var i=0;i<boneCount;i++)this.sortReset(constrained[i].children);for(var i=0;i<boneCount;i++)constrained[i].sorted=!0};Skeleton.prototype.sortTransformConstraint=function(constraint){this.sortBone(constraint.target);var constrained=constraint.bones;var boneCount=constrained.length;if(constraint.data.local){for(var i=0;i<boneCount;i++){var child=constrained[i];this.sortBone(child.parent);if(!(this._updateCache.indexOf(child)>-1))this.updateCacheReset.push(child)}}else{for(var i=0;i<boneCount;i++){this.sortBone(constrained[i])}}this._updateCache.push(constraint);for(var ii=0;ii<boneCount;ii++)this.sortReset(constrained[ii].children);for(var ii=0;ii<boneCount;ii++)constrained[ii].sorted=!0};Skeleton.prototype.sortPathConstraintAttachment=function(skin,slotIndex,slotBone){var attachments=skin.attachments[slotIndex];if(!attachments)return;for(var key in attachments){this.sortPathConstraintAttachmentWith(attachments[key],slotBone)}};Skeleton.prototype.sortPathConstraintAttachmentWith=function(attachment,slotBone){if(!(attachment instanceof core.PathAttachment))return;var pathBones=attachment.bones;if(pathBones==null)this.sortBone(slotBone);else{var bones=this.bones;var i=0;while(i<pathBones.length){var boneCount=pathBones[i++];for(var n=i+boneCount;i<n;i++){var boneIndex=pathBones[i];this.sortBone(bones[boneIndex])}}}};Skeleton.prototype.sortBone=function(bone){if(bone.sorted)return;var parent=bone.parent;if(parent!=null)this.sortBone(parent);bone.sorted=!0;this._updateCache.push(bone)};Skeleton.prototype.sortReset=function(bones){for(var i=0,n=bones.length;i<n;i++){var bone=bones[i];if(bone.sorted)this.sortReset(bone.children);bone.sorted=!1}};Skeleton.prototype.updateWorldTransform=function(){var updateCacheReset=this.updateCacheReset;for(var i=0,n=updateCacheReset.length;i<n;i++){var bone=updateCacheReset[i];bone.ax=bone.x;bone.ay=bone.y;bone.arotation=bone.rotation;bone.ascaleX=bone.scaleX;bone.ascaleY=bone.scaleY;bone.ashearX=bone.shearX;bone.ashearY=bone.shearY;bone.appliedValid=!0}var updateCache=this._updateCache;for(var i=0,n=updateCache.length;i<n;i++)updateCache[i].update();};Skeleton.prototype.setToSetupPose=function(){this.setBonesToSetupPose();this.setSlotsToSetupPose()};Skeleton.prototype.setBonesToSetupPose=function(){var bones=this.bones;for(var i=0,n=bones.length;i<n;i++)bones[i].setToSetupPose();var ikConstraints=this.ikConstraints;for(var i=0,n=ikConstraints.length;i<n;i++){var constraint=ikConstraints[i];constraint.bendDirection=constraint.data.bendDirection;constraint.mix=constraint.data.mix}var transformConstraints=this.transformConstraints;for(var i=0,n=transformConstraints.length;i<n;i++){var constraint=transformConstraints[i];var data=constraint.data;constraint.rotateMix=data.rotateMix;constraint.translateMix=data.translateMix;constraint.scaleMix=data.scaleMix;constraint.shearMix=data.shearMix}var pathConstraints=this.pathConstraints;for(var i=0,n=pathConstraints.length;i<n;i++){var constraint=pathConstraints[i];var data=constraint.data;constraint.position=data.position;constraint.spacing=data.spacing;constraint.rotateMix=data.rotateMix;constraint.translateMix=data.translateMix}};Skeleton.prototype.setSlotsToSetupPose=function(){var slots=this.slots;core.Utils.arrayCopy(slots,0,this.drawOrder,0,slots.length);for(var i=0,n=slots.length;i<n;i++)slots[i].setToSetupPose();};Skeleton.prototype.getRootBone=function(){if(this.bones.length==0)return null;return this.bones[0]};Skeleton.prototype.findBone=function(boneName){if(boneName==null)throw new Error("boneName cannot be null.");var bones=this.bones;for(var i=0,n=bones.length;i<n;i++){var bone=bones[i];if(bone.data.name==boneName)return bone}return null};Skeleton.prototype.findBoneIndex=function(boneName){if(boneName==null)throw new Error("boneName cannot be null.");var bones=this.bones;for(var i=0,n=bones.length;i<n;i++)if(bones[i].data.name==boneName)return i;return-1};Skeleton.prototype.findSlot=function(slotName){if(slotName==null)throw new Error("slotName cannot be null.");var slots=this.slots;for(var i=0,n=slots.length;i<n;i++){var slot=slots[i];if(slot.data.name==slotName)return slot}return null};Skeleton.prototype.findSlotIndex=function(slotName){if(slotName==null)throw new Error("slotName cannot be null.");var slots=this.slots;for(var i=0,n=slots.length;i<n;i++)if(slots[i].data.name==slotName)return i;return-1};Skeleton.prototype.setSkinByName=function(skinName){var skin=this.data.findSkin(skinName);if(skin==null)throw new Error("Skin not found: "+skinName);this.setSkin(skin)};Skeleton.prototype.setSkin=function(newSkin){if(newSkin!=null){if(this.skin!=null)newSkin.attachAll(this,this.skin);else{var slots=this.slots;for(var i=0,n=slots.length;i<n;i++){var slot=slots[i];var name_1=slot.data.attachmentName;if(name_1!=null){var attachment=newSkin.getAttachment(i,name_1);if(attachment!=null)slot.setAttachment(attachment)}}}}this.skin=newSkin};Skeleton.prototype.getAttachmentByName=function(slotName,attachmentName){return this.getAttachment(this.data.findSlotIndex(slotName),attachmentName)};Skeleton.prototype.getAttachment=function(slotIndex,attachmentName){if(attachmentName==null)throw new Error("attachmentName cannot be null.");if(this.skin!=null){var attachment=this.skin.getAttachment(slotIndex,attachmentName);if(attachment!=null)return attachment}if(this.data.defaultSkin!=null)return this.data.defaultSkin.getAttachment(slotIndex,attachmentName);return null};Skeleton.prototype.setAttachment=function(slotName,attachmentName){if(slotName==null)throw new Error("slotName cannot be null.");var slots=this.slots;for(var i=0,n=slots.length;i<n;i++){var slot=slots[i];if(slot.data.name==slotName){var attachment=null;if(attachmentName!=null){attachment=this.getAttachment(i,attachmentName);if(attachment==null)throw new Error("Attachment not found: "+attachmentName+", for slot: "+slotName)}slot.setAttachment(attachment);return}}throw new Error("Slot not found: "+slotName)};Skeleton.prototype.findIkConstraint=function(constraintName){if(constraintName==null)throw new Error("constraintName cannot be null.");var ikConstraints=this.ikConstraints;for(var i=0,n=ikConstraints.length;i<n;i++){var ikConstraint=ikConstraints[i];if(ikConstraint.data.name==constraintName)return ikConstraint}return null};Skeleton.prototype.findTransformConstraint=function(constraintName){if(constraintName==null)throw new Error("constraintName cannot be null.");var transformConstraints=this.transformConstraints;for(var i=0,n=transformConstraints.length;i<n;i++){var constraint=transformConstraints[i];if(constraint.data.name==constraintName)return constraint}return null};Skeleton.prototype.findPathConstraint=function(constraintName){if(constraintName==null)throw new Error("constraintName cannot be null.");var pathConstraints=this.pathConstraints;for(var i=0,n=pathConstraints.length;i<n;i++){var constraint=pathConstraints[i];if(constraint.data.name==constraintName)return constraint}return null};Skeleton.prototype.getBounds=function(offset,size,temp){if(offset==null)throw new Error("offset cannot be null.");if(size==null)throw new Error("size cannot be null.");var drawOrder=this.drawOrder;var minX=Number.POSITIVE_INFINITY,minY=Number.POSITIVE_INFINITY,maxX=Number.NEGATIVE_INFINITY,maxY=Number.NEGATIVE_INFINITY;for(var i=0,n=drawOrder.length;i<n;i++){var slot=drawOrder[i];var verticesLength=0;var vertices=null;var attachment=slot.getAttachment();if(attachment instanceof core.RegionAttachment){verticesLength=8;vertices=core.Utils.setArraySize(temp,verticesLength,0);attachment.computeWorldVertices(slot.bone,vertices,0,2)}else if(attachment instanceof core.MeshAttachment){var mesh=attachment;verticesLength=mesh.worldVerticesLength;vertices=core.Utils.setArraySize(temp,verticesLength,0);mesh.computeWorldVertices(slot,0,verticesLength,vertices,0,2)}if(vertices!=null){for(var ii=0,nn=vertices.length;ii<nn;ii+=2){var x=vertices[ii],y=vertices[ii+1];minX=Math.min(minX,x);minY=Math.min(minY,y);maxX=Math.max(maxX,x);maxY=Math.max(maxY,y)}}}offset.set(minX,minY);size.set(maxX-minX,maxY-minY)};Skeleton.prototype.update=function(delta){this.time+=delta};Object.defineProperty(Skeleton.prototype,"flipX",{get:function(){return this.scaleX==-1},set:function(value){if(!Skeleton.deprecatedWarning1){Skeleton.deprecatedWarning1=!0;console.warn("Spine Deprecation Warning: `Skeleton.flipX/flipY` was deprecated, please use scaleX/scaleY")}this.scaleX=value?1.0:-1.0},enumerable:!0,configurable:!0});Object.defineProperty(Skeleton.prototype,"flipY",{get:function(){return this.scaleY==-1},set:function(value){if(!Skeleton.deprecatedWarning1){Skeleton.deprecatedWarning1=!0;console.warn("Spine Deprecation Warning: `Skeleton.flipX/flipY` was deprecated, please use scaleX/scaleY")}this.scaleY=value?1.0:-1.0},enumerable:!0,configurable:!0});Skeleton.deprecatedWarning1=!1;return Skeleton}());core.Skeleton=Skeleton})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var SkeletonBounds=(function(){function SkeletonBounds(){this.minX=0;this.minY=0;this.maxX=0;this.maxY=0;this.boundingBoxes=new Array();this.polygons=new Array();this.polygonPool=new core.Pool(function(){return core.Utils.newFloatArray(16)})}SkeletonBounds.prototype.update=function(skeleton,updateAabb){if(skeleton==null)throw new Error("skeleton cannot be null.");var boundingBoxes=this.boundingBoxes;var polygons=this.polygons;var polygonPool=this.polygonPool;var slots=skeleton.slots;var slotCount=slots.length;boundingBoxes.length=0;polygonPool.freeAll(polygons);polygons.length=0;for(var i=0;i<slotCount;i++){var slot=slots[i];var attachment=slot.getAttachment();if(attachment instanceof core.BoundingBoxAttachment){var boundingBox=attachment;boundingBoxes.push(boundingBox);var polygon=polygonPool.obtain();if(polygon.length!=boundingBox.worldVerticesLength){polygon=core.Utils.newFloatArray(boundingBox.worldVerticesLength)}polygons.push(polygon);boundingBox.computeWorldVertices(slot,0,boundingBox.worldVerticesLength,polygon,0,2)}}if(updateAabb){this.aabbCompute()}else{this.minX=Number.POSITIVE_INFINITY;this.minY=Number.POSITIVE_INFINITY;this.maxX=Number.NEGATIVE_INFINITY;this.maxY=Number.NEGATIVE_INFINITY}};SkeletonBounds.prototype.aabbCompute=function(){var minX=Number.POSITIVE_INFINITY,minY=Number.POSITIVE_INFINITY,maxX=Number.NEGATIVE_INFINITY,maxY=Number.NEGATIVE_INFINITY;var polygons=this.polygons;for(var i=0,n=polygons.length;i<n;i++){var polygon=polygons[i];var vertices=polygon;for(var ii=0,nn=polygon.length;ii<nn;ii+=2){var x=vertices[ii];var y=vertices[ii+1];minX=Math.min(minX,x);minY=Math.min(minY,y);maxX=Math.max(maxX,x);maxY=Math.max(maxY,y)}}this.minX=minX;this.minY=minY;this.maxX=maxX;this.maxY=maxY};SkeletonBounds.prototype.aabbContainsPoint=function(x,y){return x>=this.minX&&x<=this.maxX&&y>=this.minY&&y<=this.maxY};SkeletonBounds.prototype.aabbIntersectsSegment=function(x1,y1,x2,y2){var minX=this.minX;var minY=this.minY;var maxX=this.maxX;var maxY=this.maxY;if((x1<=minX&&x2<=minX)||(y1<=minY&&y2<=minY)||(x1>=maxX&&x2>=maxX)||(y1>=maxY&&y2>=maxY))return!1;var m=(y2-y1)/(x2-x1);var y=m*(minX-x1)+y1;if(y>minY&&y<maxY)return!0;y=m*(maxX-x1)+y1;if(y>minY&&y<maxY)return!0;var x=(minY-y1)/m+x1;if(x>minX&&x<maxX)return!0;x=(maxY-y1)/m+x1;if(x>minX&&x<maxX)return!0;return!1};SkeletonBounds.prototype.aabbIntersectsSkeleton=function(bounds){return this.minX<bounds.maxX&&this.maxX>bounds.minX&&this.minY<bounds.maxY&&this.maxY>bounds.minY};SkeletonBounds.prototype.containsPoint=function(x,y){var polygons=this.polygons;for(var i=0,n=polygons.length;i<n;i++)if(this.containsPointPolygon(polygons[i],x,y))return this.boundingBoxes[i];return null};SkeletonBounds.prototype.containsPointPolygon=function(polygon,x,y){var vertices=polygon;var nn=polygon.length;var prevIndex=nn-2;var inside=!1;for(var ii=0;ii<nn;ii+=2){var vertexY=vertices[ii+1];var prevY=vertices[prevIndex+1];if((vertexY<y&&prevY>=y)||(prevY<y&&vertexY>=y)){var vertexX=vertices[ii];if(vertexX+(y-vertexY)/(prevY-vertexY)*(vertices[prevIndex]-vertexX)<x)inside=!inside}prevIndex=ii}return inside};SkeletonBounds.prototype.intersectsSegment=function(x1,y1,x2,y2){var polygons=this.polygons;for(var i=0,n=polygons.length;i<n;i++)if(this.intersectsSegmentPolygon(polygons[i],x1,y1,x2,y2))return this.boundingBoxes[i];return null};SkeletonBounds.prototype.intersectsSegmentPolygon=function(polygon,x1,y1,x2,y2){var vertices=polygon;var nn=polygon.length;var width12=x1-x2,height12=y1-y2;var det1=x1*y2-y1*x2;var x3=vertices[nn-2],y3=vertices[nn-1];for(var ii=0;ii<nn;ii+=2){var x4=vertices[ii],y4=vertices[ii+1];var det2=x3*y4-y3*x4;var width34=x3-x4,height34=y3-y4;var det3=width12*height34-height12*width34;var x=(det1*width34-width12*det2)/det3;if(((x>=x3&&x<=x4)||(x>=x4&&x<=x3))&&((x>=x1&&x<=x2)||(x>=x2&&x<=x1))){var y=(det1*height34-height12*det2)/det3;if(((y>=y3&&y<=y4)||(y>=y4&&y<=y3))&&((y>=y1&&y<=y2)||(y>=y2&&y<=y1)))return!0}x3=x4;y3=y4}return!1};SkeletonBounds.prototype.getPolygon=function(boundingBox){if(boundingBox==null)throw new Error("boundingBox cannot be null.");var index=this.boundingBoxes.indexOf(boundingBox);return index==-1?null:this.polygons[index]};SkeletonBounds.prototype.getWidth=function(){return this.maxX-this.minX};SkeletonBounds.prototype.getHeight=function(){return this.maxY-this.minY};return SkeletonBounds}());core.SkeletonBounds=SkeletonBounds})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var SkeletonClipping=(function(){function SkeletonClipping(){this.triangulator=new core.Triangulator();this.clippingPolygon=new Array();this.clipOutput=new Array();this.clippedVertices=new Array();this.clippedTriangles=new Array();this.scratch=new Array()}SkeletonClipping.prototype.clipStart=function(slot,clip){if(this.clipAttachment!=null)return 0;this.clipAttachment=clip;var n=clip.worldVerticesLength;var vertices=core.Utils.setArraySize(this.clippingPolygon,n);clip.computeWorldVertices(slot,0,n,vertices,0,2);var clippingPolygon=this.clippingPolygon;SkeletonClipping.makeClockwise(clippingPolygon);var clippingPolygons=this.clippingPolygons=this.triangulator.decompose(clippingPolygon,this.triangulator.triangulate(clippingPolygon));for(var i=0,n_1=clippingPolygons.length;i<n_1;i++){var polygon=clippingPolygons[i];SkeletonClipping.makeClockwise(polygon);polygon.push(polygon[0]);polygon.push(polygon[1])}return clippingPolygons.length};SkeletonClipping.prototype.clipEndWithSlot=function(slot){if(this.clipAttachment!=null&&this.clipAttachment.endSlot==slot.data)this.clipEnd()};SkeletonClipping.prototype.clipEnd=function(){if(this.clipAttachment==null)return;this.clipAttachment=null;this.clippingPolygons=null;this.clippedVertices.length=0;this.clippedTriangles.length=0;this.clippingPolygon.length=0};SkeletonClipping.prototype.isClipping=function(){return this.clipAttachment!=null};SkeletonClipping.prototype.clipTriangles=function(vertices,verticesLength,triangles,trianglesLength,uvs,light,dark,twoColor){var clipOutput=this.clipOutput,clippedVertices=this.clippedVertices;var clippedTriangles=this.clippedTriangles;var polygons=this.clippingPolygons;var polygonsCount=this.clippingPolygons.length;var vertexSize=twoColor?12:8;var index=0;clippedVertices.length=0;clippedTriangles.length=0;outer:for(var i=0;i<trianglesLength;i+=3){var vertexOffset=triangles[i]<<1;var x1=vertices[vertexOffset],y1=vertices[vertexOffset+1];var u1=uvs[vertexOffset],v1=uvs[vertexOffset+1];vertexOffset=triangles[i+1]<<1;var x2=vertices[vertexOffset],y2=vertices[vertexOffset+1];var u2=uvs[vertexOffset],v2=uvs[vertexOffset+1];vertexOffset=triangles[i+2]<<1;var x3=vertices[vertexOffset],y3=vertices[vertexOffset+1];var u3=uvs[vertexOffset],v3=uvs[vertexOffset+1];for(var p=0;p<polygonsCount;p++){var s=clippedVertices.length;if(this.clip(x1,y1,x2,y2,x3,y3,polygons[p],clipOutput)){var clipOutputLength=clipOutput.length;if(clipOutputLength==0)continue;var d0=y2-y3,d1=x3-x2,d2=x1-x3,d4=y3-y1;var d=1/(d0*d2+d1*(y1-y3));var clipOutputCount=clipOutputLength>>1;var clipOutputItems=this.clipOutput;var clippedVerticesItems=core.Utils.setArraySize(clippedVertices,s+clipOutputCount*vertexSize);for(var ii=0;ii<clipOutputLength;ii+=2){var x=clipOutputItems[ii],y=clipOutputItems[ii+1];clippedVerticesItems[s]=x;clippedVerticesItems[s+1]=y;clippedVerticesItems[s+2]=light.r;clippedVerticesItems[s+3]=light.g;clippedVerticesItems[s+4]=light.b;clippedVerticesItems[s+5]=light.a;var c0=x-x3,c1=y-y3;var a=(d0*c0+d1*c1)*d;var b=(d4*c0+d2*c1)*d;var c=1-a-b;clippedVerticesItems[s+6]=u1*a+u2*b+u3*c;clippedVerticesItems[s+7]=v1*a+v2*b+v3*c;if(twoColor){clippedVerticesItems[s+8]=dark.r;clippedVerticesItems[s+9]=dark.g;clippedVerticesItems[s+10]=dark.b;clippedVerticesItems[s+11]=dark.a}s+=vertexSize}s=clippedTriangles.length;var clippedTrianglesItems=core.Utils.setArraySize(clippedTriangles,s+3*(clipOutputCount-2));clipOutputCount--;for(var ii=1;ii<clipOutputCount;ii++){clippedTrianglesItems[s]=index;clippedTrianglesItems[s+1]=(index+ii);clippedTrianglesItems[s+2]=(index+ii+1);s+=3}index+=clipOutputCount+1}else{var clippedVerticesItems=core.Utils.setArraySize(clippedVertices,s+3*vertexSize);clippedVerticesItems[s]=x1;clippedVerticesItems[s+1]=y1;clippedVerticesItems[s+2]=light.r;clippedVerticesItems[s+3]=light.g;clippedVerticesItems[s+4]=light.b;clippedVerticesItems[s+5]=light.a;if(!twoColor){clippedVerticesItems[s+6]=u1;clippedVerticesItems[s+7]=v1;clippedVerticesItems[s+8]=x2;clippedVerticesItems[s+9]=y2;clippedVerticesItems[s+10]=light.r;clippedVerticesItems[s+11]=light.g;clippedVerticesItems[s+12]=light.b;clippedVerticesItems[s+13]=light.a;clippedVerticesItems[s+14]=u2;clippedVerticesItems[s+15]=v2;clippedVerticesItems[s+16]=x3;clippedVerticesItems[s+17]=y3;clippedVerticesItems[s+18]=light.r;clippedVerticesItems[s+19]=light.g;clippedVerticesItems[s+20]=light.b;clippedVerticesItems[s+21]=light.a;clippedVerticesItems[s+22]=u3;clippedVerticesItems[s+23]=v3}else{clippedVerticesItems[s+6]=u1;clippedVerticesItems[s+7]=v1;clippedVerticesItems[s+8]=dark.r;clippedVerticesItems[s+9]=dark.g;clippedVerticesItems[s+10]=dark.b;clippedVerticesItems[s+11]=dark.a;clippedVerticesItems[s+12]=x2;clippedVerticesItems[s+13]=y2;clippedVerticesItems[s+14]=light.r;clippedVerticesItems[s+15]=light.g;clippedVerticesItems[s+16]=light.b;clippedVerticesItems[s+17]=light.a;clippedVerticesItems[s+18]=u2;clippedVerticesItems[s+19]=v2;clippedVerticesItems[s+20]=dark.r;clippedVerticesItems[s+21]=dark.g;clippedVerticesItems[s+22]=dark.b;clippedVerticesItems[s+23]=dark.a;clippedVerticesItems[s+24]=x3;clippedVerticesItems[s+25]=y3;clippedVerticesItems[s+26]=light.r;clippedVerticesItems[s+27]=light.g;clippedVerticesItems[s+28]=light.b;clippedVerticesItems[s+29]=light.a;clippedVerticesItems[s+30]=u3;clippedVerticesItems[s+31]=v3;clippedVerticesItems[s+32]=dark.r;clippedVerticesItems[s+33]=dark.g;clippedVerticesItems[s+34]=dark.b;clippedVerticesItems[s+35]=dark.a}s=clippedTriangles.length;var clippedTrianglesItems=core.Utils.setArraySize(clippedTriangles,s+3);clippedTrianglesItems[s]=index;clippedTrianglesItems[s+1]=(index+1);clippedTrianglesItems[s+2]=(index+2);index+=3;continue outer}}}};SkeletonClipping.prototype.clip=function(x1,y1,x2,y2,x3,y3,clippingArea,output){var originalOutput=output;var clipped=!1;var input=null;if(clippingArea.length%4>=2){input=output;output=this.scratch}else input=this.scratch;input.length=0;input.push(x1);input.push(y1);input.push(x2);input.push(y2);input.push(x3);input.push(y3);input.push(x1);input.push(y1);output.length=0;var clippingVertices=clippingArea;var clippingVerticesLast=clippingArea.length-4;for(var i=0;;i+=2){var edgeX=clippingVertices[i],edgeY=clippingVertices[i+1];var edgeX2=clippingVertices[i+2],edgeY2=clippingVertices[i+3];var deltaX=edgeX-edgeX2,deltaY=edgeY-edgeY2;var inputVertices=input;var inputVerticesLength=input.length-2,outputStart=output.length;for(var ii=0;ii<inputVerticesLength;ii+=2){var inputX=inputVertices[ii],inputY=inputVertices[ii+1];var inputX2=inputVertices[ii+2],inputY2=inputVertices[ii+3];var side2=deltaX*(inputY2-edgeY2)-deltaY*(inputX2-edgeX2)>0;if(deltaX*(inputY-edgeY2)-deltaY*(inputX-edgeX2)>0){if(side2){output.push(inputX2);output.push(inputY2);continue}var c0=inputY2-inputY,c2=inputX2-inputX;var ua=(c2*(edgeY-inputY)-c0*(edgeX-inputX))/(c0*(edgeX2-edgeX)-c2*(edgeY2-edgeY));output.push(edgeX+(edgeX2-edgeX)*ua);output.push(edgeY+(edgeY2-edgeY)*ua)}else if(side2){var c0=inputY2-inputY,c2=inputX2-inputX;var ua=(c2*(edgeY-inputY)-c0*(edgeX-inputX))/(c0*(edgeX2-edgeX)-c2*(edgeY2-edgeY));output.push(edgeX+(edgeX2-edgeX)*ua);output.push(edgeY+(edgeY2-edgeY)*ua);output.push(inputX2);output.push(inputY2)}clipped=!0}if(outputStart==output.length){originalOutput.length=0;return!0}output.push(output[0]);output.push(output[1]);if(i==clippingVerticesLast)break;var temp=output;output=input;output.length=0;input=temp}if(originalOutput!=output){originalOutput.length=0;for(var i=0,n=output.length-2;i<n;i++)originalOutput[i]=output[i]}else originalOutput.length=originalOutput.length-2;return clipped};SkeletonClipping.makeClockwise=function(polygon){var vertices=polygon;var verticeslength=polygon.length;var area=vertices[verticeslength-2]*vertices[1]-vertices[0]*vertices[verticeslength-1],p1x=0,p1y=0,p2x=0,p2y=0;for(var i=0,n=verticeslength-3;i<n;i+=2){p1x=vertices[i];p1y=vertices[i+1];p2x=vertices[i+2];p2y=vertices[i+3];area+=p1x*p2y-p2x*p1y}if(area<0)return;for(var i=0,lastX=verticeslength-2,n=verticeslength>>1;i<n;i+=2){var x=vertices[i],y=vertices[i+1];var other=lastX-i;vertices[i]=vertices[other];vertices[i+1]=vertices[other+1];vertices[other]=x;vertices[other+1]=y}};return SkeletonClipping}());core.SkeletonClipping=SkeletonClipping})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var SkeletonData=(function(){function SkeletonData(){this.bones=new Array();this.slots=new Array();this.skins=new Array();this.events=new Array();this.animations=new Array();this.ikConstraints=new Array();this.transformConstraints=new Array();this.pathConstraints=new Array();this.fps=0}SkeletonData.prototype.findBone=function(boneName){if(boneName==null)throw new Error("boneName cannot be null.");var bones=this.bones;for(var i=0,n=bones.length;i<n;i++){var bone=bones[i];if(bone.name==boneName)return bone}return null};SkeletonData.prototype.findBoneIndex=function(boneName){if(boneName==null)throw new Error("boneName cannot be null.");var bones=this.bones;for(var i=0,n=bones.length;i<n;i++)if(bones[i].name==boneName)return i;return-1};SkeletonData.prototype.findSlot=function(slotName){if(slotName==null)throw new Error("slotName cannot be null.");var slots=this.slots;for(var i=0,n=slots.length;i<n;i++){var slot=slots[i];if(slot.name==slotName)return slot}return null};SkeletonData.prototype.findSlotIndex=function(slotName){if(slotName==null)throw new Error("slotName cannot be null.");var slots=this.slots;for(var i=0,n=slots.length;i<n;i++)if(slots[i].name==slotName)return i;return-1};SkeletonData.prototype.findSkin=function(skinName){if(skinName==null)throw new Error("skinName cannot be null.");var skins=this.skins;for(var i=0,n=skins.length;i<n;i++){var skin=skins[i];if(skin.name==skinName)return skin}return null};SkeletonData.prototype.findEvent=function(eventDataName){if(eventDataName==null)throw new Error("eventDataName cannot be null.");var events=this.events;for(var i=0,n=events.length;i<n;i++){var event_4=events[i];if(event_4.name==eventDataName)return event_4}return null};SkeletonData.prototype.findAnimation=function(animationName){if(animationName==null)throw new Error("animationName cannot be null.");var animations=this.animations;for(var i=0,n=animations.length;i<n;i++){var animation=animations[i];if(animation.name==animationName)return animation}return null};SkeletonData.prototype.findIkConstraint=function(constraintName){if(constraintName==null)throw new Error("constraintName cannot be null.");var ikConstraints=this.ikConstraints;for(var i=0,n=ikConstraints.length;i<n;i++){var constraint=ikConstraints[i];if(constraint.name==constraintName)return constraint}return null};SkeletonData.prototype.findTransformConstraint=function(constraintName){if(constraintName==null)throw new Error("constraintName cannot be null.");var transformConstraints=this.transformConstraints;for(var i=0,n=transformConstraints.length;i<n;i++){var constraint=transformConstraints[i];if(constraint.name==constraintName)return constraint}return null};SkeletonData.prototype.findPathConstraint=function(constraintName){if(constraintName==null)throw new Error("constraintName cannot be null.");var pathConstraints=this.pathConstraints;for(var i=0,n=pathConstraints.length;i<n;i++){var constraint=pathConstraints[i];if(constraint.name==constraintName)return constraint}return null};SkeletonData.prototype.findPathConstraintIndex=function(pathConstraintName){if(pathConstraintName==null)throw new Error("pathConstraintName cannot be null.");var pathConstraints=this.pathConstraints;for(var i=0,n=pathConstraints.length;i<n;i++)if(pathConstraints[i].name==pathConstraintName)return i;return-1};return SkeletonData}());core.SkeletonData=SkeletonData})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var SkeletonJson=(function(){function SkeletonJson(attachmentLoader){this.scale=1;this.linkedMeshes=new Array();this.attachmentLoader=attachmentLoader}SkeletonJson.prototype.readSkeletonData=function(json){var scale=this.scale;var skeletonData=new core.SkeletonData();var root=typeof(json)==="string"?JSON.parse(json):json;var skeletonMap=root.skeleton;if(skeletonMap!=null){skeletonData.hash=skeletonMap.hash;skeletonData.version=skeletonMap.spine;skeletonData.width=skeletonMap.width;skeletonData.height=skeletonMap.height;skeletonData.fps=skeletonMap.fps;skeletonData.imagesPath=skeletonMap.images}if(root.bones){for(var i=0;i<root.bones.length;i++){var boneMap=root.bones[i];var parent_2=null;var parentName=this.getValue(boneMap,"parent",null);if(parentName!=null){parent_2=skeletonData.findBone(parentName);if(parent_2==null)throw new Error("Parent bone not found: "+parentName)}var data=new core.BoneData(skeletonData.bones.length,boneMap.name,parent_2);data.length=this.getValue(boneMap,"length",0)*scale;data.x=this.getValue(boneMap,"x",0)*scale;data.y=this.getValue(boneMap,"y",0)*scale;data.rotation=this.getValue(boneMap,"rotation",0);data.scaleX=this.getValue(boneMap,"scaleX",1);data.scaleY=this.getValue(boneMap,"scaleY",1);data.shearX=this.getValue(boneMap,"shearX",0);data.shearY=this.getValue(boneMap,"shearY",0);data.transformMode=SkeletonJson.transformModeFromString(this.getValue(boneMap,"transform","normal"));skeletonData.bones.push(data)}}if(root.slots){for(var i=0;i<root.slots.length;i++){var slotMap=root.slots[i];var slotName=slotMap.name;var boneName=slotMap.bone;var boneData=skeletonData.findBone(boneName);if(boneData==null)throw new Error("Slot bone not found: "+boneName);var data=new core.SlotData(skeletonData.slots.length,slotName,boneData);var color=this.getValue(slotMap,"color",null);if(color!=null)data.color.setFromString(color);var dark=this.getValue(slotMap,"dark",null);if(dark!=null){data.darkColor=new core.Color(1,1,1,1);data.darkColor.setFromString(dark)}data.attachmentName=this.getValue(slotMap,"attachment",null);data.blendMode=SkeletonJson.blendModeFromString(this.getValue(slotMap,"blend","normal"));skeletonData.slots.push(data)}}if(root.ik){for(var i=0;i<root.ik.length;i++){var constraintMap=root.ik[i];var data=new core.IkConstraintData(constraintMap.name);data.order=this.getValue(constraintMap,"order",0);for(var j=0;j<constraintMap.bones.length;j++){var boneName=constraintMap.bones[j];var bone=skeletonData.findBone(boneName);if(bone==null)throw new Error("IK bone not found: "+boneName);data.bones.push(bone)}var targetName=constraintMap.target;data.target=skeletonData.findBone(targetName);if(data.target==null)throw new Error("IK target bone not found: "+targetName);data.bendDirection=this.getValue(constraintMap,"bendPositive",!0)?1:-1;data.mix=this.getValue(constraintMap,"mix",1);skeletonData.ikConstraints.push(data)}}if(root.transform){for(var i=0;i<root.transform.length;i++){var constraintMap=root.transform[i];var data=new core.TransformConstraintData(constraintMap.name);data.order=this.getValue(constraintMap,"order",0);for(var j=0;j<constraintMap.bones.length;j++){var boneName=constraintMap.bones[j];var bone=skeletonData.findBone(boneName);if(bone==null)throw new Error("Transform constraint bone not found: "+boneName);data.bones.push(bone)}var targetName=constraintMap.target;data.target=skeletonData.findBone(targetName);if(data.target==null)throw new Error("Transform constraint target bone not found: "+targetName);data.local=this.getValue(constraintMap,"local",!1);data.relative=this.getValue(constraintMap,"relative",!1);data.offsetRotation=this.getValue(constraintMap,"rotation",0);data.offsetX=this.getValue(constraintMap,"x",0)*scale;data.offsetY=this.getValue(constraintMap,"y",0)*scale;data.offsetScaleX=this.getValue(constraintMap,"scaleX",0);data.offsetScaleY=this.getValue(constraintMap,"scaleY",0);data.offsetShearY=this.getValue(constraintMap,"shearY",0);data.rotateMix=this.getValue(constraintMap,"rotateMix",1);data.translateMix=this.getValue(constraintMap,"translateMix",1);data.scaleMix=this.getValue(constraintMap,"scaleMix",1);data.shearMix=this.getValue(constraintMap,"shearMix",1);skeletonData.transformConstraints.push(data)}}if(root.path){for(var i=0;i<root.path.length;i++){var constraintMap=root.path[i];var data=new core.PathConstraintData(constraintMap.name);data.order=this.getValue(constraintMap,"order",0);for(var j=0;j<constraintMap.bones.length;j++){var boneName=constraintMap.bones[j];var bone=skeletonData.findBone(boneName);if(bone==null)throw new Error("Transform constraint bone not found: "+boneName);data.bones.push(bone)}var targetName=constraintMap.target;data.target=skeletonData.findSlot(targetName);if(data.target==null)throw new Error("Path target slot not found: "+targetName);data.positionMode=SkeletonJson.positionModeFromString(this.getValue(constraintMap,"positionMode","percent"));data.spacingMode=SkeletonJson.spacingModeFromString(this.getValue(constraintMap,"spacingMode","length"));data.rotateMode=SkeletonJson.rotateModeFromString(this.getValue(constraintMap,"rotateMode","tangent"));data.offsetRotation=this.getValue(constraintMap,"rotation",0);data.position=this.getValue(constraintMap,"position",0);if(data.positionMode==core.PositionMode.Fixed)data.position*=scale;data.spacing=this.getValue(constraintMap,"spacing",0);if(data.spacingMode==core.SpacingMode.Length||data.spacingMode==core.SpacingMode.Fixed)data.spacing*=scale;data.rotateMix=this.getValue(constraintMap,"rotateMix",1);data.translateMix=this.getValue(constraintMap,"translateMix",1);skeletonData.pathConstraints.push(data)}}if(root.skins){for(var skinName in root.skins){var skinMap=root.skins[skinName];var skin=new core.Skin(skinName);for(var slotName in skinMap){var slotIndex=skeletonData.findSlotIndex(slotName);if(slotIndex==-1)throw new Error("Slot not found: "+slotName);var slotMap=skinMap[slotName];for(var entryName in slotMap){var attachment=this.readAttachment(slotMap[entryName],skin,slotIndex,entryName,skeletonData);if(attachment!=null)skin.addAttachment(slotIndex,entryName,attachment)}}skeletonData.skins.push(skin);if(skin.name=="default")skeletonData.defaultSkin=skin}}for(var i=0,n=this.linkedMeshes.length;i<n;i++){var linkedMesh=this.linkedMeshes[i];var skin=linkedMesh.skin==null?skeletonData.defaultSkin:skeletonData.findSkin(linkedMesh.skin);if(skin==null)throw new Error("Skin not found: "+linkedMesh.skin);var parent_3=skin.getAttachment(linkedMesh.slotIndex,linkedMesh.parent);if(parent_3==null)throw new Error("Parent mesh not found: "+linkedMesh.parent);linkedMesh.mesh.setParentMesh(parent_3)}this.linkedMeshes.length=0;if(root.events){for(var eventName in root.events){var eventMap=root.events[eventName];var data=new core.EventData(eventName);data.intValue=this.getValue(eventMap,"int",0);data.floatValue=this.getValue(eventMap,"float",0);data.stringValue=this.getValue(eventMap,"string","");data.audioPath=this.getValue(eventMap,"audio",null);if(data.audioPath!=null){data.volume=this.getValue(eventMap,"volume",1);data.balance=this.getValue(eventMap,"balance",0)}skeletonData.events.push(data)}}if(root.animations){for(var animationName in root.animations){var animationMap=root.animations[animationName];this.readAnimation(animationMap,animationName,skeletonData)}}return skeletonData};SkeletonJson.prototype.readAttachment=function(map,skin,slotIndex,name,skeletonData){var scale=this.scale;name=this.getValue(map,"name",name);var type=this.getValue(map,"type","region");switch(type){case "region":{var path=this.getValue(map,"path",name);var region=this.attachmentLoader.newRegionAttachment(skin,name,path);if(region==null)return null;region.path=path;region.x=this.getValue(map,"x",0)*scale;region.y=this.getValue(map,"y",0)*scale;region.scaleX=this.getValue(map,"scaleX",1);region.scaleY=this.getValue(map,"scaleY",1);region.rotation=this.getValue(map,"rotation",0);region.width=map.width*scale;region.height=map.height*scale;var color=this.getValue(map,"color",null);if(color!=null)region.color.setFromString(color);return region}case "boundingbox":{var box=this.attachmentLoader.newBoundingBoxAttachment(skin,name);if(box==null)return null;this.readVertices(map,box,map.vertexCount<<1);var color=this.getValue(map,"color",null);if(color!=null)box.color.setFromString(color);return box}case "mesh":case "linkedmesh":{var path=this.getValue(map,"path",name);var mesh=this.attachmentLoader.newMeshAttachment(skin,name,path);if(mesh==null)return null;mesh.path=path;var color=this.getValue(map,"color",null);if(color!=null)mesh.color.setFromString(color);var parent_4=this.getValue(map,"parent",null);if(parent_4!=null){mesh.inheritDeform=this.getValue(map,"deform",!0);this.linkedMeshes.push(new LinkedMesh(mesh,this.getValue(map,"skin",null),slotIndex,parent_4));return mesh}var uvs=map.uvs;this.readVertices(map,mesh,uvs.length);mesh.triangles=map.triangles;mesh.regionUVs=new Float32Array(uvs);mesh.hullLength=this.getValue(map,"hull",0)*2;return mesh}case "path":{var path=this.attachmentLoader.newPathAttachment(skin,name);if(path==null)return null;path.closed=this.getValue(map,"closed",!1);path.constantSpeed=this.getValue(map,"constantSpeed",!0);var vertexCount=map.vertexCount;this.readVertices(map,path,vertexCount<<1);var lengths=core.Utils.newArray(vertexCount/3,0);for(var i=0;i<map.lengths.length;i++)lengths[i]=map.lengths[i]*scale;path.lengths=lengths;var color=this.getValue(map,"color",null);if(color!=null)path.color.setFromString(color);return path}case "point":{var point=this.attachmentLoader.newPointAttachment(skin,name);if(point==null)return null;point.x=this.getValue(map,"x",0)*scale;point.y=this.getValue(map,"y",0)*scale;point.rotation=this.getValue(map,"rotation",0);var color=this.getValue(map,"color",null);if(color!=null)point.color.setFromString(color);return point}case "clipping":{var clip=this.attachmentLoader.newClippingAttachment(skin,name);if(clip==null)return null;var end=this.getValue(map,"end",null);if(end!=null){var slot=skeletonData.findSlot(end);if(slot==null)throw new Error("Clipping end slot not found: "+end);clip.endSlot=slot}var vertexCount=map.vertexCount;this.readVertices(map,clip,vertexCount<<1);var color=this.getValue(map,"color",null);if(color!=null)clip.color.setFromString(color);return clip}}return null};SkeletonJson.prototype.readVertices=function(map,attachment,verticesLength){var scale=this.scale;attachment.worldVerticesLength=verticesLength;var vertices=map.vertices;if(verticesLength==vertices.length){var scaledVertices=core.Utils.toFloatArray(vertices);if(scale!=1){for(var i=0,n=vertices.length;i<n;i++)scaledVertices[i]*=scale}attachment.vertices=scaledVertices;return}var weights=new Array();var bones=new Array();for(var i=0,n=vertices.length;i<n;){var boneCount=vertices[i++];bones.push(boneCount);for(var nn=i+boneCount*4;i<nn;i+=4){bones.push(vertices[i]);weights.push(vertices[i+1]*scale);weights.push(vertices[i+2]*scale);weights.push(vertices[i+3])}}attachment.bones=bones;attachment.vertices=core.Utils.toFloatArray(weights)};SkeletonJson.prototype.readAnimation=function(map,name,skeletonData){var scale=this.scale;var timelines=new Array();var duration=0;if(map.slots){for(var slotName in map.slots){var slotMap=map.slots[slotName];var slotIndex=skeletonData.findSlotIndex(slotName);if(slotIndex==-1)throw new Error("Slot not found: "+slotName);for(var timelineName in slotMap){var timelineMap=slotMap[timelineName];if(timelineName=="attachment"){var timeline=new core.AttachmentTimeline(timelineMap.length);timeline.slotIndex=slotIndex;var frameIndex=0;for(var i=0;i<timelineMap.length;i++){var valueMap=timelineMap[i];timeline.setFrame(frameIndex++,valueMap.time,valueMap.name)}timelines.push(timeline);duration=Math.max(duration,timeline.frames[timeline.getFrameCount()-1])}else if(timelineName=="color"){var timeline=new core.ColorTimeline(timelineMap.length);timeline.slotIndex=slotIndex;var frameIndex=0;for(var i=0;i<timelineMap.length;i++){var valueMap=timelineMap[i];var color=new core.Color();color.setFromString(valueMap.color||"ffffffff");timeline.setFrame(frameIndex,valueMap.time,color.r,color.g,color.b,color.a);this.readCurve(valueMap,timeline,frameIndex);frameIndex++}timelines.push(timeline);duration=Math.max(duration,timeline.frames[(timeline.getFrameCount()-1)*core.ColorTimeline.ENTRIES])}else if(timelineName=="twoColor"){var timeline=new core.TwoColorTimeline(timelineMap.length);timeline.slotIndex=slotIndex;var frameIndex=0;for(var i=0;i<timelineMap.length;i++){var valueMap=timelineMap[i];var light=new core.Color();var dark=new core.Color();light.setFromString(valueMap.light);dark.setFromString(valueMap.dark);timeline.setFrame(frameIndex,valueMap.time,light.r,light.g,light.b,light.a,dark.r,dark.g,dark.b);this.readCurve(valueMap,timeline,frameIndex);frameIndex++}timelines.push(timeline);duration=Math.max(duration,timeline.frames[(timeline.getFrameCount()-1)*core.TwoColorTimeline.ENTRIES])}else throw new Error("Invalid timeline type for a slot: "+timelineName+" ("+slotName+")")}}}if(map.bones){for(var boneName in map.bones){var boneMap=map.bones[boneName];var boneIndex=skeletonData.findBoneIndex(boneName);if(boneIndex==-1)throw new Error("Bone not found: "+boneName);for(var timelineName in boneMap){var timelineMap=boneMap[timelineName];if(timelineName==="rotate"){var timeline=new core.RotateTimeline(timelineMap.length);timeline.boneIndex=boneIndex;var frameIndex=0;for(var i=0;i<timelineMap.length;i++){var valueMap=timelineMap[i];timeline.setFrame(frameIndex,valueMap.time,valueMap.angle);this.readCurve(valueMap,timeline,frameIndex);frameIndex++}timelines.push(timeline);duration=Math.max(duration,timeline.frames[(timeline.getFrameCount()-1)*core.RotateTimeline.ENTRIES])}else if(timelineName==="translate"||timelineName==="scale"||timelineName==="shear"){var timeline=null;var timelineScale=1;if(timelineName==="scale")timeline=new core.ScaleTimeline(timelineMap.length);else if(timelineName==="shear")timeline=new core.ShearTimeline(timelineMap.length);else{timeline=new core.TranslateTimeline(timelineMap.length);timelineScale=scale}timeline.boneIndex=boneIndex;var frameIndex=0;for(var i=0;i<timelineMap.length;i++){var valueMap=timelineMap[i];var x=this.getValue(valueMap,"x",0),y=this.getValue(valueMap,"y",0);timeline.setFrame(frameIndex,valueMap.time,x*timelineScale,y*timelineScale);this.readCurve(valueMap,timeline,frameIndex);frameIndex++}timelines.push(timeline);duration=Math.max(duration,timeline.frames[(timeline.getFrameCount()-1)*core.TranslateTimeline.ENTRIES])}else throw new Error("Invalid timeline type for a bone: "+timelineName+" ("+boneName+")")}}}if(map.ik){for(var constraintName in map.ik){var constraintMap=map.ik[constraintName];var constraint=skeletonData.findIkConstraint(constraintName);var timeline=new core.IkConstraintTimeline(constraintMap.length);timeline.ikConstraintIndex=skeletonData.ikConstraints.indexOf(constraint);var frameIndex=0;for(var i=0;i<constraintMap.length;i++){var valueMap=constraintMap[i];timeline.setFrame(frameIndex,valueMap.time,this.getValue(valueMap,"mix",1),this.getValue(valueMap,"bendPositive",!0)?1:-1,this.getValue(valueMap,"compress",!1),this.getValue(valueMap,"stretch",!1));this.readCurve(valueMap,timeline,frameIndex);frameIndex++}timelines.push(timeline);duration=Math.max(duration,timeline.frames[(timeline.getFrameCount()-1)*core.IkConstraintTimeline.ENTRIES])}}if(map.transform){for(var constraintName in map.transform){var constraintMap=map.transform[constraintName];var constraint=skeletonData.findTransformConstraint(constraintName);var timeline=new core.TransformConstraintTimeline(constraintMap.length);timeline.transformConstraintIndex=skeletonData.transformConstraints.indexOf(constraint);var frameIndex=0;for(var i=0;i<constraintMap.length;i++){var valueMap=constraintMap[i];timeline.setFrame(frameIndex,valueMap.time,this.getValue(valueMap,"rotateMix",1),this.getValue(valueMap,"translateMix",1),this.getValue(valueMap,"scaleMix",1),this.getValue(valueMap,"shearMix",1));this.readCurve(valueMap,timeline,frameIndex);frameIndex++}timelines.push(timeline);duration=Math.max(duration,timeline.frames[(timeline.getFrameCount()-1)*core.TransformConstraintTimeline.ENTRIES])}}if(map.paths){for(var constraintName in map.paths){var constraintMap=map.paths[constraintName];var index=skeletonData.findPathConstraintIndex(constraintName);if(index==-1)throw new Error("Path constraint not found: "+constraintName);var data=skeletonData.pathConstraints[index];for(var timelineName in constraintMap){var timelineMap=constraintMap[timelineName];if(timelineName==="position"||timelineName==="spacing"){var timeline=null;var timelineScale=1;if(timelineName==="spacing"){timeline=new core.PathConstraintSpacingTimeline(timelineMap.length);if(data.spacingMode==core.SpacingMode.Length||data.spacingMode==core.SpacingMode.Fixed)timelineScale=scale}else{timeline=new core.PathConstraintPositionTimeline(timelineMap.length);if(data.positionMode==core.PositionMode.Fixed)timelineScale=scale}timeline.pathConstraintIndex=index;var frameIndex=0;for(var i=0;i<timelineMap.length;i++){var valueMap=timelineMap[i];timeline.setFrame(frameIndex,valueMap.time,this.getValue(valueMap,timelineName,0)*timelineScale);this.readCurve(valueMap,timeline,frameIndex);frameIndex++}timelines.push(timeline);duration=Math.max(duration,timeline.frames[(timeline.getFrameCount()-1)*core.PathConstraintPositionTimeline.ENTRIES])}else if(timelineName==="mix"){var timeline=new core.PathConstraintMixTimeline(timelineMap.length);timeline.pathConstraintIndex=index;var frameIndex=0;for(var i=0;i<timelineMap.length;i++){var valueMap=timelineMap[i];timeline.setFrame(frameIndex,valueMap.time,this.getValue(valueMap,"rotateMix",1),this.getValue(valueMap,"translateMix",1));this.readCurve(valueMap,timeline,frameIndex);frameIndex++}timelines.push(timeline);duration=Math.max(duration,timeline.frames[(timeline.getFrameCount()-1)*core.PathConstraintMixTimeline.ENTRIES])}}}}if(map.deform){for(var deformName in map.deform){var deformMap=map.deform[deformName];var skin=skeletonData.findSkin(deformName);if(skin==null)throw new Error("Skin not found: "+deformName);for(var slotName in deformMap){var slotMap=deformMap[slotName];var slotIndex=skeletonData.findSlotIndex(slotName);if(slotIndex==-1)throw new Error("Slot not found: "+slotMap.name);for(var timelineName in slotMap){var timelineMap=slotMap[timelineName];var attachment=skin.getAttachment(slotIndex,timelineName);if(attachment==null)throw new Error("Deform attachment not found: "+timelineMap.name);var weighted=attachment.bones!=null;var vertices=attachment.vertices;var deformLength=weighted?vertices.length/3*2:vertices.length;var timeline=new core.DeformTimeline(timelineMap.length);timeline.slotIndex=slotIndex;timeline.attachment=attachment;var frameIndex=0;for(var j=0;j<timelineMap.length;j++){var valueMap=timelineMap[j];var deform=void 0;var verticesValue=this.getValue(valueMap,"vertices",null);if(verticesValue==null)deform=weighted?core.Utils.newFloatArray(deformLength):vertices;else{deform=core.Utils.newFloatArray(deformLength);var start=this.getValue(valueMap,"offset",0);core.Utils.arrayCopy(verticesValue,0,deform,start,verticesValue.length);if(scale!=1){for(var i=start,n=i+verticesValue.length;i<n;i++)deform[i]*=scale}if(!weighted){for(var i=0;i<deformLength;i++)deform[i]+=vertices[i]}}timeline.setFrame(frameIndex,valueMap.time,deform);this.readCurve(valueMap,timeline,frameIndex);frameIndex++}timelines.push(timeline);duration=Math.max(duration,timeline.frames[timeline.getFrameCount()-1])}}}}var drawOrderNode=map.drawOrder;if(drawOrderNode==null)drawOrderNode=map.draworder;if(drawOrderNode!=null){var timeline=new core.DrawOrderTimeline(drawOrderNode.length);var slotCount=skeletonData.slots.length;var frameIndex=0;for(var j=0;j<drawOrderNode.length;j++){var drawOrderMap=drawOrderNode[j];var drawOrder=null;var offsets=this.getValue(drawOrderMap,"offsets",null);if(offsets!=null){drawOrder=core.Utils.newArray(slotCount,-1);var unchanged=core.Utils.newArray(slotCount-offsets.length,0);var originalIndex=0,unchangedIndex=0;for(var i=0;i<offsets.length;i++){var offsetMap=offsets[i];var slotIndex=skeletonData.findSlotIndex(offsetMap.slot);if(slotIndex==-1)throw new Error("Slot not found: "+offsetMap.slot);while(originalIndex!=slotIndex)unchanged[unchangedIndex++]=originalIndex++;drawOrder[originalIndex+offsetMap.offset]=originalIndex++}while(originalIndex<slotCount)unchanged[unchangedIndex++]=originalIndex++;for(var i=slotCount-1;i>=0;i--)if(drawOrder[i]==-1)drawOrder[i]=unchanged[--unchangedIndex]}timeline.setFrame(frameIndex++,drawOrderMap.time,drawOrder)}timelines.push(timeline);duration=Math.max(duration,timeline.frames[timeline.getFrameCount()-1])}if(map.events){var timeline=new core.EventTimeline(map.events.length);var frameIndex=0;for(var i=0;i<map.events.length;i++){var eventMap=map.events[i];var eventData=skeletonData.findEvent(eventMap.name);if(eventData==null)throw new Error("Event not found: "+eventMap.name);var event_5=new core.Event(core.Utils.toSinglePrecision(eventMap.time),eventData);event_5.intValue=this.getValue(eventMap,"int",eventData.intValue);event_5.floatValue=this.getValue(eventMap,"float",eventData.floatValue);event_5.stringValue=this.getValue(eventMap,"string",eventData.stringValue);if(event_5.data.audioPath!=null){event_5.volume=this.getValue(eventMap,"volume",1);event_5.balance=this.getValue(eventMap,"balance",0)}timeline.setFrame(frameIndex++,event_5)}timelines.push(timeline);duration=Math.max(duration,timeline.frames[timeline.getFrameCount()-1])}if(isNaN(duration)){throw new Error("Error while parsing animation, duration is NaN")}skeletonData.animations.push(new core.Animation(name,timelines,duration))};SkeletonJson.prototype.readCurve=function(map,timeline,frameIndex){if(!map.curve)return;if(map.curve==="stepped")timeline.setStepped(frameIndex);else if(Object.prototype.toString.call(map.curve)==='[object Array]'){var curve=map.curve;timeline.setCurve(frameIndex,curve[0],curve[1],curve[2],curve[3])}};SkeletonJson.prototype.getValue=function(map,prop,defaultValue){return map[prop]!==undefined?map[prop]:defaultValue};SkeletonJson.blendModeFromString=function(str){str=str.toLowerCase();if(str=="normal")return core.BlendMode.Normal;if(str=="additive")return core.BlendMode.Additive;if(str=="multiply")return core.BlendMode.Multiply;if(str=="screen")return core.BlendMode.Screen;throw new Error("Unknown blend mode: "+str)};SkeletonJson.positionModeFromString=function(str){str=str.toLowerCase();if(str=="fixed")return core.PositionMode.Fixed;if(str=="percent")return core.PositionMode.Percent;throw new Error("Unknown position mode: "+str)};SkeletonJson.spacingModeFromString=function(str){str=str.toLowerCase();if(str=="length")return core.SpacingMode.Length;if(str=="fixed")return core.SpacingMode.Fixed;if(str=="percent")return core.SpacingMode.Percent;throw new Error("Unknown position mode: "+str)};SkeletonJson.rotateModeFromString=function(str){str=str.toLowerCase();if(str=="tangent")return core.RotateMode.Tangent;if(str=="chain")return core.RotateMode.Chain;if(str=="chainscale")return core.RotateMode.ChainScale;throw new Error("Unknown rotate mode: "+str)};SkeletonJson.transformModeFromString=function(str){str=str.toLowerCase();if(str=="normal")return core.TransformMode.Normal;if(str=="onlytranslation")return core.TransformMode.OnlyTranslation;if(str=="norotationorreflection")return core.TransformMode.NoRotationOrReflection;if(str=="noscale")return core.TransformMode.NoScale;if(str=="noscaleorreflection")return core.TransformMode.NoScaleOrReflection;throw new Error("Unknown transform mode: "+str)};return SkeletonJson}());core.SkeletonJson=SkeletonJson;var LinkedMesh=(function(){function LinkedMesh(mesh,skin,slotIndex,parent){this.mesh=mesh;this.skin=skin;this.slotIndex=slotIndex;this.parent=parent}return LinkedMesh}())})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var Skin=(function(){function Skin(name){this.attachments=new Array();if(name==null)throw new Error("name cannot be null.");this.name=name}Skin.prototype.addAttachment=function(slotIndex,name,attachment){if(attachment==null)throw new Error("attachment cannot be null.");var attachments=this.attachments;if(slotIndex>=attachments.length)attachments.length=slotIndex+1;if(!attachments[slotIndex])attachments[slotIndex]={};attachments[slotIndex][name]=attachment};Skin.prototype.getAttachment=function(slotIndex,name){var dictionary=this.attachments[slotIndex];return dictionary?dictionary[name]:null};Skin.prototype.attachAll=function(skeleton,oldSkin){var slotIndex=0;for(var i=0;i<skeleton.slots.length;i++){var slot=skeleton.slots[i];var slotAttachment=slot.getAttachment();if(slotAttachment&&slotIndex<oldSkin.attachments.length){var dictionary=oldSkin.attachments[slotIndex];for(var key in dictionary){var skinAttachment=dictionary[key];if(slotAttachment==skinAttachment){var attachment=this.getAttachment(slotIndex,key);if(attachment!=null)slot.setAttachment(attachment);break}}}slotIndex++}};return Skin}());core.Skin=Skin})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var Slot=(function(){function Slot(data,bone){this.attachmentVertices=new Array();if(data==null)throw new Error("data cannot be null.");if(bone==null)throw new Error("bone cannot be null.");this.data=data;this.bone=bone;this.color=new core.Color();this.darkColor=data.darkColor==null?null:new core.Color();this.setToSetupPose();this.blendMode=this.data.blendMode}Slot.prototype.getAttachment=function(){return this.attachment};Slot.prototype.setAttachment=function(attachment){if(this.attachment==attachment)return;this.attachment=attachment;this.attachmentTime=this.bone.skeleton.time;this.attachmentVertices.length=0};Slot.prototype.setAttachmentTime=function(time){this.attachmentTime=this.bone.skeleton.time-time};Slot.prototype.getAttachmentTime=function(){return this.bone.skeleton.time-this.attachmentTime};Slot.prototype.setToSetupPose=function(){this.color.setFromColor(this.data.color);if(this.darkColor!=null)this.darkColor.setFromColor(this.data.darkColor);if(this.data.attachmentName==null)this.attachment=null;else{this.attachment=null;this.setAttachment(this.bone.skeleton.getAttachment(this.data.index,this.data.attachmentName))}};return Slot}());core.Slot=Slot})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var SlotData=(function(){function SlotData(index,name,boneData){this.color=new core.Color(1,1,1,1);if(index<0)throw new Error("index must be >=0.");if(name==null)throw new Error("name cannot be null.");if(boneData==null)throw new Error("boneData cannot be null.");this.index=index;this.name=name;this.boneData=boneData}return SlotData}());core.SlotData=SlotData})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var Texture=(function(){function Texture(image){this._image=image}Texture.prototype.getImage=function(){return this._image};Texture.filterFromString=function(text){switch(text.toLowerCase()){case "nearest":return TextureFilter.Nearest;case "linear":return TextureFilter.Linear;case "mipmap":return TextureFilter.MipMap;case "mipmapnearestnearest":return TextureFilter.MipMapNearestNearest;case "mipmaplinearnearest":return TextureFilter.MipMapLinearNearest;case "mipmapnearestlinear":return TextureFilter.MipMapNearestLinear;case "mipmaplinearlinear":return TextureFilter.MipMapLinearLinear;default:throw new Error("Unknown texture filter "+text)}};Texture.wrapFromString=function(text){switch(text.toLowerCase()){case "mirroredtepeat":return TextureWrap.MirroredRepeat;case "clamptoedge":return TextureWrap.ClampToEdge;case "repeat":return TextureWrap.Repeat;default:throw new Error("Unknown texture wrap "+text)}};return Texture}());core.Texture=Texture;var TextureFilter;(function(TextureFilter){TextureFilter[TextureFilter.Nearest=9728]="Nearest";TextureFilter[TextureFilter.Linear=9729]="Linear";TextureFilter[TextureFilter.MipMap=9987]="MipMap";TextureFilter[TextureFilter.MipMapNearestNearest=9984]="MipMapNearestNearest";TextureFilter[TextureFilter.MipMapLinearNearest=9985]="MipMapLinearNearest";TextureFilter[TextureFilter.MipMapNearestLinear=9986]="MipMapNearestLinear";TextureFilter[TextureFilter.MipMapLinearLinear=9987]="MipMapLinearLinear"})(TextureFilter=core.TextureFilter||(core.TextureFilter={}));var TextureWrap;(function(TextureWrap){TextureWrap[TextureWrap.MirroredRepeat=33648]="MirroredRepeat";TextureWrap[TextureWrap.ClampToEdge=33071]="ClampToEdge";TextureWrap[TextureWrap.Repeat=10497]="Repeat"})(TextureWrap=core.TextureWrap||(core.TextureWrap={}));var TextureRegion=(function(){function TextureRegion(){this.size=null}Object.defineProperty(TextureRegion.prototype,"width",{get:function(){var tex=this.texture;if(PIXI.VERSION[0]=='3'){return tex.crop.width}if(tex.trim){return tex.trim.width}return tex.orig.width},enumerable:!0,configurable:!0});Object.defineProperty(TextureRegion.prototype,"height",{get:function(){var tex=this.texture;if(PIXI.VERSION[0]=='3'){return tex.crop.height}if(tex.trim){return tex.trim.height}return tex.orig.height},enumerable:!0,configurable:!0});Object.defineProperty(TextureRegion.prototype,"u",{get:function(){return this.texture._uvs.x0},enumerable:!0,configurable:!0});Object.defineProperty(TextureRegion.prototype,"v",{get:function(){return this.texture._uvs.y0},enumerable:!0,configurable:!0});Object.defineProperty(TextureRegion.prototype,"u2",{get:function(){return this.texture._uvs.x2},enumerable:!0,configurable:!0});Object.defineProperty(TextureRegion.prototype,"v2",{get:function(){return this.texture._uvs.y2},enumerable:!0,configurable:!0});Object.defineProperty(TextureRegion.prototype,"offsetX",{get:function(){var tex=this.texture;return tex.trim?tex.trim.x:0},enumerable:!0,configurable:!0});Object.defineProperty(TextureRegion.prototype,"offsetY",{get:function(){console.warn("Deprecation Warning: @Hackerham: I guess, if you are using PIXI-SPINE ATLAS region.offsetY, you want a texture, right? Use region.texture from now on.");return this.spineOffsetY},enumerable:!0,configurable:!0});Object.defineProperty(TextureRegion.prototype,"pixiOffsetY",{get:function(){var tex=this.texture;return tex.trim?tex.trim.y:0},enumerable:!0,configurable:!0});Object.defineProperty(TextureRegion.prototype,"spineOffsetY",{get:function(){var tex=this.texture;return this.originalHeight-this.height-(tex.trim?tex.trim.y:0)},enumerable:!0,configurable:!0});Object.defineProperty(TextureRegion.prototype,"originalWidth",{get:function(){var tex=this.texture;if(PIXI.VERSION[0]=='3'){if(tex.trim){return tex.trim.width}return tex.crop.width}return tex.orig.width},enumerable:!0,configurable:!0});Object.defineProperty(TextureRegion.prototype,"originalHeight",{get:function(){var tex=this.texture;if(PIXI.VERSION[0]=='3'){if(tex.trim){return tex.trim.height}return tex.crop.height}return tex.orig.height},enumerable:!0,configurable:!0});Object.defineProperty(TextureRegion.prototype,"x",{get:function(){return this.texture.frame.x},enumerable:!0,configurable:!0});Object.defineProperty(TextureRegion.prototype,"y",{get:function(){return this.texture.frame.y},enumerable:!0,configurable:!0});Object.defineProperty(TextureRegion.prototype,"rotate",{get:function(){return this.texture.rotate!==0},enumerable:!0,configurable:!0});return TextureRegion}());core.TextureRegion=TextureRegion})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var TextureAtlas=(function(){function TextureAtlas(atlasText,textureLoader,callback){this.pages=new Array();this.regions=new Array();if(atlasText){this.addSpineAtlas(atlasText,textureLoader,callback)}}TextureAtlas.prototype.addTexture=function(name,texture){var pages=this.pages;var page=null;for(var i=0;i<pages.length;i++){if(pages[i].baseTexture===texture.baseTexture){page=pages[i];break}}if(page===null){page=new TextureAtlasPage();page.name='texturePage';var baseTexture=texture.baseTexture;page.width=baseTexture.realWidth;page.height=baseTexture.realHeight;page.baseTexture=baseTexture;page.minFilter=page.magFilter=core.TextureFilter.Nearest;page.uWrap=core.TextureWrap.ClampToEdge;page.vWrap=core.TextureWrap.ClampToEdge;pages.push(page)}var region=new TextureAtlasRegion();region.name=name;region.page=page;region.texture=texture;region.index=-1;this.regions.push(region);return region};TextureAtlas.prototype.addTextureHash=function(textures,stripExtension){for(var key in textures){if(textures.hasOwnProperty(key)){this.addTexture(stripExtension&&key.indexOf('.')!==-1?key.substr(0,key.lastIndexOf('.')):key,textures[key])}}};TextureAtlas.prototype.addSpineAtlas=function(atlasText,textureLoader,callback){return this.load(atlasText,textureLoader,callback)};TextureAtlas.prototype.load=function(atlasText,textureLoader,callback){var _this=this;if(textureLoader==null)throw new Error("textureLoader cannot be null.");var reader=new TextureAtlasReader(atlasText);var tuple=new Array(4);var page=null;var iterateParser=function(){while(!0){var line=reader.readLine();if(line==null){return callback&&callback(_this)}line=line.trim();if(line.length==0)page=null;else if(!page){page=new TextureAtlasPage();page.name=line;if(reader.readTuple(tuple)==2){page.width=parseInt(tuple[0]);page.height=parseInt(tuple[1]);reader.readTuple(tuple)}reader.readTuple(tuple);page.minFilter=core.Texture.filterFromString(tuple[0]);page.magFilter=core.Texture.filterFromString(tuple[1]);var direction=reader.readValue();page.uWrap=core.TextureWrap.ClampToEdge;page.vWrap=core.TextureWrap.ClampToEdge;if(direction=="x")page.uWrap=core.TextureWrap.Repeat;else if(direction=="y")page.vWrap=core.TextureWrap.Repeat;else if(direction=="xy")page.uWrap=page.vWrap=core.TextureWrap.Repeat;textureLoader(line,function(texture){if(texture===null){_this.pages.splice(_this.pages.indexOf(page),1);return callback&&callback(null)}page.baseTexture=texture;if(!texture.valid){texture.setSize(page.width,page.height)}_this.pages.push(page);page.setFilters();if(!page.width||!page.height){page.width=texture.realWidth;page.height=texture.realHeight;if(!page.width||!page.height){console.log("ERROR spine atlas page "+page.name+": meshes wont work if you dont specify size in atlas (http://www.html5gamedevs.com/topic/18888-pixi-spines-and-meshes/?p=107121)")}}iterateParser()});_this.pages.push(page);break}else{var region=new TextureAtlasRegion();region.name=line;region.page=page;var rotate=reader.readValue()=="true"?6:0;reader.readTuple(tuple);var x=parseInt(tuple[0]);var y=parseInt(tuple[1]);reader.readTuple(tuple);var width=parseInt(tuple[0]);var height=parseInt(tuple[1]);var resolution=page.baseTexture.resolution;x/=resolution;y/=resolution;width/=resolution;height/=resolution;var frame=new PIXI.Rectangle(x,y,rotate?height:width,rotate?width:height);if(reader.readTuple(tuple)==4){if(reader.readTuple(tuple)==4){reader.readTuple(tuple)}}var originalWidth=parseInt(tuple[0])/resolution;var originalHeight=parseInt(tuple[1])/resolution;reader.readTuple(tuple);var offsetX=parseInt(tuple[0])/resolution;var offsetY=parseInt(tuple[1])/resolution;var orig=new PIXI.Rectangle(0,0,originalWidth,originalHeight);var trim=new PIXI.Rectangle(offsetX,originalHeight-height-offsetY,width,height);if(PIXI.VERSION[0]!='3'){region.texture=new PIXI.Texture(region.page.baseTexture,frame,orig,trim,rotate)}else{var frame2=new PIXI.Rectangle(x,y,width,height);var crop=frame2.clone();trim.width=originalWidth;trim.height=originalHeight;region.texture=new PIXI.Texture(region.page.baseTexture,frame2,crop,trim,rotate)}region.index=parseInt(reader.readValue());region.texture.updateUvs();_this.regions.push(region)}}};iterateParser()};TextureAtlas.prototype.findRegion=function(name){for(var i=0;i<this.regions.length;i++){if(this.regions[i].name==name){return this.regions[i]}}return null};TextureAtlas.prototype.dispose=function(){for(var i=0;i<this.pages.length;i++){this.pages[i].baseTexture.dispose()}};return TextureAtlas}());core.TextureAtlas=TextureAtlas;var TextureAtlasReader=(function(){function TextureAtlasReader(text){this.index=0;this.lines=text.split(/\r\n|\r|\n/)}TextureAtlasReader.prototype.readLine=function(){if(this.index>=this.lines.length)return null;return this.lines[this.index++]};TextureAtlasReader.prototype.readValue=function(){var line=this.readLine();var colon=line.indexOf(":");if(colon==-1)throw new Error("Invalid line: "+line);return line.substring(colon+1).trim()};TextureAtlasReader.prototype.readTuple=function(tuple){var line=this.readLine();var colon=line.indexOf(":");if(colon==-1)throw new Error("Invalid line: "+line);var i=0,lastMatch=colon+1;for(;i<3;i++){var comma=line.indexOf(",",lastMatch);if(comma==-1)break;tuple[i]=line.substr(lastMatch,comma-lastMatch).trim();lastMatch=comma+1}tuple[i]=line.substring(lastMatch).trim();return i+1};return TextureAtlasReader}());var TextureAtlasPage=(function(){function TextureAtlasPage(){}TextureAtlasPage.prototype.setFilters=function(){var tex=this.baseTexture;var filter=this.minFilter;if(filter==core.TextureFilter.Linear){tex.scaleMode=PIXI.SCALE_MODES.LINEAR}else if(this.minFilter==core.TextureFilter.Nearest){tex.scaleMode=PIXI.SCALE_MODES.NEAREST}else{tex.mipmap=PIXI.MIPMAP_MODES.POW2;if(filter==core.TextureFilter.MipMapNearestNearest){tex.scaleMode=PIXI.SCALE_MODES.NEAREST}else{tex.scaleMode=PIXI.SCALE_MODES.LINEAR}}};return TextureAtlasPage}());core.TextureAtlasPage=TextureAtlasPage;var TextureAtlasRegion=(function(_super){__extends(TextureAtlasRegion,_super);function TextureAtlasRegion(){return _super!==null&&_super.apply(this,arguments)||this}return TextureAtlasRegion}(core.TextureRegion));core.TextureAtlasRegion=TextureAtlasRegion})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var TransformConstraint=(function(){function TransformConstraint(data,skeleton){this.rotateMix=0;this.translateMix=0;this.scaleMix=0;this.shearMix=0;this.temp=new core.Vector2();if(data==null)throw new Error("data cannot be null.");if(skeleton==null)throw new Error("skeleton cannot be null.");this.data=data;this.rotateMix=data.rotateMix;this.translateMix=data.translateMix;this.scaleMix=data.scaleMix;this.shearMix=data.shearMix;this.bones=new Array();for(var i=0;i<data.bones.length;i++)this.bones.push(skeleton.findBone(data.bones[i].name));this.target=skeleton.findBone(data.target.name)}TransformConstraint.prototype.apply=function(){this.update()};TransformConstraint.prototype.update=function(){if(this.data.local){if(this.data.relative)this.applyRelativeLocal();else this.applyAbsoluteLocal()}else{if(this.data.relative)this.applyRelativeWorld();else this.applyAbsoluteWorld()}};TransformConstraint.prototype.applyAbsoluteWorld=function(){var rotateMix=this.rotateMix,translateMix=this.translateMix,scaleMix=this.scaleMix,shearMix=this.shearMix;var target=this.target;var targetMat=target.matrix;var ta=targetMat.a,tb=targetMat.c,tc=targetMat.b,td=targetMat.d;var degRadReflect=ta*td-tb*tc>0?core.MathUtils.degRad:-core.MathUtils.degRad;var offsetRotation=this.data.offsetRotation*degRadReflect;var offsetShearY=this.data.offsetShearY*degRadReflect;var bones=this.bones;for(var i=0,n=bones.length;i<n;i++){var bone=bones[i];var modified=!1;var mat=bone.matrix;if(rotateMix!=0){var a=mat.a,b=mat.c,c=mat.b,d=mat.d;var r=Math.atan2(tc,ta)-Math.atan2(c,a)+offsetRotation;if(r>core.MathUtils.PI)r-=core.MathUtils.PI2;else if(r<-core.MathUtils.PI)r+=core.MathUtils.PI2;r*=rotateMix;var cos=Math.cos(r),sin=Math.sin(r);mat.a=cos*a-sin*c;mat.c=cos*b-sin*d;mat.b=sin*a+cos*c;mat.d=sin*b+cos*d;modified=!0}if(translateMix!=0){var temp=this.temp;target.localToWorld(temp.set(this.data.offsetX,this.data.offsetY));mat.tx+=(temp.x-mat.tx)*translateMix;mat.ty+=(temp.y-mat.ty)*translateMix;modified=!0}if(scaleMix>0){var s=Math.sqrt(mat.a*mat.a+mat.b*mat.b);var ts=Math.sqrt(ta*ta+tc*tc);if(s>0.00001)s=(s+(ts-s+this.data.offsetScaleX)*scaleMix)/s;mat.a*=s;mat.b*=s;s=Math.sqrt(mat.c*mat.c+mat.d*mat.d);ts=Math.sqrt(tb*tb+td*td);if(s>0.00001)s=(s+(ts-s+this.data.offsetScaleY)*scaleMix)/s;mat.c*=s;mat.d*=s;modified=!0}if(shearMix>0){var b=mat.c,d=mat.d;var by=Math.atan2(d,b);var r=Math.atan2(td,tb)-Math.atan2(tc,ta)-(by-Math.atan2(mat.b,mat.a));if(r>core.MathUtils.PI)r-=core.MathUtils.PI2;else if(r<-core.MathUtils.PI)r+=core.MathUtils.PI2;r=by+(r+offsetShearY)*shearMix;var s=Math.sqrt(b*b+d*d);mat.c=Math.cos(r)*s;mat.d=Math.sin(r)*s;modified=!0}if(modified)bone.appliedValid=!1}};TransformConstraint.prototype.applyRelativeWorld=function(){var rotateMix=this.rotateMix,translateMix=this.translateMix,scaleMix=this.scaleMix,shearMix=this.shearMix;var target=this.target;var targetMat=target.matrix;var ta=targetMat.a,tb=targetMat.c,tc=targetMat.b,td=targetMat.d;var degRadReflect=ta*td-tb*tc>0?core.MathUtils.degRad:-core.MathUtils.degRad;var offsetRotation=this.data.offsetRotation*degRadReflect,offsetShearY=this.data.offsetShearY*degRadReflect;var bones=this.bones;for(var i=0,n=bones.length;i<n;i++){var bone=bones[i];var modified=!1;var mat=bone.matrix;if(rotateMix!=0){var a=mat.a,b=mat.c,c=mat.b,d=mat.d;var r=Math.atan2(tc,ta)+offsetRotation;if(r>core.MathUtils.PI)r-=core.MathUtils.PI2;else if(r<-core.MathUtils.PI)r+=core.MathUtils.PI2;r*=rotateMix;var cos=Math.cos(r),sin=Math.sin(r);mat.a=cos*a-sin*c;mat.c=cos*b-sin*d;mat.b=sin*a+cos*c;mat.d=sin*b+cos*d;modified=!0}if(translateMix!=0){var temp=this.temp;target.localToWorld(temp.set(this.data.offsetX,this.data.offsetY));mat.tx+=temp.x*translateMix;mat.ty+=temp.y*translateMix;modified=!0}if(scaleMix>0){var s=(Math.sqrt(ta*ta+tc*tc)-1+this.data.offsetScaleX)*scaleMix+1;mat.a*=s;mat.b*=s;s=(Math.sqrt(tb*tb+td*td)-1+this.data.offsetScaleY)*scaleMix+1;mat.c*=s;mat.d*=s;modified=!0}if(shearMix>0){var r=Math.atan2(td,tb)-Math.atan2(tc,ta);if(r>core.MathUtils.PI)r-=core.MathUtils.PI2;else if(r<-core.MathUtils.PI)r+=core.MathUtils.PI2;var b=mat.c,d=mat.d;r=Math.atan2(d,b)+(r-core.MathUtils.PI/2+offsetShearY)*shearMix;var s=Math.sqrt(b*b+d*d);mat.c=Math.cos(r)*s;mat.d=Math.sin(r)*s;modified=!0}if(modified)bone.appliedValid=!1}};TransformConstraint.prototype.applyAbsoluteLocal=function(){var rotateMix=this.rotateMix,translateMix=this.translateMix,scaleMix=this.scaleMix,shearMix=this.shearMix;var target=this.target;if(!target.appliedValid)target.updateAppliedTransform();var bones=this.bones;for(var i=0,n=bones.length;i<n;i++){var bone=bones[i];if(!bone.appliedValid)bone.updateAppliedTransform();var rotation=bone.arotation;if(rotateMix!=0){var r=target.arotation-rotation+this.data.offsetRotation;r-=(16384-((16384.499999999996-r/360)|0))*360;rotation+=r*rotateMix}var x=bone.ax,y=bone.ay;if(translateMix!=0){x+=(target.ax-x+this.data.offsetX)*translateMix;y+=(target.ay-y+this.data.offsetY)*translateMix}var scaleX=bone.ascaleX,scaleY=bone.ascaleY;if(scaleMix>0){if(scaleX>0.00001)scaleX=(scaleX+(target.ascaleX-scaleX+this.data.offsetScaleX)*scaleMix)/scaleX;if(scaleY>0.00001)scaleY=(scaleY+(target.ascaleY-scaleY+this.data.offsetScaleY)*scaleMix)/scaleY}var shearY=bone.ashearY;if(shearMix>0){var r=target.ashearY-shearY+this.data.offsetShearY;r-=(16384-((16384.499999999996-r/360)|0))*360;bone.shearY+=r*shearMix}bone.updateWorldTransformWith(x,y,rotation,scaleX,scaleY,bone.ashearX,shearY)}};TransformConstraint.prototype.applyRelativeLocal=function(){var rotateMix=this.rotateMix,translateMix=this.translateMix,scaleMix=this.scaleMix,shearMix=this.shearMix;var target=this.target;if(!target.appliedValid)target.updateAppliedTransform();var bones=this.bones;for(var i=0,n=bones.length;i<n;i++){var bone=bones[i];if(!bone.appliedValid)bone.updateAppliedTransform();var rotation=bone.arotation;if(rotateMix!=0)rotation+=(target.arotation+this.data.offsetRotation)*rotateMix;var x=bone.ax,y=bone.ay;if(translateMix!=0){x+=(target.ax+this.data.offsetX)*translateMix;y+=(target.ay+this.data.offsetY)*translateMix}var scaleX=bone.ascaleX,scaleY=bone.ascaleY;if(scaleMix>0){if(scaleX>0.00001)scaleX*=((target.ascaleX-1+this.data.offsetScaleX)*scaleMix)+1;if(scaleY>0.00001)scaleY*=((target.ascaleY-1+this.data.offsetScaleY)*scaleMix)+1}var shearY=bone.ashearY;if(shearMix>0)shearY+=(target.ashearY+this.data.offsetShearY)*shearMix;bone.updateWorldTransformWith(x,y,rotation,scaleX,scaleY,bone.ashearX,shearY)}};TransformConstraint.prototype.getOrder=function(){return this.data.order};return TransformConstraint}());core.TransformConstraint=TransformConstraint})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var TransformConstraintData=(function(){function TransformConstraintData(name){this.order=0;this.bones=new Array();this.rotateMix=0;this.translateMix=0;this.scaleMix=0;this.shearMix=0;this.offsetRotation=0;this.offsetX=0;this.offsetY=0;this.offsetScaleX=0;this.offsetScaleY=0;this.offsetShearY=0;this.relative=!1;this.local=!1;if(name==null)throw new Error("name cannot be null.");this.name=name}return TransformConstraintData}());core.TransformConstraintData=TransformConstraintData})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var Triangulator=(function(){function Triangulator(){this.convexPolygons=new Array();this.convexPolygonsIndices=new Array();this.indicesArray=new Array();this.isConcaveArray=new Array();this.triangles=new Array();this.polygonPool=new core.Pool(function(){return new Array()});this.polygonIndicesPool=new core.Pool(function(){return new Array()})}Triangulator.prototype.triangulate=function(verticesArray){var vertices=verticesArray;var vertexCount=verticesArray.length>>1;var indices=this.indicesArray;indices.length=0;for(var i=0;i<vertexCount;i++)indices[i]=i;var isConcave=this.isConcaveArray;isConcave.length=0;for(var i=0,n=vertexCount;i<n;++i)isConcave[i]=Triangulator.isConcave(i,vertexCount,vertices,indices);var triangles=this.triangles;triangles.length=0;while(vertexCount>3){var previous=vertexCount-1,i=0,next=1;while(!0){outer:if(!isConcave[i]){var p1=indices[previous]<<1,p2=indices[i]<<1,p3=indices[next]<<1;var p1x=vertices[p1],p1y=vertices[p1+1];var p2x=vertices[p2],p2y=vertices[p2+1];var p3x=vertices[p3],p3y=vertices[p3+1];for(var ii=(next+1)%vertexCount;ii!=previous;ii=(ii+1)%vertexCount){if(!isConcave[ii])continue;var v=indices[ii]<<1;var vx=vertices[v],vy=vertices[v+1];if(Triangulator.positiveArea(p3x,p3y,p1x,p1y,vx,vy)){if(Triangulator.positiveArea(p1x,p1y,p2x,p2y,vx,vy)){if(Triangulator.positiveArea(p2x,p2y,p3x,p3y,vx,vy))break outer}}}break}if(next==0){do{if(!isConcave[i])break;i--}while(i>0);break}previous=i;i=next;next=(next+1)%vertexCount}triangles.push(indices[(vertexCount+i-1)%vertexCount]);triangles.push(indices[i]);triangles.push(indices[(i+1)%vertexCount]);indices.splice(i,1);isConcave.splice(i,1);vertexCount--;var previousIndex=(vertexCount+i-1)%vertexCount;var nextIndex=i==vertexCount?0:i;isConcave[previousIndex]=Triangulator.isConcave(previousIndex,vertexCount,vertices,indices);isConcave[nextIndex]=Triangulator.isConcave(nextIndex,vertexCount,vertices,indices)}if(vertexCount==3){triangles.push(indices[2]);triangles.push(indices[0]);triangles.push(indices[1])}return triangles};Triangulator.prototype.decompose=function(verticesArray,triangles){var vertices=verticesArray;var convexPolygons=this.convexPolygons;this.polygonPool.freeAll(convexPolygons);convexPolygons.length=0;var convexPolygonsIndices=this.convexPolygonsIndices;this.polygonIndicesPool.freeAll(convexPolygonsIndices);convexPolygonsIndices.length=0;var polygonIndices=this.polygonIndicesPool.obtain();polygonIndices.length=0;var polygon=this.polygonPool.obtain();polygon.length=0;var fanBaseIndex=-1,lastWinding=0;for(var i=0,n=triangles.length;i<n;i+=3){var t1=triangles[i]<<1,t2=triangles[i+1]<<1,t3=triangles[i+2]<<1;var x1=vertices[t1],y1=vertices[t1+1];var x2=vertices[t2],y2=vertices[t2+1];var x3=vertices[t3],y3=vertices[t3+1];var merged=!1;if(fanBaseIndex==t1){var o=polygon.length-4;var winding1=Triangulator.winding(polygon[o],polygon[o+1],polygon[o+2],polygon[o+3],x3,y3);var winding2=Triangulator.winding(x3,y3,polygon[0],polygon[1],polygon[2],polygon[3]);if(winding1==lastWinding&&winding2==lastWinding){polygon.push(x3);polygon.push(y3);polygonIndices.push(t3);merged=!0}}if(!merged){if(polygon.length>0){convexPolygons.push(polygon);convexPolygonsIndices.push(polygonIndices)}else{this.polygonPool.free(polygon);this.polygonIndicesPool.free(polygonIndices)}polygon=this.polygonPool.obtain();polygon.length=0;polygon.push(x1);polygon.push(y1);polygon.push(x2);polygon.push(y2);polygon.push(x3);polygon.push(y3);polygonIndices=this.polygonIndicesPool.obtain();polygonIndices.length=0;polygonIndices.push(t1);polygonIndices.push(t2);polygonIndices.push(t3);lastWinding=Triangulator.winding(x1,y1,x2,y2,x3,y3);fanBaseIndex=t1}}if(polygon.length>0){convexPolygons.push(polygon);convexPolygonsIndices.push(polygonIndices)}for(var i=0,n=convexPolygons.length;i<n;i++){polygonIndices=convexPolygonsIndices[i];if(polygonIndices.length==0)continue;var firstIndex=polygonIndices[0];var lastIndex=polygonIndices[polygonIndices.length-1];polygon=convexPolygons[i];var o=polygon.length-4;var prevPrevX=polygon[o],prevPrevY=polygon[o+1];var prevX=polygon[o+2],prevY=polygon[o+3];var firstX=polygon[0],firstY=polygon[1];var secondX=polygon[2],secondY=polygon[3];var winding=Triangulator.winding(prevPrevX,prevPrevY,prevX,prevY,firstX,firstY);for(var ii=0;ii<n;ii++){if(ii==i)continue;var otherIndices=convexPolygonsIndices[ii];if(otherIndices.length!=3)continue;var otherFirstIndex=otherIndices[0];var otherSecondIndex=otherIndices[1];var otherLastIndex=otherIndices[2];var otherPoly=convexPolygons[ii];var x3=otherPoly[otherPoly.length-2],y3=otherPoly[otherPoly.length-1];if(otherFirstIndex!=firstIndex||otherSecondIndex!=lastIndex)continue;var winding1=Triangulator.winding(prevPrevX,prevPrevY,prevX,prevY,x3,y3);var winding2=Triangulator.winding(x3,y3,firstX,firstY,secondX,secondY);if(winding1==winding&&winding2==winding){otherPoly.length=0;otherIndices.length=0;polygon.push(x3);polygon.push(y3);polygonIndices.push(otherLastIndex);prevPrevX=prevX;prevPrevY=prevY;prevX=x3;prevY=y3;ii=0}}}for(var i=convexPolygons.length-1;i>=0;i--){polygon=convexPolygons[i];if(polygon.length==0){convexPolygons.splice(i,1);this.polygonPool.free(polygon);polygonIndices=convexPolygonsIndices[i];convexPolygonsIndices.splice(i,1);this.polygonIndicesPool.free(polygonIndices)}}return convexPolygons};Triangulator.isConcave=function(index,vertexCount,vertices,indices){var previous=indices[(vertexCount+index-1)%vertexCount]<<1;var current=indices[index]<<1;var next=indices[(index+1)%vertexCount]<<1;return!this.positiveArea(vertices[previous],vertices[previous+1],vertices[current],vertices[current+1],vertices[next],vertices[next+1])};Triangulator.positiveArea=function(p1x,p1y,p2x,p2y,p3x,p3y){return p1x*(p3y-p2y)+p2x*(p1y-p3y)+p3x*(p2y-p1y)>=0};Triangulator.winding=function(p1x,p1y,p2x,p2y,p3x,p3y){var px=p2x-p1x,py=p2y-p1y;return p3x*py-p3y*px+px*p1y-p1x*py>=0?1:-1};return Triangulator}());core.Triangulator=Triangulator})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var IntSet=(function(){function IntSet(){this.array=new Array()}IntSet.prototype.add=function(value){var contains=this.contains(value);this.array[value|0]=value|0;return!contains};IntSet.prototype.contains=function(value){return this.array[value|0]!=undefined};IntSet.prototype.remove=function(value){this.array[value|0]=undefined};IntSet.prototype.clear=function(){this.array.length=0};return IntSet}());core.IntSet=IntSet;var Color=(function(){function Color(r,g,b,a){if(r===void 0){r=0}if(g===void 0){g=0}if(b===void 0){b=0}if(a===void 0){a=0}this.r=r;this.g=g;this.b=b;this.a=a}Color.prototype.set=function(r,g,b,a){this.r=r;this.g=g;this.b=b;this.a=a;this.clamp();return this};Color.prototype.setFromColor=function(c){this.r=c.r;this.g=c.g;this.b=c.b;this.a=c.a;return this};Color.prototype.setFromString=function(hex){hex=hex.charAt(0)=='#'?hex.substr(1):hex;this.r=parseInt(hex.substr(0,2),16)/255.0;this.g=parseInt(hex.substr(2,2),16)/255.0;this.b=parseInt(hex.substr(4,2),16)/255.0;this.a=(hex.length!=8?255:parseInt(hex.substr(6,2),16))/255.0;return this};Color.prototype.add=function(r,g,b,a){this.r+=r;this.g+=g;this.b+=b;this.a+=a;this.clamp();return this};Color.prototype.clamp=function(){if(this.r<0)this.r=0;else if(this.r>1)this.r=1;if(this.g<0)this.g=0;else if(this.g>1)this.g=1;if(this.b<0)this.b=0;else if(this.b>1)this.b=1;if(this.a<0)this.a=0;else if(this.a>1)this.a=1;return this};Color.WHITE=new Color(1,1,1,1);Color.RED=new Color(1,0,0,1);Color.GREEN=new Color(0,1,0,1);Color.BLUE=new Color(0,0,1,1);Color.MAGENTA=new Color(1,0,1,1);return Color}());core.Color=Color;var MathUtils=(function(){function MathUtils(){}MathUtils.clamp=function(value,min,max){if(value<min)return min;if(value>max)return max;return value};MathUtils.cosDeg=function(degrees){return Math.cos(degrees*MathUtils.degRad)};MathUtils.sinDeg=function(degrees){return Math.sin(degrees*MathUtils.degRad)};MathUtils.signum=function(value){return value>0?1:value<0?-1:0};MathUtils.toInt=function(x){return x>0?Math.floor(x):Math.ceil(x)};MathUtils.cbrt=function(x){var y=Math.pow(Math.abs(x),1/3);return x<0?-y:y};MathUtils.randomTriangular=function(min,max){return MathUtils.randomTriangularWith(min,max,(min+max)*0.5)};MathUtils.randomTriangularWith=function(min,max,mode){var u=Math.random();var d=max-min;if(u<=(mode-min)/d)return min+Math.sqrt(u*d*(mode-min));return max-Math.sqrt((1-u)*d*(max-mode))};MathUtils.PI=3.1415927;MathUtils.PI2=MathUtils.PI*2;MathUtils.radiansToDegrees=180/MathUtils.PI;MathUtils.radDeg=MathUtils.radiansToDegrees;MathUtils.degreesToRadians=MathUtils.PI/180;MathUtils.degRad=MathUtils.degreesToRadians;return MathUtils}());core.MathUtils=MathUtils;var Interpolation=(function(){function Interpolation(){}Interpolation.prototype.apply=function(start,end,a){return start+(end-start)*this.applyInternal(a)};return Interpolation}());core.Interpolation=Interpolation;var Pow=(function(_super){__extends(Pow,_super);function Pow(power){var _this=_super.call(this)||this;_this.power=2;_this.power=power;return _this}Pow.prototype.applyInternal=function(a){if(a<=0.5)return Math.pow(a*2,this.power)/2;return Math.pow((a-1)*2,this.power)/(this.power%2==0?-2:2)+1};return Pow}(Interpolation));core.Pow=Pow;var PowOut=(function(_super){__extends(PowOut,_super);function PowOut(power){return _super.call(this,power)||this}PowOut.prototype.applyInternal=function(a){return Math.pow(a-1,this.power)*(this.power%2==0?-1:1)+1};return PowOut}(Pow));core.PowOut=PowOut;var Utils=(function(){function Utils(){}Utils.arrayCopy=function(source,sourceStart,dest,destStart,numElements){for(var i=sourceStart,j=destStart;i<sourceStart+numElements;i++,j++){dest[j]=source[i]}};Utils.setArraySize=function(array,size,value){if(value===void 0){value=0}var oldSize=array.length;if(oldSize==size)return array;array.length=size;if(oldSize<size){for(var i=oldSize;i<size;i++)array[i]=value}return array};Utils.ensureArrayCapacity=function(array,size,value){if(value===void 0){value=0}if(array.length>=size)return array;return Utils.setArraySize(array,size,value)};Utils.newArray=function(size,defaultValue){var array=new Array(size);for(var i=0;i<size;i++)array[i]=defaultValue;return array};Utils.newFloatArray=function(size){if(Utils.SUPPORTS_TYPED_ARRAYS){return new Float32Array(size)}else{var array=new Array(size);for(var i=0;i<array.length;i++)array[i]=0;return array}};Utils.newShortArray=function(size){if(Utils.SUPPORTS_TYPED_ARRAYS){return new Int16Array(size)}else{var array=new Array(size);for(var i=0;i<array.length;i++)array[i]=0;return array}};Utils.toFloatArray=function(array){return Utils.SUPPORTS_TYPED_ARRAYS?new Float32Array(array):array};Utils.toSinglePrecision=function(value){return Utils.SUPPORTS_TYPED_ARRAYS?Math.fround(value):value};Utils.webkit602BugfixHelper=function(alpha,blend){};Utils.SUPPORTS_TYPED_ARRAYS=typeof(Float32Array)!=="undefined";return Utils}());core.Utils=Utils;var DebugUtils=(function(){function DebugUtils(){}DebugUtils.logBones=function(skeleton){for(var i=0;i<skeleton.bones.length;i++){var bone=skeleton.bones[i];var mat=bone.matrix;console.log(bone.data.name+", "+mat.a+", "+mat.b+", "+mat.c+", "+mat.d+", "+mat.tx+", "+mat.ty)}};return DebugUtils}());core.DebugUtils=DebugUtils;var Pool=(function(){function Pool(instantiator){this.items=new Array();this.instantiator=instantiator}Pool.prototype.obtain=function(){return this.items.length>0?this.items.pop():this.instantiator()};Pool.prototype.free=function(item){if(item.reset)item.reset();this.items.push(item)};Pool.prototype.freeAll=function(items){for(var i=0;i<items.length;i++){if(items[i].reset)items[i].reset();this.items[i]=items[i]}};Pool.prototype.clear=function(){this.items.length=0};return Pool}());core.Pool=Pool;var Vector2=(function(){function Vector2(x,y){if(x===void 0){x=0}if(y===void 0){y=0}this.x=x;this.y=y}Vector2.prototype.set=function(x,y){this.x=x;this.y=y;return this};Vector2.prototype.length=function(){var x=this.x;var y=this.y;return Math.sqrt(x*x+y*y)};Vector2.prototype.normalize=function(){var len=this.length();if(len!=0){this.x/=len;this.y/=len}return this};return Vector2}());core.Vector2=Vector2;var TimeKeeper=(function(){function TimeKeeper(){this.maxDelta=0.064;this.framesPerSecond=0;this.delta=0;this.totalTime=0;this.lastTime=Date.now()/1000;this.frameCount=0;this.frameTime=0}TimeKeeper.prototype.update=function(){var now=Date.now()/1000;this.delta=now-this.lastTime;this.frameTime+=this.delta;this.totalTime+=this.delta;if(this.delta>this.maxDelta)this.delta=this.maxDelta;this.lastTime=now;this.frameCount++;if(this.frameTime>1){this.framesPerSecond=this.frameCount/this.frameTime;this.frameTime=0;this.frameCount=0}};return TimeKeeper}());core.TimeKeeper=TimeKeeper;var WindowedMean=(function(){function WindowedMean(windowSize){if(windowSize===void 0){windowSize=32}this.addedValues=0;this.lastValue=0;this.mean=0;this.dirty=!0;this.values=new Array(windowSize)}WindowedMean.prototype.hasEnoughData=function(){return this.addedValues>=this.values.length};WindowedMean.prototype.addValue=function(value){if(this.addedValues<this.values.length)this.addedValues++;this.values[this.lastValue++]=value;if(this.lastValue>this.values.length-1)this.lastValue=0;this.dirty=!0};WindowedMean.prototype.getMean=function(){if(this.hasEnoughData()){if(this.dirty){var mean=0;for(var i=0;i<this.values.length;i++){mean+=this.values[i]}this.mean=mean/this.values.length;this.dirty=!1}return this.mean}else{return 0}};return WindowedMean}());core.WindowedMean=WindowedMean})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var Attachment=(function(){function Attachment(name){if(name==null)throw new Error("name cannot be null.");this.name=name}return Attachment}());core.Attachment=Attachment;var VertexAttachment=(function(_super){__extends(VertexAttachment,_super);function VertexAttachment(name){var _this=_super.call(this,name)||this;_this.id=(VertexAttachment.nextID++&65535)<<11;_this.worldVerticesLength=0;return _this}VertexAttachment.prototype.computeWorldVerticesOld=function(slot,worldVertices){this.computeWorldVertices(slot,0,this.worldVerticesLength,worldVertices,0,2)};VertexAttachment.prototype.computeWorldVertices=function(slot,start,count,worldVertices,offset,stride){count=offset+(count>>1)*stride;var skeleton=slot.bone.skeleton;var deformArray=slot.attachmentVertices;var vertices=this.vertices;var bones=this.bones;if(bones==null){if(deformArray.length>0)vertices=deformArray;var mat=slot.bone.matrix;var x=mat.tx;var y=mat.ty;var a=mat.a,b=mat.c,c=mat.b,d=mat.d;for(var v_1=start,w=offset;w<count;v_1+=2,w+=stride){var vx=vertices[v_1],vy=vertices[v_1+1];worldVertices[w]=vx*a+vy*b+x;worldVertices[w+1]=vx*c+vy*d+y}return}var v=0,skip=0;for(var i=0;i<start;i+=2){var n=bones[v];v+=n+1;skip+=n}var skeletonBones=skeleton.bones;if(deformArray.length==0){for(var w=offset,b=skip*3;w<count;w+=stride){var wx=0,wy=0;var n=bones[v++];n+=v;for(;v<n;v++,b+=3){var mat=skeletonBones[bones[v]].matrix;var vx=vertices[b],vy=vertices[b+1],weight=vertices[b+2];wx+=(vx*mat.a+vy*mat.c+mat.tx)*weight;wy+=(vx*mat.b+vy*mat.d+mat.ty)*weight}worldVertices[w]=wx;worldVertices[w+1]=wy}}else{var deform=deformArray;for(var w=offset,b=skip*3,f=skip<<1;w<count;w+=stride){var wx=0,wy=0;var n=bones[v++];n+=v;for(;v<n;v++,b+=3,f+=2){var mat=skeletonBones[bones[v]].matrix;var vx=vertices[b]+deform[f],vy=vertices[b+1]+deform[f+1],weight=vertices[b+2];wx+=(vx*mat.a+vy*mat.c+mat.tx)*weight;wy+=(vx*mat.b+vy*mat.d+mat.ty)*weight}worldVertices[w]=wx;worldVertices[w+1]=wy}}};VertexAttachment.prototype.applyDeform=function(sourceAttachment){return this==sourceAttachment};VertexAttachment.nextID=0;return VertexAttachment}(Attachment));core.VertexAttachment=VertexAttachment})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var AttachmentType;(function(AttachmentType){AttachmentType[AttachmentType.Region=0]="Region";AttachmentType[AttachmentType.BoundingBox=1]="BoundingBox";AttachmentType[AttachmentType.Mesh=2]="Mesh";AttachmentType[AttachmentType.LinkedMesh=3]="LinkedMesh";AttachmentType[AttachmentType.Path=4]="Path";AttachmentType[AttachmentType.Point=5]="Point"})(AttachmentType=core.AttachmentType||(core.AttachmentType={}))})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var BoundingBoxAttachment=(function(_super){__extends(BoundingBoxAttachment,_super);function BoundingBoxAttachment(name){var _this=_super.call(this,name)||this;_this.color=new core.Color(1,1,1,1);return _this}return BoundingBoxAttachment}(core.VertexAttachment));core.BoundingBoxAttachment=BoundingBoxAttachment})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var ClippingAttachment=(function(_super){__extends(ClippingAttachment,_super);function ClippingAttachment(name){var _this=_super.call(this,name)||this;_this.color=new core.Color(0.2275,0.2275,0.8078,1);return _this}return ClippingAttachment}(core.VertexAttachment));core.ClippingAttachment=ClippingAttachment})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var MeshAttachment=(function(_super){__extends(MeshAttachment,_super);function MeshAttachment(name){var _this=_super.call(this,name)||this;_this.color=new core.Color(1,1,1,1);_this.inheritDeform=!1;_this.tempColor=new core.Color(0,0,0,0);return _this}MeshAttachment.prototype.applyDeform=function(sourceAttachment){return this==sourceAttachment||(this.inheritDeform&&this.parentMesh==sourceAttachment)};MeshAttachment.prototype.getParentMesh=function(){return this.parentMesh};MeshAttachment.prototype.setParentMesh=function(parentMesh){this.parentMesh=parentMesh;if(parentMesh!=null){this.bones=parentMesh.bones;this.vertices=parentMesh.vertices;this.worldVerticesLength=parentMesh.worldVerticesLength;this.regionUVs=parentMesh.regionUVs;this.triangles=parentMesh.triangles;this.hullLength=parentMesh.hullLength;this.worldVerticesLength=parentMesh.worldVerticesLength}};return MeshAttachment}(core.VertexAttachment));core.MeshAttachment=MeshAttachment})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var PathAttachment=(function(_super){__extends(PathAttachment,_super);function PathAttachment(name){var _this=_super.call(this,name)||this;_this.closed=!1;_this.constantSpeed=!1;_this.color=new core.Color(1,1,1,1);return _this}return PathAttachment}(core.VertexAttachment));core.PathAttachment=PathAttachment})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var PointAttachment=(function(_super){__extends(PointAttachment,_super);function PointAttachment(name){var _this=_super.call(this,name)||this;_this.color=new core.Color(0.38,0.94,0,1);return _this}PointAttachment.prototype.computeWorldPosition=function(bone,point){var mat=bone.matrix;point.x=this.x*mat.a+this.y*mat.c+bone.worldX;point.y=this.x*mat.b+this.y*mat.d+bone.worldY;return point};PointAttachment.prototype.computeWorldRotation=function(bone){var mat=bone.matrix;var cos=core.MathUtils.cosDeg(this.rotation),sin=core.MathUtils.sinDeg(this.rotation);var x=cos*mat.a+sin*mat.c;var y=cos*mat.b+sin*mat.d;return Math.atan2(y,x)*core.MathUtils.radDeg};return PointAttachment}(core.VertexAttachment));core.PointAttachment=PointAttachment})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var RegionAttachment=(function(_super){__extends(RegionAttachment,_super);function RegionAttachment(name){var _this=_super.call(this,name)||this;_this.x=0;_this.y=0;_this.scaleX=1;_this.scaleY=1;_this.rotation=0;_this.width=0;_this.height=0;_this.color=new core.Color(1,1,1,1);_this.offset=core.Utils.newFloatArray(8);_this.uvs=core.Utils.newFloatArray(8);_this.tempColor=new core.Color(1,1,1,1);return _this}RegionAttachment.prototype.updateOffset=function(){var regionScaleX=this.width/this.region.originalWidth*this.scaleX;var regionScaleY=this.height/this.region.originalHeight*this.scaleY;var localX=-this.width/2*this.scaleX+this.region.offsetX*regionScaleX;var localY=-this.height/2*this.scaleY+this.region.offsetY*regionScaleY;var localX2=localX+this.region.width*regionScaleX;var localY2=localY+this.region.height*regionScaleY;var radians=this.rotation*Math.PI/180;var cos=Math.cos(radians);var sin=Math.sin(radians);var localXCos=localX*cos+this.x;var localXSin=localX*sin;var localYCos=localY*cos+this.y;var localYSin=localY*sin;var localX2Cos=localX2*cos+this.x;var localX2Sin=localX2*sin;var localY2Cos=localY2*cos+this.y;var localY2Sin=localY2*sin;var offset=this.offset;offset[RegionAttachment.OX1]=localXCos-localYSin;offset[RegionAttachment.OY1]=localYCos+localXSin;offset[RegionAttachment.OX2]=localXCos-localY2Sin;offset[RegionAttachment.OY2]=localY2Cos+localXSin;offset[RegionAttachment.OX3]=localX2Cos-localY2Sin;offset[RegionAttachment.OY3]=localY2Cos+localX2Sin;offset[RegionAttachment.OX4]=localX2Cos-localYSin;offset[RegionAttachment.OY4]=localYCos+localX2Sin};RegionAttachment.prototype.setRegion=function(region){this.region=region;var uvs=this.uvs;if(region.rotate){uvs[2]=region.u;uvs[3]=region.v2;uvs[4]=region.u;uvs[5]=region.v;uvs[6]=region.u2;uvs[7]=region.v;uvs[0]=region.u2;uvs[1]=region.v2}else{uvs[0]=region.u;uvs[1]=region.v2;uvs[2]=region.u;uvs[3]=region.v;uvs[4]=region.u2;uvs[5]=region.v;uvs[6]=region.u2;uvs[7]=region.v2}};RegionAttachment.prototype.computeWorldVertices=function(bone,worldVertices,offset,stride){var vertexOffset=this.offset;var mat=bone.matrix;var x=mat.tx,y=mat.ty;var a=mat.a,b=mat.c,c=mat.b,d=mat.d;var offsetX=0,offsetY=0;offsetX=vertexOffset[RegionAttachment.OX1];offsetY=vertexOffset[RegionAttachment.OY1];worldVertices[offset]=offsetX*a+offsetY*b+x;worldVertices[offset+1]=offsetX*c+offsetY*d+y;offset+=stride;offsetX=vertexOffset[RegionAttachment.OX2];offsetY=vertexOffset[RegionAttachment.OY2];worldVertices[offset]=offsetX*a+offsetY*b+x;worldVertices[offset+1]=offsetX*c+offsetY*d+y;offset+=stride;offsetX=vertexOffset[RegionAttachment.OX3];offsetY=vertexOffset[RegionAttachment.OY3];worldVertices[offset]=offsetX*a+offsetY*b+x;worldVertices[offset+1]=offsetX*c+offsetY*d+y;offset+=stride;offsetX=vertexOffset[RegionAttachment.OX4];offsetY=vertexOffset[RegionAttachment.OY4];worldVertices[offset]=offsetX*a+offsetY*b+x;worldVertices[offset+1]=offsetX*c+offsetY*d+y};RegionAttachment.OX1=0;RegionAttachment.OY1=1;RegionAttachment.OX2=2;RegionAttachment.OY2=3;RegionAttachment.OX3=4;RegionAttachment.OY3=5;RegionAttachment.OX4=6;RegionAttachment.OY4=7;RegionAttachment.X1=0;RegionAttachment.Y1=1;RegionAttachment.C1R=2;RegionAttachment.C1G=3;RegionAttachment.C1B=4;RegionAttachment.C1A=5;RegionAttachment.U1=6;RegionAttachment.V1=7;RegionAttachment.X2=8;RegionAttachment.Y2=9;RegionAttachment.C2R=10;RegionAttachment.C2G=11;RegionAttachment.C2B=12;RegionAttachment.C2A=13;RegionAttachment.U2=14;RegionAttachment.V2=15;RegionAttachment.X3=16;RegionAttachment.Y3=17;RegionAttachment.C3R=18;RegionAttachment.C3G=19;RegionAttachment.C3B=20;RegionAttachment.C3A=21;RegionAttachment.U3=22;RegionAttachment.V3=23;RegionAttachment.X4=24;RegionAttachment.Y4=25;RegionAttachment.C4R=26;RegionAttachment.C4G=27;RegionAttachment.C4B=28;RegionAttachment.C4A=29;RegionAttachment.U4=30;RegionAttachment.V4=31;return RegionAttachment}(core.Attachment));core.RegionAttachment=RegionAttachment})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var JitterEffect=(function(){function JitterEffect(jitterX,jitterY){this.jitterX=0;this.jitterY=0;this.jitterX=jitterX;this.jitterY=jitterY}JitterEffect.prototype.begin=function(skeleton){};JitterEffect.prototype.transform=function(position,uv,light,dark){position.x+=core.MathUtils.randomTriangular(-this.jitterX,this.jitterY);position.y+=core.MathUtils.randomTriangular(-this.jitterX,this.jitterY)};JitterEffect.prototype.end=function(){};return JitterEffect}());core.JitterEffect=JitterEffect})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){var core;(function(core){var SwirlEffect=(function(){function SwirlEffect(radius){this.centerX=0;this.centerY=0;this.radius=0;this.angle=0;this.worldX=0;this.worldY=0;this.radius=radius}SwirlEffect.prototype.begin=function(skeleton){this.worldX=skeleton.x+this.centerX;this.worldY=skeleton.y+this.centerY};SwirlEffect.prototype.transform=function(position,uv,light,dark){var radAngle=this.angle*core.MathUtils.degreesToRadians;var x=position.x-this.worldX;var y=position.y-this.worldY;var dist=Math.sqrt(x*x+y*y);if(dist<this.radius){var theta=SwirlEffect.interpolation.apply(0,radAngle,(this.radius-dist)/this.radius);var cos=Math.cos(theta);var sin=Math.sin(theta);position.x=cos*x-sin*y+this.worldX;position.y=sin*x+cos*y+this.worldY}};SwirlEffect.prototype.end=function(){};SwirlEffect.interpolation=new core.PowOut(2);return SwirlEffect}());core.SwirlEffect=SwirlEffect})(core=pixi_spine.core||(pixi_spine.core={}))})(pixi_spine||(pixi_spine={}));(function(){if(!Math.fround){Math.fround=Math.fround=(function(array){return function(x){return array[0]=x,array[0]}})(new Float32Array(1))}})();var pixi_spine;(function(pixi_spine){pixi_spine.core.Bone.yDown=!0;var tempRgb=[0,0,0];var SpineSprite=(function(_super){__extends(SpineSprite,_super);function SpineSprite(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.region=null;return _this}return SpineSprite}(PIXI.Sprite));pixi_spine.SpineSprite=SpineSprite;var gp=PIXI.GraphicsGeometry.prototype;if(!gp.invalidate){var tmp_1=[];gp.invalidate=function(){var t=this.graphicsData;tmp_1.push(0);this.graphicsData=tmp_1;this.clear();this.graphicsData=t}}var SpineMesh=(function(_super){__extends(SpineMesh,_super);function SpineMesh(texture,vertices,uvs,indices,drawMode){return _super.call(this,texture,vertices,uvs,indices,drawMode)||this}return SpineMesh}(PIXI.SimpleMesh));pixi_spine.SpineMesh=SpineMesh;var Spine=(function(_super){__extends(Spine,_super);function Spine(spineData){var _this=_super.call(this)||this;if(!spineData){throw new Error('The spineData param is required.')}if((typeof spineData)==="string"){throw new Error('spineData param cant be string. Please use spine.Spine.fromAtlas("YOUR_RESOURCE_NAME") from now on.')}_this.spineData=spineData;_this.skeleton=new pixi_spine.core.Skeleton(spineData);_this.skeleton.updateWorldTransform();_this.stateData=new pixi_spine.core.AnimationStateData(spineData);_this.state=new pixi_spine.core.AnimationState(_this.stateData);_this.slotContainers=[];_this.tempClipContainers=[];for(var i=0,n=_this.skeleton.slots.length;i<n;i++){var slot=_this.skeleton.slots[i];var attachment=slot.attachment;var slotContainer=_this.newContainer();_this.slotContainers.push(slotContainer);_this.addChild(slotContainer);_this.tempClipContainers.push(null);if(attachment instanceof pixi_spine.core.RegionAttachment){var spriteName=attachment.region.name;var sprite=_this.createSprite(slot,attachment,spriteName);slot.currentSprite=sprite;slot.currentSpriteName=spriteName;slotContainer.addChild(sprite)}else if(attachment instanceof pixi_spine.core.MeshAttachment){var mesh=_this.createMesh(slot,attachment);slot.currentMesh=mesh;slot.currentMeshName=attachment.name;slotContainer.addChild(mesh)}else if(attachment instanceof pixi_spine.core.ClippingAttachment){_this.createGraphics(slot,attachment);slotContainer.addChild(slot.clippingContainer);slotContainer.addChild(slot.currentGraphics)}else{continue}}_this.autoUpdate=!0;_this.tintRgb=new Float32Array([1,1,1]);return _this}Object.defineProperty(Spine.prototype,"autoUpdate",{get:function(){return(this.updateTransform===Spine.prototype.autoUpdateTransform)},set:function(value){this.updateTransform=value?Spine.prototype.autoUpdateTransform:PIXI.Container.prototype.updateTransform},enumerable:!0,configurable:!0});Object.defineProperty(Spine.prototype,"tint",{get:function(){return PIXI.utils.rgb2hex(this.tintRgb)},set:function(value){this.tintRgb=PIXI.utils.hex2rgb(value,this.tintRgb)},enumerable:!0,configurable:!0});Object.defineProperty(Spine.prototype,"delayLimit",{get:function(){var limit=typeof this.localDelayLimit!=="undefined"?this.localDelayLimit:Spine.globalDelayLimit;return limit||Number.MAX_VALUE},enumerable:!0,configurable:!0});Spine.prototype.update=function(dt){var delayLimit=this.delayLimit;if(dt>delayLimit)dt=delayLimit;this.state.update(dt);this.state.apply(this.skeleton);if(!this.skeleton)return;this.skeleton.updateWorldTransform();var slots=this.skeleton.slots;var globalClr=this.color;var light=null,dark=null;if(globalClr){light=globalClr.light;dark=globalClr.dark}else{light=this.tintRgb}var thack=!1;for(var i=0,n=slots.length;i<n;i++){var slot=slots[i];var attachment=slot.attachment;var slotContainer=this.slotContainers[i];if(!attachment){slotContainer.visible=!1;continue}var spriteColor=null;var attColor=attachment.color;if(attachment instanceof pixi_spine.core.RegionAttachment){var region=attachment.region;if(region){if(slot.currentMesh){slot.currentMesh.visible=!1;slot.currentMesh=null;slot.currentMeshName=undefined}var ar=region;if(!slot.currentSpriteName||slot.currentSpriteName!==ar.name){var spriteName=ar.name;if(slot.currentSprite){slot.currentSprite.visible=!1}slot.sprites=slot.sprites||{};if(slot.sprites[spriteName]!==undefined){slot.sprites[spriteName].visible=!0}else{var sprite=this.createSprite(slot,attachment,spriteName);slotContainer.addChild(sprite)}slot.currentSprite=slot.sprites[spriteName];slot.currentSpriteName=spriteName}}var transform=slotContainer.transform;transform.setFromMatrix(slot.bone.matrix);if(slot.currentSprite.color){spriteColor=slot.currentSprite.color}else{tempRgb[0]=light[0]*slot.color.r*attColor.r;tempRgb[1]=light[1]*slot.color.g*attColor.g;tempRgb[2]=light[2]*slot.color.b*attColor.b;slot.currentSprite.tint=PIXI.utils.rgb2hex(tempRgb)}slot.currentSprite.blendMode=slot.blendMode}else if(attachment instanceof pixi_spine.core.MeshAttachment){if(slot.currentSprite){slot.currentSprite.visible=!1;slot.currentSprite=null;slot.currentSpriteName=undefined;var transform=new PIXI.Transform();transform._parentID=-1;transform._worldID=slotContainer.transform._worldID;slotContainer.transform=transform}if(!slot.currentMeshName||slot.currentMeshName!==attachment.name){var meshName=attachment.name;if(slot.currentMesh){slot.currentMesh.visible=!1}slot.meshes=slot.meshes||{};if(slot.meshes[meshName]!==undefined){slot.meshes[meshName].visible=!0}else{var mesh=this.createMesh(slot,attachment);slotContainer.addChild(mesh)}slot.currentMesh=slot.meshes[meshName];slot.currentMeshName=meshName}attachment.computeWorldVerticesOld(slot,slot.currentMesh.vertices);if(slot.currentMesh.color){spriteColor=slot.currentMesh.color}else{tempRgb[0]=light[0]*slot.color.r*attColor.r;tempRgb[1]=light[1]*slot.color.g*attColor.g;tempRgb[2]=light[2]*slot.color.b*attColor.b;slot.currentMesh.tint=PIXI.utils.rgb2hex(tempRgb)}slot.currentMesh.blendMode=slot.blendMode}else if(attachment instanceof pixi_spine.core.ClippingAttachment){if(!slot.currentGraphics){this.createGraphics(slot,attachment);slotContainer.addChild(slot.clippingContainer);slotContainer.addChild(slot.currentGraphics)}this.updateGraphics(slot,attachment)}else{slotContainer.visible=!1;continue}slotContainer.visible=!0;if(spriteColor){var r0=slot.color.r*attColor.r;var g0=slot.color.g*attColor.g;var b0=slot.color.b*attColor.b;spriteColor.setLight(light[0]*r0+dark[0]*(1.0-r0),light[1]*g0+dark[1]*(1.0-g0),light[2]*b0+dark[2]*(1.0-b0));if(slot.darkColor){r0=slot.darkColor.r;g0=slot.darkColor.g;b0=slot.darkColor.b}else{r0=0.0;g0=0.0;b0=0.0}spriteColor.setDark(light[0]*r0+dark[0]*(1-r0),light[1]*g0+dark[1]*(1-g0),light[2]*b0+dark[2]*(1-b0))}slotContainer.alpha=slot.color.a}var drawOrder=this.skeleton.drawOrder;var clippingAttachment=null;var clippingContainer=null;for(var i=0,n=drawOrder.length;i<n;i++){var slot=slots[drawOrder[i].data.index];var slotContainer=this.slotContainers[drawOrder[i].data.index];if(!clippingContainer){if(slotContainer.parent!==null&&slotContainer.parent!==this){slotContainer.parent.removeChild(slotContainer);slotContainer.parent=this}}if(slot.currentGraphics&&slot.attachment){clippingContainer=slot.clippingContainer;clippingAttachment=slot.attachment;clippingContainer.children.length=0;this.children[i]=slotContainer;if(clippingAttachment.endSlot==slot.data){clippingAttachment.endSlot=null}}else{if(clippingContainer){var c=this.tempClipContainers[i];if(!c){c=this.tempClipContainers[i]=this.newContainer();c.visible=!1}this.children[i]=c;slotContainer.parent=null;clippingContainer.addChild(slotContainer);if(clippingAttachment.endSlot==slot.data){clippingContainer.renderable=!0;clippingContainer=null;clippingAttachment=null}}else{this.children[i]=slotContainer}}}};Spine.prototype.setSpriteRegion=function(attachment,sprite,region){sprite.region=region;sprite.texture=region.texture;if(!region.size){sprite.scale.x=attachment.scaleX*attachment.width/region.originalWidth;sprite.scale.y=-attachment.scaleY*attachment.height/region.originalHeight}else{sprite.scale.x=region.size.width/region.originalWidth;sprite.scale.y=-region.size.height/region.originalHeight}};Spine.prototype.setMeshRegion=function(attachment,mesh,region){mesh.region=region;mesh.texture=region.texture;region.texture.updateUvs();mesh.uvBuffer.update(attachment.regionUVs)};Spine.prototype.autoUpdateTransform=function(){if(Spine.globalAutoUpdate){this.lastTime=this.lastTime||Date.now();var timeDelta=(Date.now()-this.lastTime)*0.001;this.lastTime=Date.now();this.update(timeDelta)}else{this.lastTime=0}PIXI.Container.prototype.updateTransform.call(this)};Spine.prototype.createSprite=function(slot,attachment,defName){var region=attachment.region;if(slot.tempAttachment===attachment){region=slot.tempRegion;slot.tempAttachment=null;slot.tempRegion=null}var texture=region.texture;var sprite=this.newSprite(texture);sprite.rotation=attachment.rotation*pixi_spine.core.MathUtils.degRad;sprite.anchor.x=0.5;sprite.anchor.y=0.5;sprite.position.x=attachment.x;sprite.position.y=attachment.y;sprite.alpha=attachment.color.a;sprite.region=attachment.region;this.setSpriteRegion(attachment,sprite,attachment.region);slot.sprites=slot.sprites||{};slot.sprites[defName]=sprite;return sprite};Spine.prototype.createMesh=function(slot,attachment){var region=attachment.region;if(slot.tempAttachment===attachment){region=slot.tempRegion;slot.tempAttachment=null;slot.tempRegion=null}var strip=this.newMesh(region.texture,new Float32Array(attachment.regionUVs.length),attachment.regionUVs,new Uint16Array(attachment.triangles),PIXI.DRAW_MODES.TRIANGLES);if(strip.canvasPadding){strip.canvasPadding=1.5}strip.alpha=attachment.color.a;strip.region=attachment.region;this.setMeshRegion(attachment,strip,region);slot.meshes=slot.meshes||{};slot.meshes[attachment.name]=strip;return strip};Spine.prototype.createGraphics=function(slot,clip){var graphics=this.newGraphics();var poly=new PIXI.Polygon([]);graphics.clear();graphics.beginFill(0xffffff,1);graphics.drawPolygon(poly);graphics.renderable=!1;slot.currentGraphics=graphics;slot.clippingContainer=this.newContainer();slot.clippingContainer.mask=slot.currentGraphics;return graphics};Spine.prototype.updateGraphics=function(slot,clip){var geom=slot.currentGraphics.geometry;var vertices=geom.graphicsData[0].shape.points;var n=clip.worldVerticesLength;vertices.length=n;clip.computeWorldVertices(slot,0,n,vertices,0,2);geom.invalidate()};Spine.prototype.hackTextureBySlotIndex=function(slotIndex,texture,size){if(texture===void 0){texture=null}if(size===void 0){size=null}var slot=this.skeleton.slots[slotIndex];if(!slot){return!1}var attachment=slot.attachment;var region=attachment.region;if(texture){region=new pixi_spine.core.TextureRegion();region.texture=texture;region.size=size}if(slot.currentSprite&&slot.currentSprite.region!=region){this.setSpriteRegion(attachment,slot.currentSprite,region);slot.currentSprite.region=region}else if(slot.currentMesh&&slot.currentMesh.region!=region){this.setMeshRegion(attachment,slot.currentMesh,region)}else{slot.tempRegion=region;slot.tempAttachment=attachment}return!0};Spine.prototype.hackTextureBySlotName=function(slotName,texture,size){if(texture===void 0){texture=null}if(size===void 0){size=null}var index=this.skeleton.findSlotIndex(slotName);if(index==-1){return!1}return this.hackTextureBySlotIndex(index,texture,size)};Spine.prototype.newContainer=function(){return new PIXI.Container()};Spine.prototype.newSprite=function(tex){return new SpineSprite(tex)};Spine.prototype.newGraphics=function(){return new PIXI.Graphics()};Spine.prototype.newMesh=function(texture,vertices,uvs,indices,drawMode){return new SpineMesh(texture,vertices,uvs,indices,drawMode)};Spine.prototype.transformHack=function(){return 1};Spine.prototype.hackAttachmentGroups=function(nameSuffix,group,outGroup){if(!nameSuffix){return}var list_d=[],list_n=[];for(var i=0,len=this.skeleton.slots.length;i<len;i++){var slot=this.skeleton.slots[i];var name_2=slot.currentSpriteName||slot.currentMeshName||"";var target=slot.currentSprite||slot.currentMesh;if(name_2.endsWith(nameSuffix)){target.parentGroup=group;list_n.push(target)}else if(outGroup&&target){target.parentGroup=outGroup;list_d.push(target)}}return[list_d,list_n]};Spine.prototype.destroy=function(options){for(var i=0,n=this.skeleton.slots.length;i<n;i++){var slot=this.skeleton.slots[i];for(var name_3 in slot.meshes){slot.meshes[name_3].destroy(options)}slot.meshes=null;for(var name_4 in slot.sprites){slot.sprites[name_4].destroy(options)}slot.sprites=null}for(var i=0,n=this.slotContainers.length;i<n;i++){this.slotContainers[i].destroy(options)}this.spineData=null;this.skeleton=null;this.slotContainers=null;this.stateData=null;this.state=null;this.tempClipContainers=null;_super.prototype.destroy.call(this,options)};Spine.globalAutoUpdate=!0;Spine.globalDelayLimit=0;Spine.clippingPolygon=[];return Spine}(PIXI.Container));pixi_spine.Spine=Spine;function SlotContainerUpdateTransformV3(){var pt=this.parent.worldTransform;var wt=this.worldTransform;var lt=this.localTransform;wt.a=lt.a*pt.a+lt.b*pt.c;wt.b=lt.a*pt.b+lt.b*pt.d;wt.c=lt.c*pt.a+lt.d*pt.c;wt.d=lt.c*pt.b+lt.d*pt.d;wt.tx=lt.tx*pt.a+lt.ty*pt.c+pt.tx;wt.ty=lt.tx*pt.b+lt.ty*pt.d+pt.ty;this.worldAlpha=this.alpha*this.parent.worldAlpha;this._currentBounds=null}})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){PIXI.spine=pixi_spine;var TextureProto=PIXI.Texture.prototype;if(!TextureProto._updateUvs){TextureProto._updateUvs=TextureProto.updateUvs}})(pixi_spine||(pixi_spine={}));var pixi_spine;(function(pixi_spine){function isJson(resource){return resource.type===PIXI.LoaderResource.TYPE.JSON}var AtlasParser=(function(){function AtlasParser(){}AtlasParser.use=function(resource,next){if(!resource.data||!isJson(resource)||!resource.data.bones){return next()}var metadata=resource.metadata||{};var metadataSkeletonScale=metadata?resource.metadata.spineSkeletonScale:null;var metadataAtlas=metadata?resource.metadata.spineAtlas:null;if(metadataAtlas===!1){return next()}if(metadataAtlas&&metadataAtlas.pages){var spineJsonParser=new pixi_spine.core.SkeletonJson(new pixi_spine.core.AtlasAttachmentLoader(metadataAtlas));if(metadataSkeletonScale){spineJsonParser.scale=metadataSkeletonScale}var skeletonData=spineJsonParser.readSkeletonData(resource.data);resource.spineData=skeletonData;resource.spineAtlas=metadataAtlas;return next()}var metadataAtlasSuffix=metadata.spineAtlasSuffix||'.atlas';var atlasPath=resource.url;var queryStringPos=atlasPath.indexOf('?');if(queryStringPos>0){atlasPath=atlasPath.substr(0,queryStringPos)}atlasPath=atlasPath.substr(0,atlasPath.lastIndexOf('.'))+metadataAtlasSuffix;if(resource.metadata&&resource.metadata.spineAtlasFile){atlasPath=resource.metadata.spineAtlasFile}atlasPath=atlasPath.replace(this.baseUrl,'');var atlasOptions={crossOrigin:resource.crossOrigin,xhrType:PIXI.LoaderResource.XHR_RESPONSE_TYPE.TEXT,metadata:metadata.spineMetadata||null,parentResource:resource};var imageOptions={crossOrigin:resource.crossOrigin,metadata:metadata.imageMetadata||null,parentResource:resource};var baseUrl=resource.url.substr(0,resource.url.lastIndexOf('/')+1);baseUrl=baseUrl.replace(this.baseUrl,'');var namePrefix=metadata.imageNamePrefix||(resource.name+'_atlas_page_');var adapter=metadata.images?staticImageLoader(metadata.images):metadata.image?staticImageLoader({'default':metadata.image}):metadata.imageLoader?metadata.imageLoader(this,namePrefix,baseUrl,imageOptions):imageLoaderAdapter(this,namePrefix,baseUrl,imageOptions);var createSkeletonWithRawAtlas=function(rawData){new pixi_spine.core.TextureAtlas(rawData,adapter,function(spineAtlas){if(spineAtlas){var spineJsonParser=new pixi_spine.core.SkeletonJson(new pixi_spine.core.AtlasAttachmentLoader(spineAtlas));if(metadataSkeletonScale){spineJsonParser.scale=metadataSkeletonScale}resource.spineData=spineJsonParser.readSkeletonData(resource.data);resource.spineAtlas=spineAtlas}next()})};if(resource.metadata&&resource.metadata.atlasRawData){createSkeletonWithRawAtlas(resource.metadata.atlasRawData)}else{this.add(resource.name+'_atlas',atlasPath,atlasOptions,function(atlasResource){if(!atlasResource.error){createSkeletonWithRawAtlas(atlasResource.data)}else{next()}})}};return AtlasParser}());pixi_spine.AtlasParser=AtlasParser;function imageLoaderAdapter(loader,namePrefix,baseUrl,imageOptions){if(baseUrl&&baseUrl.lastIndexOf('/')!==(baseUrl.length-1)){baseUrl+='/'}return function(line,callback){var name=namePrefix+line;var url=baseUrl+line;var cachedResource=loader.resources[name];if(cachedResource){function done(){callback(cachedResource.texture.baseTexture)}if(cachedResource.texture){done()}else{cachedResource.onAfterMiddleware.add(done)}}else{loader.add(name,url,imageOptions,function(resource){if(!resource.error){callback(resource.texture.baseTexture)}else{callback(null)}})}}}pixi_spine.imageLoaderAdapter=imageLoaderAdapter;function syncImageLoaderAdapter(baseUrl,crossOrigin){if(baseUrl&&baseUrl.lastIndexOf('/')!==(baseUrl.length-1)){baseUrl+='/'}return function(line,callback){callback(PIXI.BaseTexture.from(line,crossOrigin))}}pixi_spine.syncImageLoaderAdapter=syncImageLoaderAdapter;function staticImageLoader(pages){return function(line,callback){var page=pages[line]||pages['default'];if(page&&page.baseTexture)callback(page.baseTexture);else callback(page)}}pixi_spine.staticImageLoader=staticImageLoader;if(PIXI.Loader){PIXI.Loader.registerPlugin(AtlasParser)}})(pixi_spine||(pixi_spine={}))
/*!
 *   Copyright (c) 2013 Ivan Kuckir  ( ivan@kuckir.com )
 *
 *   Permission is hereby granted, free of charge, to any person
 *   obtaining a copy of this software and associated documentation
 *   files (the "Software"), to deal in the Software without
 *   restriction, including without limitation the rights to use,
 *   copy, modify, merge, publish, distribute, sublicense, and/or sell
 *   copies of the Software, and to permit persons to whom the
 *   Software is furnished to do so, subject to the following
 *   conditions:
 *
 *   The above copyright notice and this permission notice shall be
 *   included in all copies or substantial portions of the Software.
 *
 *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *   OTHER DEALINGS IN THE SOFTWARE.
 *
 *   History:
 *
 *   22. 10. 2103
 *       Bug with delay removed.
 *
 *   11. 10. 2013
 *       Implementing onStart, onStartParams, onUpdate, onUpdateParams, onComplete, onCompleteParams
 *
 *   1. 3. 2013
 *       Tweener depends on framerate now, not expecting 60 fps
 *
 *   6. 6. 2012
 *       First version, addTween with time, delay and transition parameters
 */
var Tweener={twns:[],looping:!1,_ptime:0,def:{time:1,transition:"easeOutExpo",delay:0,onStart:null,onStartParams:null,onUpdate:null,onUpdateParams:null,onComplete:null,onCompleteParams:null},addTween:function(n,e){var t=Tweener,a={},u=[],s=[];for(var i in t.def)a[i]=e[i]?e[i]:t.def[i];for(var i in e)t.def[i]||(u.push(i),s.push(e[i]));t.twns.push(new t.Tween(n,a,u,s)),t.loop()},removeTween:function(n){var e,t=Tweener;do{e=!1;for(var a=0;a<t.twns.length;a++){if(t.twns[a].obj===n){t.twns.splice(a,1),e=!0;break}}}while(e)},registerCallback:function(){var n=Tweener;utils&&utils.GameTimer?utils.GameTimer.requestAnimationFrame(n.gameTimerCallback):requestAnimFrame(n.legacyCallback)},loop:function(){var n=Tweener;n.looping||(n._ptime=(new Date).getTime(),n.registerCallback()),n.looping=!0},gameTimerCallback:function(n,e){Tweener.step(e)},legacyCallback:function(){var n=Tweener,e=n._ptime;n._ptime=(new Date).getTime(),n.step(n._ptime-e)},step:function(n){for(var e=Tweener,t=.001*n,a=-1,u=0,s=0;s<e.twns.length;s++){s===a?u++:(u=0,a=s);var i=e.twns[s];if(0<i.tp.delay)i.tp.delay-=t;else{if(0===i.t&&i.tp.onStart&&(i.tp.onStartParams?i.tp.onStart.apply(null,i.tp.onStartParams):i.tp.onStart()),0==i.bgns.length)for(var r=0;r<i.prms.length;r++)i.bgns.push(i.obj[i.prms[r]]),i.cngs.push(i.tgts[r]-i.bgns[r]);i.t+=t;for(var o=i.tp.time,r=0;r<i.prms.length;r++)i.t>o?i.obj[i.prms[r]]=i.bgns[r]+i.cngs[r]:i.obj[i.prms[r]]="function"==typeof i.tp.transition?i.tp.transition(i.t,i.bgns[r],i.cngs[r],o):Tweener.easingFunctions[i.tp.transition](i.t,i.bgns[r],i.cngs[r],o);i.tp.onUpdate&&(i.tp.onUpdateParams?i.tp.onUpdate.apply(null,i.tp.onUpdateParams):i.tp.onUpdate()),i.t>o&&u<5*e.twns.length&&(e.twns.splice(s--,1),i.tp.onComplete&&(i.tp.onCompleteParams?i.tp.onComplete.apply(null,i.tp.onCompleteParams):i.tp.onComplete()))}}0<e.twns.length?e.registerCallback():e.looping=!1}};null==window.requestAnimFrame&&(window.requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(n,e){window.setTimeout(n,1e3/60)}),Tweener.Tween=function(n,e,t,a){this.t=0,this.obj=n,this.tp=e,this.prms=t,this.tgts=a,this.bgns=[],this.cngs=[]},Tweener.easingFunctions={easeNone:function(n,e,t,a){return t*n/a+e},easeInQuad:function(n,e,t,a){return t*(n/=a)*n+e},easeOutQuad:function(n,e,t,a){return-t*(n/=a)*(n-2)+e},easeInOutQuad:function(n,e,t,a){return(n/=a/2)<1?t/2*n*n+e:-t/2*(--n*(n-2)-1)+e},easeInCubic:function(n,e,t,a){return t*(n/=a)*n*n+e},easeOutCubic:function(n,e,t,a){return t*((n=n/a-1)*n*n+1)+e},easeInOutCubic:function(n,e,t,a){return(n/=a/2)<1?t/2*n*n*n+e:t/2*((n-=2)*n*n+2)+e},easeOutInCubic:function(n,e,t,a){return n<a/2?Tweener.easingFunctions.easeOutCubic(2*n,e,t/2,a):Tweener.easingFunctions.easeInCubic(2*n-a,e+t/2,t/2,a)},easeInQuart:function(n,e,t,a){return t*(n/=a)*n*n*n+e},easeOutQuart:function(n,e,t,a){return-t*((n=n/a-1)*n*n*n-1)+e},easeInOutQuart:function(n,e,t,a){return(n/=a/2)<1?t/2*n*n*n*n+e:-t/2*((n-=2)*n*n*n-2)+e},easeOutInQuart:function(n,e,t,a){return n<a/2?Tweener.easingFunctions.easeOutQuart(2*n,e,t/2,a):Tweener.easingFunctions.easeInQuart(2*n-a,e+t/2,t/2,a)},easeInQuint:function(n,e,t,a){return t*(n/=a)*n*n*n*n+e},easeOutQuint:function(n,e,t,a){return t*((n=n/a-1)*n*n*n*n+1)+e},easeInOutQuint:function(n,e,t,a){return(n/=a/2)<1?t/2*n*n*n*n*n+e:t/2*((n-=2)*n*n*n*n+2)+e},easeOutInQuint:function(n,e,t,a){return n<a/2?Tweener.easingFunctions.easeOutQuint(2*n,e,t/2,a):Tweener.easingFunctions.easeInQuint(2*n-a,e+t/2,t/2,a)},easeInSine:function(n,e,t,a){return-t*Math.cos(n/a*(Math.PI/2))+t+e},easeOutSine:function(n,e,t,a){return t*Math.sin(n/a*(Math.PI/2))+e},easeInOutSine:function(n,e,t,a){return-t/2*(Math.cos(Math.PI*n/a)-1)+e},easeOutInSine:function(n,e,t,a){return n<a/2?Tweener.easingFunctions.easeOutSine(2*n,e,t/2,a):Tweener.easingFunctions.easeInSine(2*n-a,e+t/2,t/2,a)},easeInExpo:function(n,e,t,a){return 0==n?e:t*Math.pow(2,10*(n/a-1))+e-.001*t},easeOutExpo:function(n,e,t,a){return n==a?e+t:1.001*t*(1-Math.pow(2,-10*n/a))+e},easeInOutExpo:function(n,e,t,a){return 0==n?e:n==a?e+t:(n/=a/2)<1?t/2*Math.pow(2,10*(n-1))+e-5e-4*t:t/2*1.0005*(2-Math.pow(2,-10*--n))+e},easeOutInExpo:function(n,e,t,a){return n<a/2?Tweener.easingFunctions.easeOutExpo(2*n,e,t/2,a):Tweener.easingFunctions.easeInExpo(2*n-a,e+t/2,t/2,a)},easeInCirc:function(n,e,t,a){return-t*(Math.sqrt(1-(n/=a)*n)-1)+e},easeOutCirc:function(n,e,t,a){return t*Math.sqrt(1-(n=n/a-1)*n)+e},easeInOutCirc:function(n,e,t,a){return(n/=a/2)<1?-t/2*(Math.sqrt(1-n*n)-1)+e:t/2*(Math.sqrt(1-(n-=2)*n)+1)+e},easeOutInCirc:function(n,e,t,a){return n<a/2?Tweener.easingFunctions.easeOutCirc(2*n,e,t/2,a):Tweener.easingFunctions.easeInCirc(2*n-a,e+t/2,t/2,a)},easeInElastic:function(n,e,t,a,u,s){var i;return 0==n?e:1==(n/=a)?e+t:(s=s||.3*a,i=!u||u<Math.abs(t)?(u=t,s/4):s/(2*Math.PI)*Math.asin(t/u),-(u*Math.pow(2,10*--n)*Math.sin((n*a-i)*(2*Math.PI)/s))+e)},easeOutElastic:function(n,e,t,a,u,s){var i;return 0==n?e:1==(n/=a)?e+t:(s=s||.3*a,i=!u||u<Math.abs(t)?(u=t,s/4):s/(2*Math.PI)*Math.asin(t/u),u*Math.pow(2,-10*n)*Math.sin((n*a-i)*(2*Math.PI)/s)+t+e)},easeInOutElastic:function(n,e,t,a,u,s){var i;return 0==n?e:2==(n/=a/2)?e+t:(s=s||a*(.3*1.5),i=!u||u<Math.abs(t)?(u=t,s/4):s/(2*Math.PI)*Math.asin(t/u),n<1?u*Math.pow(2,10*--n)*Math.sin((n*a-i)*(2*Math.PI)/s)*-.5+e:u*Math.pow(2,-10*--n)*Math.sin((n*a-i)*(2*Math.PI)/s)*.5+t+e)},easeOutInElastic:function(n,e,t,a,u,s){return n<a/2?Tweener.easingFunctions.easeOutElastic(2*n,e,t/2,a,u,s):Tweener.easingFunctions.easeInElastic(2*n-a,e+t/2,t/2,a,u,s)},easeInBack:function(n,e,t,a,u){return null==u&&(u=1.70158),t*(n/=a)*n*((u+1)*n-u)+e},easeOutBack:function(n,e,t,a,u){return null==u&&(u=1.70158),t*((n=n/a-1)*n*((u+1)*n+u)+1)+e},easeInOutBack:function(n,e,t,a,u){return null==u&&(u=1.70158),(n/=a/2)<1?t/2*(n*n*((1+(u*=1.525))*n-u))+e:t/2*((n-=2)*n*((1+(u*=1.525))*n+u)+2)+e},easeOutInBack:function(n,e,t,a,u){return n<a/2?Tweener.easingFunctions.easeOutBack(2*n,e,t/2,a,u):Tweener.easingFunctions.easeInBack(2*n-a,e+t/2,t/2,a,u)},easeInBounce:function(n,e,t,a){return t-Tweener.easingFunctions.easeOutBounce(a-n,0,t,a)+e},easeOutBounce:function(n,e,t,a){return(n/=a)<1/2.75?t*(7.5625*n*n)+e:n<2/2.75?t*(7.5625*(n-=1.5/2.75)*n+.75)+e:n<2.5/2.75?t*(7.5625*(n-=2.25/2.75)*n+.9375)+e:t*(7.5625*(n-=2.625/2.75)*n+.984375)+e},easeInOutBounce:function(n,e,t,a){return n<a/2?.5*Tweener.easingFunctions.easeInBounce(2*n,0,t,a)+e:.5*Tweener.easingFunctions.easeOutBounce(2*n-a,0,t,a)+.5*t+e},easeOutInBounce:function(n,e,t,a){return n<a/2?Tweener.easingFunctions.easeOutBounce(2*n,e,t/2,a):Tweener.easingFunctions.easeInBounce(2*n-a,e+t/2,t/2,a)},customTransitionA:function(n,e,t,a){var u=(n/=a)*n,s=u*n;return e+t*(.1975*s*u+-1.78*u*u+1.165*s+.89*u+.5275*n)}},Tweener.easingFunctions.linear=Tweener.easingFunctions.easeNone;

/*! Raven.js 3.25.2 (30b6d4e) | github.com/getsentry/raven-js */
!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.Raven=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){function d(a){this.name="RavenConfigError",this.message=a}d.prototype=new Error,d.prototype.constructor=d,b.exports=d},{}],2:[function(a,b,c){var d=a(5),e=function(a,b,c){var e=a[b],f=a;if(b in a){var g="warn"===b?"warning":b;a[b]=function(){var a=[].slice.call(arguments),h=d.safeJoin(a," "),i={level:g,logger:"console",extra:{arguments:a}};"assert"===b?a[0]===!1&&(h="Assertion failed: "+(d.safeJoin(a.slice(1)," ")||"console.assert"),i.extra.arguments=a.slice(1),c&&c(h,i)):c&&c(h,i),e&&Function.prototype.apply.call(e,f,a)}}};b.exports={wrapMethod:e}},{5:5}],3:[function(a,b,c){(function(c){function d(){return+new Date}function e(a,b){return s(b)?function(c){return b(c,a)}:b}function f(){this.a=!("object"!=typeof JSON||!JSON.stringify),this.b=!r(S),this.c=!r(T),this.d=null,this.e=null,this.f=null,this.g=null,this.h=null,this.i=null,this.j={},this.k={release:R.SENTRY_RELEASE&&R.SENTRY_RELEASE.id,logger:"javascript",ignoreErrors:[],ignoreUrls:[],whitelistUrls:[],includePaths:[],headers:null,collectWindowErrors:!0,captureUnhandledRejections:!0,maxMessageLength:0,maxUrlLength:250,stackTraceLimit:50,autoBreadcrumbs:!0,instrument:!0,sampleRate:1,sanitizeKeys:[]},this.l={method:"POST",keepalive:!0,referrerPolicy:K()?"origin":""},this.m=0,this.n=!1,this.o=Error.stackTraceLimit,this.p=R.console||{},this.q={},this.r=[],this.s=d(),this.t=[],this.u=[],this.v=null,this.w=R.location,this.x=this.w&&this.w.href,this.y();for(var a in this.p)this.q[a]=this.p[a]}var g=a(6),h=a(7),i=a(8),j=a(1),k=a(5),l=k.isErrorEvent,m=k.isDOMError,n=k.isDOMException,o=k.isError,p=k.isObject,q=k.isPlainObject,r=k.isUndefined,s=k.isFunction,t=k.isString,u=k.isArray,v=k.isEmptyObject,w=k.each,x=k.objectMerge,y=k.truncate,z=k.objectFrozen,A=k.hasKey,B=k.joinRegExp,C=k.urlencode,D=k.uuid4,E=k.htmlTreeAsString,F=k.isSameException,G=k.isSameStacktrace,H=k.parseUrl,I=k.fill,J=k.supportsFetch,K=k.supportsReferrerPolicy,L=k.serializeKeysForMessage,M=k.serializeException,N=k.sanitize,O=a(2).wrapMethod,P="source protocol user pass host port path".split(" "),Q=/^(?:(\w+):)?\/\/(?:(\w+)(:\w+)?@)?([\w\.-]+)(?::(\d+))?(\/.*)/,R="undefined"!=typeof window?window:"undefined"!=typeof c?c:"undefined"!=typeof self?self:{},S=R.document,T=R.navigator;f.prototype={VERSION:"3.25.2",debug:!1,TraceKit:g,config:function(a,b){var c=this;if(c.g)return this.z("error","Error: Raven has already been configured"),c;if(!a)return c;var d=c.k;b&&w(b,function(a,b){"tags"===a||"extra"===a||"user"===a?c.j[a]=b:d[a]=b}),c.setDSN(a),d.ignoreErrors.push(/^Script error\.?$/),d.ignoreErrors.push(/^Javascript error: Script error\.? on line 0$/),d.ignoreErrors=B(d.ignoreErrors),d.ignoreUrls=!!d.ignoreUrls.length&&B(d.ignoreUrls),d.whitelistUrls=!!d.whitelistUrls.length&&B(d.whitelistUrls),d.includePaths=B(d.includePaths),d.maxBreadcrumbs=Math.max(0,Math.min(d.maxBreadcrumbs||100,100));var e={xhr:!0,console:!0,dom:!0,location:!0,sentry:!0},f=d.autoBreadcrumbs;"[object Object]"==={}.toString.call(f)?f=x(e,f):f!==!1&&(f=e),d.autoBreadcrumbs=f;var h={tryCatch:!0},i=d.instrument;return"[object Object]"==={}.toString.call(i)?i=x(h,i):i!==!1&&(i=h),d.instrument=i,g.collectWindowErrors=!!d.collectWindowErrors,c},install:function(){var a=this;return a.isSetup()&&!a.n&&(g.report.subscribe(function(){a.A.apply(a,arguments)}),a.k.captureUnhandledRejections&&a.B(),a.C(),a.k.instrument&&a.k.instrument.tryCatch&&a.D(),a.k.autoBreadcrumbs&&a.E(),a.F(),a.n=!0),Error.stackTraceLimit=a.k.stackTraceLimit,this},setDSN:function(a){var b=this,c=b.G(a),d=c.path.lastIndexOf("/"),e=c.path.substr(1,d);b.H=a,b.h=c.user,b.I=c.pass&&c.pass.substr(1),b.i=c.path.substr(d+1),b.g=b.J(c),b.K=b.g+"/"+e+"api/"+b.i+"/store/",this.y()},context:function(a,b,c){return s(a)&&(c=b||[],b=a,a=void 0),this.wrap(a,b).apply(this,c)},wrap:function(a,b,c){function d(){var d=[],f=arguments.length,g=!a||a&&a.deep!==!1;for(c&&s(c)&&c.apply(this,arguments);f--;)d[f]=g?e.wrap(a,arguments[f]):arguments[f];try{return b.apply(this,d)}catch(h){throw e.L(),e.captureException(h,a),h}}var e=this;if(r(b)&&!s(a))return a;if(s(a)&&(b=a,a=void 0),!s(b))return b;try{if(b.M)return b;if(b.N)return b.N}catch(f){return b}for(var g in b)A(b,g)&&(d[g]=b[g]);return d.prototype=b.prototype,b.N=d,d.M=!0,d.O=b,d},uninstall:function(){return g.report.uninstall(),this.P(),this.Q(),this.R(),this.S(),Error.stackTraceLimit=this.o,this.n=!1,this},T:function(a){this.z("debug","Raven caught unhandled promise rejection:",a),this.captureException(a.reason,{extra:{unhandledPromiseRejection:!0}})},B:function(){return this.T=this.T.bind(this),R.addEventListener&&R.addEventListener("unhandledrejection",this.T),this},P:function(){return R.removeEventListener&&R.removeEventListener("unhandledrejection",this.T),this},captureException:function(a,b){if(b=x({trimHeadFrames:0},b?b:{}),l(a)&&a.error)a=a.error;else{if(m(a)||n(a)){var c=a.name||(m(a)?"DOMError":"DOMException"),d=a.message?c+": "+a.message:c;return this.captureMessage(d,x(b,{stacktrace:!0,trimHeadFrames:b.trimHeadFrames+1}))}if(o(a))a=a;else{if(!q(a))return this.captureMessage(a,x(b,{stacktrace:!0,trimHeadFrames:b.trimHeadFrames+1}));b=this.U(b,a),a=new Error(b.message)}}this.d=a;try{var e=g.computeStackTrace(a);this.V(e,b)}catch(f){if(a!==f)throw f}return this},U:function(a,b){var c=Object.keys(b).sort(),d=x(a,{message:"Non-Error exception captured with keys: "+L(c),fingerprint:[i(c)],extra:a.extra||{}});return d.extra.W=M(b),d},captureMessage:function(a,b){if(!this.k.ignoreErrors.test||!this.k.ignoreErrors.test(a)){b=b||{},a+="";var c,d=x({message:a},b);try{throw new Error(a)}catch(e){c=e}c.name=null;var f=g.computeStackTrace(c),h=u(f.stack)&&f.stack[1];h&&"Raven.captureException"===h.func&&(h=f.stack[2]);var i=h&&h.url||"";if((!this.k.ignoreUrls.test||!this.k.ignoreUrls.test(i))&&(!this.k.whitelistUrls.test||this.k.whitelistUrls.test(i))){if(this.k.stacktrace||b&&b.stacktrace){d.fingerprint=null==d.fingerprint?a:d.fingerprint,b=x({trimHeadFrames:0},b),b.trimHeadFrames+=1;var j=this.X(f,b);d.stacktrace={frames:j.reverse()}}return d.fingerprint&&(d.fingerprint=u(d.fingerprint)?d.fingerprint:[d.fingerprint]),this.Y(d),this}}},captureBreadcrumb:function(a){var b=x({timestamp:d()/1e3},a);if(s(this.k.breadcrumbCallback)){var c=this.k.breadcrumbCallback(b);if(p(c)&&!v(c))b=c;else if(c===!1)return this}return this.u.push(b),this.u.length>this.k.maxBreadcrumbs&&this.u.shift(),this},addPlugin:function(a){var b=[].slice.call(arguments,1);return this.r.push([a,b]),this.n&&this.F(),this},setUserContext:function(a){return this.j.user=a,this},setExtraContext:function(a){return this.Z("extra",a),this},setTagsContext:function(a){return this.Z("tags",a),this},clearContext:function(){return this.j={},this},getContext:function(){return JSON.parse(h(this.j))},setEnvironment:function(a){return this.k.environment=a,this},setRelease:function(a){return this.k.release=a,this},setDataCallback:function(a){var b=this.k.dataCallback;return this.k.dataCallback=e(b,a),this},setBreadcrumbCallback:function(a){var b=this.k.breadcrumbCallback;return this.k.breadcrumbCallback=e(b,a),this},setShouldSendCallback:function(a){var b=this.k.shouldSendCallback;return this.k.shouldSendCallback=e(b,a),this},setTransport:function(a){return this.k.transport=a,this},lastException:function(){return this.d},lastEventId:function(){return this.f},isSetup:function(){return!!this.a&&(!!this.g||(this.ravenNotConfiguredError||(this.ravenNotConfiguredError=!0,this.z("error","Error: Raven has not been configured.")),!1))},afterLoad:function(){var a=R.RavenConfig;a&&this.config(a.dsn,a.config).install()},showReportDialog:function(a){if(S){a=a||{};var b=a.eventId||this.lastEventId();if(!b)throw new j("Missing eventId");var c=a.dsn||this.H;if(!c)throw new j("Missing DSN");var d=encodeURIComponent,e="";e+="?eventId="+d(b),e+="&dsn="+d(c);var f=a.user||this.j.user;f&&(f.name&&(e+="&name="+d(f.name)),f.email&&(e+="&email="+d(f.email)));var g=this.J(this.G(c)),h=S.createElement("script");h.async=!0,h.src=g+"/api/embed/error-page/"+e,(S.head||S.body).appendChild(h)}},L:function(){var a=this;this.m+=1,setTimeout(function(){a.m-=1})},$:function(a,b){var c,d;if(this.b){b=b||{},a="raven"+a.substr(0,1).toUpperCase()+a.substr(1),S.createEvent?(c=S.createEvent("HTMLEvents"),c.initEvent(a,!0,!0)):(c=S.createEventObject(),c.eventType=a);for(d in b)A(b,d)&&(c[d]=b[d]);if(S.createEvent)S.dispatchEvent(c);else try{S.fireEvent("on"+c.eventType.toLowerCase(),c)}catch(e){}}},_:function(a){var b=this;return function(c){if(b.aa=null,b.v!==c){b.v=c;var d;try{d=E(c.target)}catch(e){d="<unknown>"}b.captureBreadcrumb({category:"ui."+a,message:d})}}},ba:function(){var a=this,b=1e3;return function(c){var d;try{d=c.target}catch(e){return}var f=d&&d.tagName;if(f&&("INPUT"===f||"TEXTAREA"===f||d.isContentEditable)){var g=a.aa;g||a._("input")(c),clearTimeout(g),a.aa=setTimeout(function(){a.aa=null},b)}}},ca:function(a,b){var c=H(this.w.href),d=H(b),e=H(a);this.x=b,c.protocol===d.protocol&&c.host===d.host&&(b=d.relative),c.protocol===e.protocol&&c.host===e.host&&(a=e.relative),this.captureBreadcrumb({category:"navigation",data:{to:b,from:a}})},C:function(){var a=this;a.da=Function.prototype.toString,Function.prototype.toString=function(){return"function"==typeof this&&this.M?a.da.apply(this.O,arguments):a.da.apply(this,arguments)}},Q:function(){this.da&&(Function.prototype.toString=this.da)},D:function(){function a(a){return function(b,d){for(var e=new Array(arguments.length),f=0;f<e.length;++f)e[f]=arguments[f];var g=e[0];return s(g)&&(e[0]=c.wrap(g)),a.apply?a.apply(this,e):a(e[0],e[1])}}function b(a){var b=R[a]&&R[a].prototype;b&&b.hasOwnProperty&&b.hasOwnProperty("addEventListener")&&(I(b,"addEventListener",function(b){return function(d,f,g,h){try{f&&f.handleEvent&&(f.handleEvent=c.wrap(f.handleEvent))}catch(i){}var j,k,l;return e&&e.dom&&("EventTarget"===a||"Node"===a)&&(k=c._("click"),l=c.ba(),j=function(a){if(a){var b;try{b=a.type}catch(c){return}return"click"===b?k(a):"keypress"===b?l(a):void 0}}),b.call(this,d,c.wrap(f,void 0,j),g,h)}},d),I(b,"removeEventListener",function(a){return function(b,c,d,e){try{c=c&&(c.N?c.N:c)}catch(f){}return a.call(this,b,c,d,e)}},d))}var c=this,d=c.t,e=this.k.autoBreadcrumbs;I(R,"setTimeout",a,d),I(R,"setInterval",a,d),R.requestAnimationFrame&&I(R,"requestAnimationFrame",function(a){return function(b){return a(c.wrap(b))}},d);for(var f=["EventTarget","Window","Node","ApplicationCache","AudioTrackList","ChannelMergerNode","CryptoOperation","EventSource","FileReader","HTMLUnknownElement","IDBDatabase","IDBRequest","IDBTransaction","KeyOperation","MediaController","MessagePort","ModalWindow","Notification","SVGElementInstance","Screen","TextTrack","TextTrackCue","TextTrackList","WebSocket","WebSocketWorker","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","XMLHttpRequestUpload"],g=0;g<f.length;g++)b(f[g])},E:function(){function a(a,c){a in c&&s(c[a])&&I(c,a,function(a){return b.wrap(a)})}var b=this,c=this.k.autoBreadcrumbs,d=b.t;if(c.xhr&&"XMLHttpRequest"in R){var e=R.XMLHttpRequest&&R.XMLHttpRequest.prototype;I(e,"open",function(a){return function(c,d){return t(d)&&d.indexOf(b.h)===-1&&(this.ea={method:c,url:d,status_code:null}),a.apply(this,arguments)}},d),I(e,"send",function(c){return function(){function d(){if(e.ea&&4===e.readyState){try{e.ea.status_code=e.status}catch(a){}b.captureBreadcrumb({type:"http",category:"xhr",data:e.ea})}}for(var e=this,f=["onload","onerror","onprogress"],g=0;g<f.length;g++)a(f[g],e);return"onreadystatechange"in e&&s(e.onreadystatechange)?I(e,"onreadystatechange",function(a){return b.wrap(a,void 0,d)}):e.onreadystatechange=d,c.apply(this,arguments)}},d)}c.xhr&&J()&&I(R,"fetch",function(a){return function(){for(var c=new Array(arguments.length),d=0;d<c.length;++d)c[d]=arguments[d];var e,f=c[0],g="GET";if("string"==typeof f?e=f:"Request"in R&&f instanceof R.Request?(e=f.url,f.method&&(g=f.method)):e=""+f,e.indexOf(b.h)!==-1)return a.apply(this,c);c[1]&&c[1].method&&(g=c[1].method);var h={method:g,url:e,status_code:null};return a.apply(this,c).then(function(a){return h.status_code=a.status,b.captureBreadcrumb({type:"http",category:"fetch",data:h}),a})["catch"](function(a){throw b.captureBreadcrumb({type:"http",category:"fetch",data:h,level:"error"}),a})}},d),c.dom&&this.b&&(S.addEventListener?(S.addEventListener("click",b._("click"),!1),S.addEventListener("keypress",b.ba(),!1)):S.attachEvent&&(S.attachEvent("onclick",b._("click")),S.attachEvent("onkeypress",b.ba())));var f=R.chrome,g=f&&f.app&&f.app.runtime,h=!g&&R.history&&R.history.pushState&&R.history.replaceState;if(c.location&&h){var i=R.onpopstate;R.onpopstate=function(){var a=b.w.href;if(b.ca(b.x,a),i)return i.apply(this,arguments)};var j=function(a){return function(){var c=arguments.length>2?arguments[2]:void 0;return c&&b.ca(b.x,c+""),a.apply(this,arguments)}};I(R.history,"pushState",j,d),I(R.history,"replaceState",j,d)}if(c.console&&"console"in R&&console.log){var k=function(a,c){b.captureBreadcrumb({message:a,level:c.level,category:"console"})};w(["debug","info","warn","error","log"],function(a,b){O(console,b,k)})}},R:function(){for(var a;this.t.length;){a=this.t.shift();var b=a[0],c=a[1],d=a[2];b[c]=d}},S:function(){for(var a in this.q)this.p[a]=this.q[a]},F:function(){var a=this;w(this.r,function(b,c){var d=c[0],e=c[1];d.apply(a,[a].concat(e))})},G:function(a){var b=Q.exec(a),c={},d=7;try{for(;d--;)c[P[d]]=b[d]||""}catch(e){throw new j("Invalid DSN: "+a)}if(c.pass&&!this.k.allowSecretKey)throw new j("Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key");return c},J:function(a){var b="//"+a.host+(a.port?":"+a.port:"");return a.protocol&&(b=a.protocol+":"+b),b},A:function(){this.m||this.V.apply(this,arguments)},V:function(a,b){var c=this.X(a,b);this.$("handle",{stackInfo:a,options:b}),this.fa(a.name,a.message,a.url,a.lineno,c,b)},X:function(a,b){var c=this,d=[];if(a.stack&&a.stack.length&&(w(a.stack,function(b,e){var f=c.ga(e,a.url);f&&d.push(f)}),b&&b.trimHeadFrames))for(var e=0;e<b.trimHeadFrames&&e<d.length;e++)d[e].in_app=!1;return d=d.slice(0,this.k.stackTraceLimit)},ga:function(a,b){var c={filename:a.url,lineno:a.line,colno:a.column,"function":a.func||"?"};return a.url||(c.filename=b),c.in_app=!(this.k.includePaths.test&&!this.k.includePaths.test(c.filename)||/(Raven|TraceKit)\./.test(c["function"])||/raven\.(min\.)?js$/.test(c.filename)),c},fa:function(a,b,c,d,e,f){var g=(a?a+": ":"")+(b||"");if(!this.k.ignoreErrors.test||!this.k.ignoreErrors.test(b)&&!this.k.ignoreErrors.test(g)){var h;if(e&&e.length?(c=e[0].filename||c,e.reverse(),h={frames:e}):c&&(h={frames:[{filename:c,lineno:d,in_app:!0}]}),(!this.k.ignoreUrls.test||!this.k.ignoreUrls.test(c))&&(!this.k.whitelistUrls.test||this.k.whitelistUrls.test(c))){var i=x({exception:{values:[{type:a,value:b,stacktrace:h}]},transaction:c},f);this.Y(i)}}},ha:function(a){var b=this.k.maxMessageLength;if(a.message&&(a.message=y(a.message,b)),a.exception){var c=a.exception.values[0];c.value=y(c.value,b)}var d=a.request;return d&&(d.url&&(d.url=y(d.url,this.k.maxUrlLength)),d.Referer&&(d.Referer=y(d.Referer,this.k.maxUrlLength))),a.breadcrumbs&&a.breadcrumbs.values&&this.ia(a.breadcrumbs),a},ia:function(a){for(var b,c,d,e=["to","from","url"],f=0;f<a.values.length;++f)if(c=a.values[f],c.hasOwnProperty("data")&&p(c.data)&&!z(c.data)){d=x({},c.data);for(var g=0;g<e.length;++g)b=e[g],d.hasOwnProperty(b)&&d[b]&&(d[b]=y(d[b],this.k.maxUrlLength));a.values[f].data=d}},ja:function(){if(this.c||this.b){var a={};return this.c&&T.userAgent&&(a.headers={"User-Agent":T.userAgent}),R.location&&R.location.href&&(a.url=R.location.href),this.b&&S.referrer&&(a.headers||(a.headers={}),a.headers.Referer=S.referrer),a}},y:function(){this.ka=0,this.la=null},ma:function(){return this.ka&&d()-this.la<this.ka},na:function(a){var b=this.e;return!(!b||a.message!==b.message||a.transaction!==b.transaction)&&(a.stacktrace||b.stacktrace?G(a.stacktrace,b.stacktrace):!a.exception&&!b.exception||F(a.exception,b.exception))},oa:function(a){if(!this.ma()){var b=a.status;if(400===b||401===b||429===b){var c;try{c=J()?a.headers.get("Retry-After"):a.getResponseHeader("Retry-After"),c=1e3*parseInt(c,10)}catch(e){}this.ka=c?c:2*this.ka||1e3,this.la=d()}}},Y:function(a){var b=this.k,c={project:this.i,logger:b.logger,platform:"javascript"},e=this.ja();if(e&&(c.request=e),a.trimHeadFrames&&delete a.trimHeadFrames,a=x(c,a),a.tags=x(x({},this.j.tags),a.tags),a.extra=x(x({},this.j.extra),a.extra),a.extra["session:duration"]=d()-this.s,this.u&&this.u.length>0&&(a.breadcrumbs={values:[].slice.call(this.u,0)}),this.j.user&&(a.user=this.j.user),b.environment&&(a.environment=b.environment),b.release&&(a.release=b.release),b.serverName&&(a.server_name=b.serverName),a=this.pa(a),Object.keys(a).forEach(function(b){(null==a[b]||""===a[b]||v(a[b]))&&delete a[b]}),s(b.dataCallback)&&(a=b.dataCallback(a)||a),a&&!v(a)&&(!s(b.shouldSendCallback)||b.shouldSendCallback(a)))return this.ma()?void this.z("warn","Raven dropped error due to backoff: ",a):void("number"==typeof b.sampleRate?Math.random()<b.sampleRate&&this.qa(a):this.qa(a))},pa:function(a){return N(a,this.k.sanitizeKeys)},ra:function(){return D()},qa:function(a,b){var c=this,d=this.k;if(this.isSetup()){if(a=this.ha(a),!this.k.allowDuplicates&&this.na(a))return void this.z("warn","Raven dropped repeat event: ",a);this.f=a.event_id||(a.event_id=this.ra()),this.e=a,this.z("debug","Raven about to send:",a);var e={sentry_version:"7",sentry_client:"raven-js/"+this.VERSION,sentry_key:this.h};this.I&&(e.sentry_secret=this.I);var f=a.exception&&a.exception.values[0];this.k.autoBreadcrumbs&&this.k.autoBreadcrumbs.sentry&&this.captureBreadcrumb({category:"sentry",message:f?(f.type?f.type+": ":"")+f.value:a.message,event_id:a.event_id,level:a.level||"error"});var g=this.K;(d.transport||this.sa).call(this,{url:g,auth:e,data:a,options:d,onSuccess:function(){c.y(),c.$("success",{data:a,src:g}),b&&b()},onError:function(d){c.z("error","Raven transport failed to send: ",d),d.request&&c.oa(d.request),c.$("failure",{data:a,src:g}),d=d||new Error("Raven send failed (no additional details provided)"),b&&b(d)}})}},sa:function(a){var b=a.url+"?"+C(a.auth),c=null,d={};if(a.options.headers&&(c=this.ta(a.options.headers)),a.options.fetchParameters&&(d=this.ta(a.options.fetchParameters)),J()){d.body=h(a.data);var e=x({},this.l),f=x(e,d);return c&&(f.headers=c),R.fetch(b,f).then(function(b){if(b.ok)a.onSuccess&&a.onSuccess();else{var c=new Error("Sentry error code: "+b.status);c.request=b,a.onError&&a.onError(c)}})["catch"](function(){a.onError&&a.onError(new Error("Sentry error code: network unavailable"))})}var g=R.XMLHttpRequest&&new R.XMLHttpRequest;if(g){var i="withCredentials"in g||"undefined"!=typeof XDomainRequest;i&&("withCredentials"in g?g.onreadystatechange=function(){if(4===g.readyState)if(200===g.status)a.onSuccess&&a.onSuccess();else if(a.onError){var b=new Error("Sentry error code: "+g.status);b.request=g,a.onError(b)}}:(g=new XDomainRequest,b=b.replace(/^https?:/,""),a.onSuccess&&(g.onload=a.onSuccess),a.onError&&(g.onerror=function(){var b=new Error("Sentry error code: XDomainRequest");b.request=g,a.onError(b)})),g.open("POST",b),c&&w(c,function(a,b){g.setRequestHeader(a,b)}),g.send(h(a.data)))}},ta:function(a){var b={};for(var c in a)if(a.hasOwnProperty(c)){var d=a[c];b[c]="function"==typeof d?d():d}return b},z:function(a){this.q[a]&&(this.debug||this.k.debug)&&Function.prototype.apply.call(this.q[a],this.p,[].slice.call(arguments,1))},Z:function(a,b){r(b)?delete this.j[a]:this.j[a]=x(this.j[a]||{},b)}},f.prototype.setUser=f.prototype.setUserContext,f.prototype.setReleaseContext=f.prototype.setRelease,b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{1:1,2:2,5:5,6:6,7:7,8:8}],4:[function(a,b,c){(function(c){var d=a(3),e="undefined"!=typeof window?window:"undefined"!=typeof c?c:"undefined"!=typeof self?self:{},f=e.Raven,g=new d;g.noConflict=function(){return e.Raven=f,g},g.afterLoad(),b.exports=g,b.exports.Client=d}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{3:3}],5:[function(a,b,c){(function(c){function d(a){return"object"==typeof a&&null!==a}function e(a){switch(Object.prototype.toString.call(a)){case"[object Error]":return!0;case"[object Exception]":return!0;case"[object DOMException]":return!0;default:return a instanceof Error}}function f(a){return"[object ErrorEvent]"===Object.prototype.toString.call(a)}function g(a){return"[object DOMError]"===Object.prototype.toString.call(a)}function h(a){return"[object DOMException]"===Object.prototype.toString.call(a)}function i(a){return void 0===a}function j(a){return"function"==typeof a}function k(a){return"[object Object]"===Object.prototype.toString.call(a)}function l(a){return"[object String]"===Object.prototype.toString.call(a)}function m(a){return"[object Array]"===Object.prototype.toString.call(a)}function n(a){if(!k(a))return!1;for(var b in a)if(a.hasOwnProperty(b))return!1;return!0}function o(){try{return new ErrorEvent(""),!0}catch(a){return!1}}function p(){try{return new DOMError(""),!0}catch(a){return!1}}function q(){try{return new DOMException(""),!0}catch(a){return!1}}function r(){if(!("fetch"in U))return!1;try{return new Headers,new Request(""),new Response,!0}catch(a){return!1}}function s(){if(!r())return!1;try{return new Request("pickleRick",{referrerPolicy:"origin"}),!0}catch(a){return!1}}function t(){return"function"==typeof PromiseRejectionEvent}function u(a){function b(b,c){var d=a(b)||b;return c?c(d)||d:d}return b}function v(a,b){var c,d;if(i(a.length))for(c in a)z(a,c)&&b.call(null,c,a[c]);else if(d=a.length)for(c=0;c<d;c++)b.call(null,c,a[c])}function w(a,b){return b?(v(b,function(b,c){a[b]=c}),a):a}function x(a){return!!Object.isFrozen&&Object.isFrozen(a)}function y(a,b){if("number"!=typeof b)throw new Error("2nd argument to `truncate` function should be a number");return"string"!=typeof a||0===b?a:a.length<=b?a:a.substr(0,b)+"…"}function z(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function A(a){for(var b,c=[],d=0,e=a.length;d<e;d++)b=a[d],l(b)?c.push(b.replace(/([.*+?^=!:${}()|\[\]\/\\])/g,"\\$1")):b&&b.source&&c.push(b.source);return new RegExp(c.join("|"),"i")}function B(a){var b=[];return v(a,function(a,c){b.push(encodeURIComponent(a)+"="+encodeURIComponent(c))}),b.join("&")}function C(a){if("string"!=typeof a)return{};var b=a.match(/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/),c=b[6]||"",d=b[8]||"";return{protocol:b[2],host:b[4],path:b[5],relative:b[5]+c+d}}function D(){var a=U.crypto||U.msCrypto;if(!i(a)&&a.getRandomValues){var b=new Uint16Array(8);a.getRandomValues(b),b[3]=4095&b[3]|16384,b[4]=16383&b[4]|32768;var c=function(a){for(var b=a.toString(16);b.length<4;)b="0"+b;return b};return c(b[0])+c(b[1])+c(b[2])+c(b[3])+c(b[4])+c(b[5])+c(b[6])+c(b[7])}return"xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=16*Math.random()|0,c="x"===a?b:3&b|8;return c.toString(16)})}function E(a){for(var b,c=5,d=80,e=[],f=0,g=0,h=" > ",i=h.length;a&&f++<c&&(b=F(a),!("html"===b||f>1&&g+e.length*i+b.length>=d));)e.push(b),g+=b.length,a=a.parentNode;return e.reverse().join(h)}function F(a){var b,c,d,e,f,g=[];if(!a||!a.tagName)return"";if(g.push(a.tagName.toLowerCase()),a.id&&g.push("#"+a.id),b=a.className,b&&l(b))for(c=b.split(/\s+/),f=0;f<c.length;f++)g.push("."+c[f]);var h=["type","name","title","alt"];for(f=0;f<h.length;f++)d=h[f],e=a.getAttribute(d),e&&g.push("["+d+'="'+e+'"]');return g.join("")}function G(a,b){return!!(!!a^!!b)}function H(a,b){return i(a)&&i(b)}function I(a,b){return!G(a,b)&&(a=a.values[0],b=b.values[0],a.type===b.type&&a.value===b.value&&(!H(a.stacktrace,b.stacktrace)&&J(a.stacktrace,b.stacktrace)))}function J(a,b){if(G(a,b))return!1;var c=a.frames,d=b.frames;if(c.length!==d.length)return!1;for(var e,f,g=0;g<c.length;g++)if(e=c[g],f=d[g],e.filename!==f.filename||e.lineno!==f.lineno||e.colno!==f.colno||e["function"]!==f["function"])return!1;return!0}function K(a,b,c,d){if(null!=a){var e=a[b];a[b]=c(e),a[b].M=!0,a[b].O=e,d&&d.push([a,b,e])}}function L(a,b){if(!m(a))return"";for(var c=[],d=0;d<a.length;d++)try{c.push(String(a[d]))}catch(e){c.push("[value cannot be serialized]")}return c.join(b)}function M(a){return~-encodeURI(a).split(/%..|./).length}function N(a){return M(JSON.stringify(a))}function O(a){if("string"==typeof a){var b=40;return y(a,b)}if("number"==typeof a||"boolean"==typeof a||"undefined"==typeof a)return a;var c=Object.prototype.toString.call(a);return"[object Object]"===c?"[Object]":"[object Array]"===c?"[Array]":"[object Function]"===c?a.name?"[Function: "+a.name+"]":"[Function]":a}function P(a,b){return 0===b?O(a):k(a)?Object.keys(a).reduce(function(c,d){return c[d]=P(a[d],b-1),c},{}):Array.isArray(a)?a.map(function(a){return P(a,b-1)}):O(a)}function Q(a,b,c){if(!k(a))return a;b="number"!=typeof b?V:b,c="number"!=typeof b?W:c;var d=P(a,b);return N(T(d))>c?Q(a,b-1):d}function R(a,b){if("number"==typeof a||"string"==typeof a)return a.toString();if(!Array.isArray(a))return"";if(a=a.filter(function(a){return"string"==typeof a}),0===a.length)return"[object has no keys]";if(b="number"!=typeof b?X:b,a[0].length>=b)return a[0];for(var c=a.length;c>0;c--){var d=a.slice(0,c).join(", ");if(!(d.length>b))return c===a.length?d:d+"…"}return""}function S(a,b){function c(a){return m(a)?a.map(function(a){return c(a)}):k(a)?Object.keys(a).reduce(function(b,d){return b[d]=e.test(d)?f:c(a[d]),b},{}):a}if(!m(b)||m(b)&&0===b.length)return a;var d,e=A(b),f="********";try{d=JSON.parse(T(a))}catch(g){return a}return c(d)}var T=a(7),U="undefined"!=typeof window?window:"undefined"!=typeof c?c:"undefined"!=typeof self?self:{},V=3,W=51200,X=40;b.exports={isObject:d,isError:e,isErrorEvent:f,isDOMError:g,isDOMException:h,isUndefined:i,isFunction:j,isPlainObject:k,isString:l,isArray:m,isEmptyObject:n,supportsErrorEvent:o,supportsDOMError:p,supportsDOMException:q,supportsFetch:r,supportsReferrerPolicy:s,supportsPromiseRejectionEvent:t,wrappedCallback:u,each:v,objectMerge:w,truncate:y,objectFrozen:x,hasKey:z,joinRegExp:A,urlencode:B,uuid4:D,htmlTreeAsString:E,htmlElementAsString:F,isSameException:I,isSameStacktrace:J,parseUrl:C,fill:K,safeJoin:L,serializeException:Q,serializeKeysForMessage:R,sanitize:S}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{7:7}],6:[function(a,b,c){(function(c){function d(){return"undefined"==typeof document||null==document.location?"":document.location.href}function e(){return"undefined"==typeof document||null==document.location?"":(document.location.origin||(document.location.origin=document.location.protocol+"//"+document.location.hostname+(document.location.port?":"+document.location.port:"")),document.location.origin)}var f=a(5),g={collectWindowErrors:!0,debug:!1},h="undefined"!=typeof window?window:"undefined"!=typeof c?c:"undefined"!=typeof self?self:{},i=[].slice,j="?",k=/^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;g.report=function(){function a(a){m(),s.push(a)}function b(a){for(var b=s.length-1;b>=0;--b)s[b]===a&&s.splice(b,1)}function c(){n(),s=[]}function e(a,b){var c=null;if(!b||g.collectWindowErrors){for(var d in s)if(s.hasOwnProperty(d))try{s[d].apply(null,[a].concat(i.call(arguments,2)))}catch(e){c=e}if(c)throw c}}function l(a,b,c,h,i){var l=null,m=f.isErrorEvent(i)?i.error:i,n=f.isErrorEvent(a)?a.message:a;if(v)g.computeStackTrace.augmentStackTraceWithInitialElement(v,b,c,n),o();else if(m&&f.isError(m))l=g.computeStackTrace(m),e(l,!0);else{var p,r={url:b,line:c,column:h},s=void 0;if("[object String]"==={}.toString.call(n)){var p=n.match(k);p&&(s=p[1],n=p[2])}r.func=j,l={name:s,message:n,url:d(),stack:[r]},e(l,!0)}return!!q&&q.apply(this,arguments)}function m(){r||(q=h.onerror,h.onerror=l,r=!0)}function n(){r&&(h.onerror=q,r=!1,q=void 0)}function o(){var a=v,b=t;t=null,v=null,u=null,e.apply(null,[a,!1].concat(b))}function p(a,b){var c=i.call(arguments,1);if(v){if(u===a)return;o()}var d=g.computeStackTrace(a);if(v=d,u=a,t=c,setTimeout(function(){u===a&&o()},d.incomplete?2e3:0),b!==!1)throw a}var q,r,s=[],t=null,u=null,v=null;return p.subscribe=a,p.unsubscribe=b,p.uninstall=c,p}(),g.computeStackTrace=function(){function a(a){if("undefined"!=typeof a.stack&&a.stack){for(var b,c,f,g=/^\s*at (?:(.*?) ?\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,h=/^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx(?:-web)|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i,i=/^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\/.*?|\[native code\]|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i,k=/(\S+) line (\d+)(?: > eval line \d+)* > eval/i,l=/\((\S*)(?::(\d+))(?::(\d+))\)/,m=a.stack.split("\n"),n=[],o=(/^(.*) is undefined$/.exec(a.message),0),p=m.length;o<p;++o){if(c=g.exec(m[o])){var q=c[2]&&0===c[2].indexOf("native"),r=c[2]&&0===c[2].indexOf("eval");r&&(b=l.exec(c[2]))&&(c[2]=b[1],c[3]=b[2],c[4]=b[3]),f={url:q?null:c[2],func:c[1]||j,args:q?[c[2]]:[],line:c[3]?+c[3]:null,column:c[4]?+c[4]:null}}else if(c=h.exec(m[o]))f={url:c[2],func:c[1]||j,args:[],line:+c[3],column:c[4]?+c[4]:null};else{if(!(c=i.exec(m[o])))continue;var r=c[3]&&c[3].indexOf(" > eval")>-1;r&&(b=k.exec(c[3]))?(c[3]=b[1],c[4]=b[2],c[5]=null):0!==o||c[5]||"undefined"==typeof a.columnNumber||(n[0].column=a.columnNumber+1),f={url:c[3],func:c[1]||j,args:c[2]?c[2].split(","):[],line:c[4]?+c[4]:null,column:c[5]?+c[5]:null}}if(!f.func&&f.line&&(f.func=j),f.url&&"blob:"===f.url.substr(0,5)){var s=new XMLHttpRequest;if(s.open("GET",f.url,!1),s.send(null),200===s.status){var t=s.responseText||"";t=t.slice(-300);var u=t.match(/\/\/# sourceMappingURL=(.*)$/);if(u){var v=u[1];"~"===v.charAt(0)&&(v=e()+v.slice(1)),f.url=v.slice(0,-4)}}}n.push(f)}return n.length?{name:a.name,message:a.message,url:d(),stack:n}:null}}function b(a,b,c,d){var e={url:b,line:c};if(e.url&&e.line){if(a.incomplete=!1,e.func||(e.func=j),a.stack.length>0&&a.stack[0].url===e.url){if(a.stack[0].line===e.line)return!1;if(!a.stack[0].line&&a.stack[0].func===e.func)return a.stack[0].line=e.line,!1}return a.stack.unshift(e),a.partial=!0,!0}return a.incomplete=!0,!1}function c(a,e){for(var h,i,k=/function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i,l=[],m={},n=!1,o=c.caller;o&&!n;o=o.caller)if(o!==f&&o!==g.report){if(i={url:null,func:j,line:null,column:null},o.name?i.func=o.name:(h=k.exec(o.toString()))&&(i.func=h[1]),"undefined"==typeof i.func)try{i.func=h.input.substring(0,h.input.indexOf("{"))}catch(p){}m[""+o]?n=!0:m[""+o]=!0,l.push(i)}e&&l.splice(0,e);var q={name:a.name,message:a.message,url:d(),stack:l};return b(q,a.sourceURL||a.fileName,a.line||a.lineNumber,a.message||a.description),q}function f(b,e){var f=null;e=null==e?0:+e;try{if(f=a(b))return f}catch(h){if(g.debug)throw h}try{if(f=c(b,e+1))return f}catch(h){if(g.debug)throw h}return{name:b.name,message:b.message,url:d()}}return f.augmentStackTraceWithInitialElement=b,f.computeStackTraceFromStackProp=a,f}(),b.exports=g}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});
},{5:5}],7:[function(a,b,c){function d(a,b){for(var c=0;c<a.length;++c)if(a[c]===b)return c;return-1}function e(a,b,c,d){return JSON.stringify(a,g(b,d),c)}function f(a){var b={stack:a.stack,message:a.message,name:a.name};for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&(b[c]=a[c]);return b}function g(a,b){var c=[],e=[];return null==b&&(b=function(a,b){return c[0]===b?"[Circular ~]":"[Circular ~."+e.slice(0,d(c,b)).join(".")+"]"}),function(g,h){if(c.length>0){var i=d(c,this);~i?c.splice(i+1):c.push(this),~i?e.splice(i,1/0,g):e.push(g),~d(c,h)&&(h=b.call(this,g,h))}else c.push(h);return null==a?h instanceof Error?f(h):h:a.call(this,g,h)}}c=b.exports=e,c.getSerialize=g},{}],8:[function(a,b,c){function d(a,b){var c=(65535&a)+(65535&b),d=(a>>16)+(b>>16)+(c>>16);return d<<16|65535&c}function e(a,b){return a<<b|a>>>32-b}function f(a,b,c,f,g,h){return d(e(d(d(b,a),d(f,h)),g),c)}function g(a,b,c,d,e,g,h){return f(b&c|~b&d,a,b,e,g,h)}function h(a,b,c,d,e,g,h){return f(b&d|c&~d,a,b,e,g,h)}function i(a,b,c,d,e,g,h){return f(b^c^d,a,b,e,g,h)}function j(a,b,c,d,e,g,h){return f(c^(b|~d),a,b,e,g,h)}function k(a,b){a[b>>5]|=128<<b%32,a[(b+64>>>9<<4)+14]=b;var c,e,f,k,l,m=1732584193,n=-271733879,o=-1732584194,p=271733878;for(c=0;c<a.length;c+=16)e=m,f=n,k=o,l=p,m=g(m,n,o,p,a[c],7,-680876936),p=g(p,m,n,o,a[c+1],12,-389564586),o=g(o,p,m,n,a[c+2],17,606105819),n=g(n,o,p,m,a[c+3],22,-1044525330),m=g(m,n,o,p,a[c+4],7,-176418897),p=g(p,m,n,o,a[c+5],12,1200080426),o=g(o,p,m,n,a[c+6],17,-1473231341),n=g(n,o,p,m,a[c+7],22,-45705983),m=g(m,n,o,p,a[c+8],7,1770035416),p=g(p,m,n,o,a[c+9],12,-1958414417),o=g(o,p,m,n,a[c+10],17,-42063),n=g(n,o,p,m,a[c+11],22,-1990404162),m=g(m,n,o,p,a[c+12],7,1804603682),p=g(p,m,n,o,a[c+13],12,-40341101),o=g(o,p,m,n,a[c+14],17,-1502002290),n=g(n,o,p,m,a[c+15],22,1236535329),m=h(m,n,o,p,a[c+1],5,-165796510),p=h(p,m,n,o,a[c+6],9,-1069501632),o=h(o,p,m,n,a[c+11],14,643717713),n=h(n,o,p,m,a[c],20,-373897302),m=h(m,n,o,p,a[c+5],5,-701558691),p=h(p,m,n,o,a[c+10],9,38016083),o=h(o,p,m,n,a[c+15],14,-660478335),n=h(n,o,p,m,a[c+4],20,-405537848),m=h(m,n,o,p,a[c+9],5,568446438),p=h(p,m,n,o,a[c+14],9,-1019803690),o=h(o,p,m,n,a[c+3],14,-187363961),n=h(n,o,p,m,a[c+8],20,1163531501),m=h(m,n,o,p,a[c+13],5,-1444681467),p=h(p,m,n,o,a[c+2],9,-51403784),o=h(o,p,m,n,a[c+7],14,1735328473),n=h(n,o,p,m,a[c+12],20,-1926607734),m=i(m,n,o,p,a[c+5],4,-378558),p=i(p,m,n,o,a[c+8],11,-2022574463),o=i(o,p,m,n,a[c+11],16,1839030562),n=i(n,o,p,m,a[c+14],23,-35309556),m=i(m,n,o,p,a[c+1],4,-1530992060),p=i(p,m,n,o,a[c+4],11,1272893353),o=i(o,p,m,n,a[c+7],16,-155497632),n=i(n,o,p,m,a[c+10],23,-1094730640),m=i(m,n,o,p,a[c+13],4,681279174),p=i(p,m,n,o,a[c],11,-358537222),o=i(o,p,m,n,a[c+3],16,-722521979),n=i(n,o,p,m,a[c+6],23,76029189),m=i(m,n,o,p,a[c+9],4,-640364487),p=i(p,m,n,o,a[c+12],11,-421815835),o=i(o,p,m,n,a[c+15],16,530742520),n=i(n,o,p,m,a[c+2],23,-995338651),m=j(m,n,o,p,a[c],6,-198630844),p=j(p,m,n,o,a[c+7],10,1126891415),o=j(o,p,m,n,a[c+14],15,-1416354905),n=j(n,o,p,m,a[c+5],21,-57434055),m=j(m,n,o,p,a[c+12],6,1700485571),p=j(p,m,n,o,a[c+3],10,-1894986606),o=j(o,p,m,n,a[c+10],15,-1051523),n=j(n,o,p,m,a[c+1],21,-2054922799),m=j(m,n,o,p,a[c+8],6,1873313359),p=j(p,m,n,o,a[c+15],10,-30611744),o=j(o,p,m,n,a[c+6],15,-1560198380),n=j(n,o,p,m,a[c+13],21,1309151649),m=j(m,n,o,p,a[c+4],6,-145523070),p=j(p,m,n,o,a[c+11],10,-1120210379),o=j(o,p,m,n,a[c+2],15,718787259),n=j(n,o,p,m,a[c+9],21,-343485551),m=d(m,e),n=d(n,f),o=d(o,k),p=d(p,l);return[m,n,o,p]}function l(a){var b,c="",d=32*a.length;for(b=0;b<d;b+=8)c+=String.fromCharCode(a[b>>5]>>>b%32&255);return c}function m(a){var b,c=[];for(c[(a.length>>2)-1]=void 0,b=0;b<c.length;b+=1)c[b]=0;var d=8*a.length;for(b=0;b<d;b+=8)c[b>>5]|=(255&a.charCodeAt(b/8))<<b%32;return c}function n(a){return l(k(m(a),8*a.length))}function o(a,b){var c,d,e=m(a),f=[],g=[];for(f[15]=g[15]=void 0,e.length>16&&(e=k(e,8*a.length)),c=0;c<16;c+=1)f[c]=909522486^e[c],g[c]=1549556828^e[c];return d=k(f.concat(m(b)),512+8*b.length),l(k(g.concat(d),640))}function p(a){var b,c,d="0123456789abcdef",e="";for(c=0;c<a.length;c+=1)b=a.charCodeAt(c),e+=d.charAt(b>>>4&15)+d.charAt(15&b);return e}function q(a){return unescape(encodeURIComponent(a))}function r(a){return n(q(a))}function s(a){return p(r(a))}function t(a,b){return o(q(a),q(b))}function u(a,b){return p(t(a,b))}function v(a,b,c){return b?c?t(b,a):u(b,a):c?r(a):s(a)}b.exports=v},{}]},{},[4])(4)});
//# sourceMappingURL=raven.min.js.map
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n():"function"==typeof define&&define.amd?define(n):n()}(0,function(){"use strict";function e(e){var n=this.constructor;return this.then(function(t){return n.resolve(e()).then(function(){return t})},function(t){return n.resolve(e()).then(function(){return n.reject(t)})})}function n(e){return!(!e||"undefined"==typeof e.length)}function t(){}function o(e){if(!(this instanceof o))throw new TypeError("Promises must be constructed via new");if("function"!=typeof e)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=undefined,this._deferreds=[],c(e,this)}function r(e,n){for(;3===e._state;)e=e._value;0!==e._state?(e._handled=!0,o._immediateFn(function(){var t=1===e._state?n.onFulfilled:n.onRejected;if(null!==t){var o;try{o=t(e._value)}catch(r){return void f(n.promise,r)}i(n.promise,o)}else(1===e._state?i:f)(n.promise,e._value)})):e._deferreds.push(n)}function i(e,n){try{if(n===e)throw new TypeError("A promise cannot be resolved with itself.");if(n&&("object"==typeof n||"function"==typeof n)){var t=n.then;if(n instanceof o)return e._state=3,e._value=n,void u(e);if("function"==typeof t)return void c(function(e,n){return function(){e.apply(n,arguments)}}(t,n),e)}e._state=1,e._value=n,u(e)}catch(r){f(e,r)}}function f(e,n){e._state=2,e._value=n,u(e)}function u(e){2===e._state&&0===e._deferreds.length&&o._immediateFn(function(){e._handled||o._unhandledRejectionFn(e._value)});for(var n=0,t=e._deferreds.length;t>n;n++)r(e,e._deferreds[n]);e._deferreds=null}function c(e,n){var t=!1;try{e(function(e){t||(t=!0,i(n,e))},function(e){t||(t=!0,f(n,e))})}catch(o){if(t)return;t=!0,f(n,o)}}var a=setTimeout;o.prototype["catch"]=function(e){return this.then(null,e)},o.prototype.then=function(e,n){var o=new this.constructor(t);return r(this,new function(e,n,t){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof n?n:null,this.promise=t}(e,n,o)),o},o.prototype["finally"]=e,o.all=function(e){return new o(function(t,o){function r(e,n){try{if(n&&("object"==typeof n||"function"==typeof n)){var u=n.then;if("function"==typeof u)return void u.call(n,function(n){r(e,n)},o)}i[e]=n,0==--f&&t(i)}catch(c){o(c)}}if(!n(e))return o(new TypeError("Promise.all accepts an array"));var i=Array.prototype.slice.call(e);if(0===i.length)return t([]);for(var f=i.length,u=0;i.length>u;u++)r(u,i[u])})},o.resolve=function(e){return e&&"object"==typeof e&&e.constructor===o?e:new o(function(n){n(e)})},o.reject=function(e){return new o(function(n,t){t(e)})},o.race=function(e){return new o(function(t,r){if(!n(e))return r(new TypeError("Promise.race accepts an array"));for(var i=0,f=e.length;f>i;i++)o.resolve(e[i]).then(t,r)})},o._immediateFn="function"==typeof setImmediate&&function(e){setImmediate(e)}||function(e){a(e,0)},o._unhandledRejectionFn=function(e){void 0!==console&&console&&console.warn("Possible Unhandled Promise Rejection:",e)};var l=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if("undefined"!=typeof global)return global;throw Error("unable to locate global object")}();"Promise"in l?l.Promise.prototype["finally"]||(l.Promise.prototype["finally"]=e):l.Promise=o});

!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e=e||self).FEIM={})}(this,(function(e){"use strict";var n,o;!function(e){e.LISTENING="game-listening",e.HELLO="game-hello",e.CONFIGURE="configure",e.REALITY_CHECK_RESOLVED="rc-resolved",e.PAUSED="idle-paused",e.RESUMING_AFTER_PAUSE="pause-resumed",e.REPORT_SESSION_DETAILS="rc-session-details",e.GAME_LOAD_STARTED="game-load-started",e.GAME_LOAD_PROGRESS="game-load-progress",e.GAME_LOAD_COMPLETED="game-load-loaded",e.ROUND_STARTED="game-round-started",e.ROUND_FINISHED="game-round-finished",e.FEATURE_STARTED="feature-started",e.FEATURE_FINISHED="feature-finished",e.REQUEST_VIEWPORT_CONFIG="game-request-viewport-config",e.BALANCE_UPDATE="balance-update",e.BET_UPDATE="bet-update",e.WIN_UPDATE="win-update",e.UPDATE_SETTINGS="settings-changed",e.ERROR_MESSAGE="error-message",e.EXIT_GAME="exit-game",e.AUTOPLAY_STARTED="autoplay-started",e.AUTOPLAY_FINISHED="autoplay-finished",e.GOTO_GAME="goto-game",e.OPEN_QUICK_DEPOSIT="open-quick-deposit",e.USER_ACTION="user-action"}(n||(n={})),function(e){e.LISTENING="listening",e.HELLO="hello",e.REFRESH_BALANCE="update-balance",e.UPDATE_SETTINGS="settings-update",e.PAYTABLE_TOGGLE="toggle-paytable",e.ERROR_MESSAGE_DISMISSED="error-message-dismissed",e.VIEWPORT_UPDATE="viewport-update",e.ERROR_MESSAGE_DISPLAYED="error-message-displayed",e.EXITING_GAME="exiting-game",e.LOCK_PLAY="lock-play",e.UNLOCK_PLAY="unlock-play",e.PAUSE_AUTOPLAY="pause-autoplay",e.TOGGLE_GAME_HELP="toggle-game-help",e.FREEZE="freeze",e.UNFREEZE="unfreeze",e.P2P_RC_CHOICE="rc-choice",e._PAUSE_WHEN_IDLE="pause-when-idle",e._RESUME="pause-resume",e._SEND_RCCHOICE="reality-check-choice",e._NAVIGATE_GAME="navigate-game"}(o||(o={}));
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
var t=function(){return(t=Object.assign||function(e){for(var n,o=1,t=arguments.length;o<t;o++)for(var r in n=arguments[o])Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);return e}).apply(this,arguments)};function r(e,n,o,t){return new(o||(o=Promise))((function(r,a){function i(e){try{c(t.next(e))}catch(e){a(e)}}function s(e){try{c(t.throw(e))}catch(e){a(e)}}function c(e){var n;e.done?r(e.value):(n=e.value,n instanceof o?n:new o((function(e){e(n)}))).then(i,s)}c((t=t.apply(e,n||[])).next())}))}function a(e,n){var o,t,r,a,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(o)throw new TypeError("Generator is already executing.");for(;i;)try{if(o=1,t&&(r=2&a[0]?t.return:a[0]?t.throw||((r=t.return)&&r.call(t),0):t.next)&&!(r=r.call(t,a[1])).done)return r;switch(t=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,t=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(r=i.trys,(r=r.length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){i.label=a[1];break}if(6===a[0]&&i.label<r[1]){i.label=r[1],r=a;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(a);break}r[2]&&i.ops.pop(),i.trys.pop();continue}a=n.call(e,i)}catch(e){a=[6,e],t=0}finally{o=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}}var i,s,c=""===(i=window.location.search)?{}:i.slice(i.indexOf("?")+1).split("&").reduce((function(e,n){var o,r,a=n.indexOf("=");if(a<0)return t(t({},e),((o={})[n]="true",o));var i=n.slice(0,a),s=n.slice(a+1);return t(t({},e),((r={})[i]=decodeURIComponent(s),r))}),{}),u=function(e){return c[e]},l=function(e){return Object.prototype.hasOwnProperty.call(c,e)};(s=e.LogLevel||(e.LogLevel={}))[s.NONE=0]="NONE",s[s.ERROR=1]="ERROR",s[s.WARN=2]="WARN",s[s.INIT=3]="INIT",s[s.ALL_MESSAGES=4]="ALL_MESSAGES",s[s.ALL_MESSAGES_AND_PAYLOADS=5]="ALL_MESSAGES_AND_PAYLOADS";var E=l("rlxfeimdebug"),d=e.LogLevel.ERROR;E&&(d=e.LogLevel.ALL_MESSAGES_AND_PAYLOADS);var g=function(e){E&&window.rlxfeim.log.push(e)},f=function(n,o,t){void 0===o&&(o=e.LogLevel.ALL_MESSAGES),d>=o&&(void 0!==t&&(d>=e.LogLevel.ALL_MESSAGES_AND_PAYLOADS||o<=e.LogLevel.INIT)&&(n+=" "+JSON.stringify(t)),g(n),console.log("%c[FEIM]%c"+n,"color: #000; margin-right: 4px; background: #a0ecff; padding: 2px 6px; border: 1px solid #888",function(n){return n<=e.LogLevel.INIT?"color: #000; background: #a0ecff; padding: 2px 6px; border: 1px solid #888":"color: #000; background: #d9e3e6; padding: 2px 6px;"}(o)))},p=function(n,o){void 0===o&&(o=e.LogLevel.WARN),d>=o&&(g(n),console.warn("[FEIM] "+n))},_=function(n){d>e.LogLevel.NONE&&(g(n),console.error("[FEIM] "+n))},v=["gameLoaded","gameLoadedHandler","gamePausedHandler","playTimeHandler","handshakeSuccess","handshakeCompleted","handshakeFail","handshakeFailed"],A=void 0,S=function(){A&&(A.style.display="block")},L=function(){A&&(A.style.display="none")},m=function(){var n,o;if(null!==document.body){if(window.removeEventListener("load",m),"true"===u("rcenable")){var t=u("rciframeurl");if(void 0!==t&&""!==t&&!t.toLowerCase().includes("javascript:")&&(t.startsWith("https:")||t.startsWith("http:"))){var r=document.getElementById("rg_rc_iframe");if(!r){f("Creating RC iframe",e.LogLevel.INIT),(r=document.createElement("iframe")).id="rg_rc_iframe",r.style.display="none",r.style.position="fixed",r.style.left="0",r.style.top="0",r.style.width="100%",r.style.height="100%",r.style.zIndex="1001",r.frameBorder="0",r.setAttribute("sandbox","allow-scripts allow-top-navigation-by-user-activation allow-same-origin allow-popups allow-popups-to-escape-sandbox");var a=document.getElementById("rc_iframe_wrapper");a?a.appendChild(r):document.body.appendChild(r)}var i=null!==(n=u("rchistoryurl"))&&void 0!==n?n:"",s=null!==(o=u("homeurl"))&&void 0!==o?o:"",c=t.includes("?")?"&":"?";r.src=t+c+"rchistoryurl="+i+"&homeurl="+s,A=r}}}else window.addEventListener("load",m)},h=function(e){if(void 0!==A&&A.contentWindow&&void 0!==e){var n,o,t=e;if((n=t)&&((null===(o=n.rgMessage)||void 0===o?void 0:o.startsWith("gprg_"))||void 0!==n.method&&v.indexOf(n.method)>=0))A.contentWindow.postMessage(t,"*")}},R=void 0,T=[],I=function(e){void 0===R&&T.push(e)},O=new Map,y=function(n){return O.has(n)||O.set(n,[]),function(o,t){var r;void 0===t&&(t=!1),f("Registering handler for "+n,e.LogLevel.INIT),null===(r=O.get(n))||void 0===r||r.push({callback:o,once:t})}},N=function(e){O.forEach((function(n,o){!function(e,n){var o,t=null===(o=O.get(e))||void 0===o?void 0:o.filter((function(e){return e.callback===n}));void 0!==t&&O.set(e,t)}(o,e)}))};window.addEventListener("message",(function(n){var o,t=function(n){if(void 0!==R)return R.processInbound(n);T.some((function(o){return!!o.checkHandshake(n)&&(T.length=0,f((R=o).name+" set as active",e.LogLevel.INIT),!0)}))}(n.data);if(void 0!==t){f("🠈 Received "+t.feimOpEvent,e.LogLevel.ALL_MESSAGES,t.payload);var r=null===(o=O.get(t.feimOpEvent))||void 0===o?void 0:o.filter((function(e){return e.callback(t.payload),!e.once}));r?O.set(t.feimOpEvent,r):p("Warning! The game has no handlers for event "+t.feimOpEvent)}}));var P=function(e,n){var o;null===(o=O.get(e))||void 0===o||o.forEach((function(e){e.callback(n)}))},D=function(){try{return window.self!==window.top}catch(e){return!0}}(),G=function(e){h(e),D&&window.parent.postMessage(e,"*")},C=[],U=function(n,o){C.forEach((function(e){e({type:n,payload:o})}));var t=function(e,n){return void 0!==R?R.processOutbound(e,n):{feimGameEvent:e,payload:n}}(n,o);void 0!==t&&(f("Sending 🠊",e.LogLevel.ALL_MESSAGES,t),G(t))},b=!1,M=!1,w=void 0,k=0,F=0,H=function(){M&&!b&&(M=!1,P(o.FREEZE),U(n.PAUSED,w),w=void 0)},x=function(e){w=e,M||(M=!0,H())},Y=function(t){f("Resume triggered with payload",e.LogLevel.ALL_MESSAGES,t),M=!1,P(o.UNFREEZE),U(n.RESUMING_AFTER_PAUSE,t)},W=function(){var e;if(l("rcinterval")&&l("rciframeurl")){var o=Number(u("rcinterval"));if(!(isNaN(o)||o<=0)){k=Date.now(),F=Number(null!==(e=u("rcelapsed"))&&void 0!==e?e:0);var t=function(){var e=F+Math.round((Date.now()-k)/1e3);U(n.REPORT_SESSION_DETAILS,{sessionTime:e}),x({realityCheck:!0}),setTimeout(t,1e3*o)};setTimeout(t,1e3*(0===F?o:o-F%o))}}},B={},j=function(e,n){G({method:e,params:n})},K=function(){function t(){this.name="Legacy RC",j("gameLoadedHandler")}return t.prototype.checkHandshake=function(n){var o=n;if("operatorLoaded"===o.method)j("gameLoadedHandler");else if("confirmHandshake"===o.method)return f("Using direct Legacy PostMessage API connection",e.LogLevel.INIT),W(),void 0!==o.params.success&&j(o.params.success),!0;return!1},t.prototype.processInbound=function(e){var n,t;if(void 0!==e){var r=e;if(void 0!==r.method)switch(r.method){case"pauseGame":return B.gamePausedCallback=null===(n=r.params)||void 0===n?void 0:n.callback,{feimOpEvent:o._PAUSE_WHEN_IDLE,payload:{realityCheck:!0}};case"resumeGame":return B.gameResumedCallback=null===(t=r.params)||void 0===t?void 0:t.callback,{feimOpEvent:o._RESUME};case"navigateTo":var a=r.params;return{feimOpEvent:o._NAVIGATE_GAME,payload:a}}}},t.prototype.processOutbound=function(e,o){switch(e){case n.PAUSED:return S(),void 0!==B.gamePausedCallback?{method:B.gamePausedCallback}:void 0;case n.RESUMING_AFTER_PAUSE:return L(),void 0!==B.gameResumedCallback?{method:B.gameResumedCallback}:void 0;case n.REPORT_SESSION_DETAILS:return{method:"playTimeHandler",params:{delay:o.sessionTime}};default:return}},t}(),V=0,Z=function(e,n){G({rgMessage:e,payload:n})},z=function(){function t(){this.name="Rg PostMessage API",Z("gprg_Listening")}return t.prototype.checkHandshake=function(n){return"oprg_Ready"===n.rgMessage&&(f("Using direct Rg PostMessage API connection",e.LogLevel.INIT),W(),Z("gprg_Ready"),!0)},t.prototype.processInbound=function(e){if(void 0!==e){var n=e;if(void 0!==n.rgMessage&&n.rgMessage.includes("oprg_"))switch(n.rgMessage){case"oprg_GamePause":return void 0!==n.payload?!0===(t=n.payload).autoPlayOnly?{feimOpEvent:o.PAUSE_AUTOPLAY}:{feimOpEvent:o._PAUSE_WHEN_IDLE,payload:t}:{feimOpEvent:o._PAUSE_WHEN_IDLE};case"oprg_GameResume":var t=n.payload;return{feimOpEvent:o._RESUME,payload:t};case"oprg_NavigateGame":t=n.payload;return{feimOpEvent:o._NAVIGATE_GAME,payload:t};case"oprg_DebugSettings":Z("gprg_DebugSettings",{id:"Using FEIM v1.6.1"});break;case"oprg_DebugErrors":Z("gprg_DebugErrors",[]);break;case"oprg_Ping":void 0!==(null==(t=n.payload)?void 0:t.id)?Z("gprg_Pong",{id:t.id}):Z("gprg_Pong");break;case"oprg_UpdateBalance":return{feimOpEvent:o.REFRESH_BALANCE};case"oprg_SetSounds":t=n.payload;return{feimOpEvent:o.UPDATE_SETTINGS,payload:{sounds:t.enableSounds}};case"oprg_GetSoundState":break;default:p("Unhandled rgMessage "+n.rgMessage)}}},t.prototype.processOutbound=function(e,o){switch(e){case n.LISTENING:case n.HELLO:case n.CONFIGURE:case n.REALITY_CHECK_RESOLVED:return;case n.PAUSED:return(null==(t=o)?void 0:t.realityCheck)&&S(),{rgMessage:"gprg_GamePaused",payload:t};case n.RESUMING_AFTER_PAUSE:return(null==(t=o)?void 0:t.realityCheck)&&L(),{rgMessage:"gprg_GameResumed",payload:t};case n.GAME_LOAD_STARTED:case n.GAME_LOAD_PROGRESS:return;case n.GAME_LOAD_COMPLETED:return{rgMessage:"gprg_GameReady"};case n.ROUND_STARTED:return void 0===(t=o)&&(t={balance:V}),{rgMessage:"gprg_GameRoundStart",payload:t};case n.ROUND_FINISHED:return void 0!==(t=o)&&void 0!==t.balance||(t={balance:V}),{rgMessage:"gprg_GameRoundEnd",payload:t};case n.FEATURE_STARTED:case n.FEATURE_FINISHED:case n.AUTOPLAY_STARTED:case n.AUTOPLAY_FINISHED:case n.REQUEST_VIEWPORT_CONFIG:return;case n.BALANCE_UPDATE:return void(V=o);case n.BET_UPDATE:case n.WIN_UPDATE:return;case n.UPDATE_SETTINGS:var t;return{rgMessage:"gprg_Settings",payload:t={enableSounds:o.sounds}};case n.ERROR_MESSAGE:case n.EXIT_GAME:case n.GOTO_GAME:return;case n.OPEN_QUICK_DEPOSIT:return{rgMessage:"gprg_OpenQuickDeposit"};case n.REPORT_SESSION_DETAILS:return{rgMessage:"gprg_RealityCheckData",payload:o};case n.USER_ACTION:return{rgMessage:"gprg_UserAction",payload:o}}},t}(),Q={},X=!1;var q,J=function(e){y(o._SEND_RCCHOICE)((function(t){var i;if(void 0===e.clientConfig||void 0===(null===(i=e.loginResponse)||void 0===i?void 0:i.sid))return P(o.P2P_RC_CHOICE,t),void("continue"===t.action&&U(n.REALITY_CHECK_RESOLVED));(function(e,n){return r(this,void 0,void 0,(function(){var o,t,r;return a(this,(function(a){switch(a.label){case 0:o={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"}},n&&(o.body=JSON.stringify(n)),t=void 0,a.label=1;case 1:return a.trys.push([1,3,,4]),[4,fetch(e,o)];case 2:return t=a.sent(),[3,4];case 3:return r=a.sent(),console.error(r),[2];case 4:if(200,200!==t.status)throw new Error(t.status.toString()+": Fetch failed ("+e+")");return[4,t.json()];case 5:return[2,a.sent()]}}))}))})(e.clientConfig.gameServerApi+"/rcchoice",{sid:e.loginResponse.sid,choice:t.action}).then((function(){"continue"===t.action&&U(n.REALITY_CHECK_RESOLVED)})).catch((function(e){_("Failed to send rcchoice")}))}))},$=function(){function t(){this.name="Theos API",f("Starting Theos handshake ...",e.LogLevel.INIT),U(n.LISTENING)}return t.prototype.checkHandshake=function(t){var r=t;if(r.feimOpEvent===o.LISTENING){f("... saying hello ...",e.LogLevel.INIT);var a={feimVersion:"1.6.1"};U(n.HELLO,a),J(Q)}else if(r.feimOpEvent===o.HELLO){var i=r.payload;return f("... THEOS handshake complete",e.LogLevel.INIT),i.handlesErrors&&(f("Error messages are handled by the operator",e.LogLevel.INIT),Q.operatorHandlesErrors=!0),i.handlesExit&&(f("Game exiting is handled by the operator",e.LogLevel.INIT),Q.operatorHandlesGameExit=!0),!0}return!1},t.prototype.processInbound=function(e){if(void 0!==e.feimOpEvent)return e},t.prototype.processOutbound=function(e,n){return{feimGameEvent:e,payload:n}},t}(),ee={verifyConfiguration:function(){var n=0;f("Checking module configuration ...",e.LogLevel.NONE);var o=function(e){p(e),n++};return void 0===Q.clientConfig?o("Configuration missing clientConfig"):void 0===Q.clientConfig.gameServerApi&&o("Invalid clientConfig format - not a valid /getclientconfig/ response"),void 0===Q.loginResponse?o("Configuration missing loginResponse"):void 0===Q.loginResponse.sid&&o("Invalid loginResponse format - not a valid login response"),0===n?(f("... Configuration OK",e.LogLevel.NONE),!0):(f("... Configuration is missing "+n.toString()+" element(s)",e.LogLevel.NONE),!1)}},ne=function(e){if(void 0===e||""===e)return!1;if(!e.startsWith("action:"))return!1;var o=e.slice("action:".length);return U(n.USER_ACTION,{action:o}),!0},oe=function(e){return void 0!==e&&""!==e&&(ne(e)||(window.location.href=e),!0)},te=Object.freeze({__proto__:null,gameLoadStarted:function(){U(n.GAME_LOAD_STARTED)},gameLoadProgress:function(e){U(n.GAME_LOAD_PROGRESS,e)},gameLoadCompleted:function(){U(n.GAME_LOAD_COMPLETED)},roundStarted:function(e){U(n.ROUND_STARTED,e)},roundFinished:function(e){U(n.ROUND_FINISHED,e)},featureStarted:function(e){U(n.FEATURE_STARTED,e)},featureFinished:function(e){U(n.FEATURE_FINISHED,e)},autoPlayStarted:function(){U(n.AUTOPLAY_STARTED)},autoPlayFinished:function(){U(n.AUTOPLAY_FINISHED)},balanceUpdate:function(e){U(n.BALANCE_UPDATE,e)},betUpdate:function(e){U(n.BET_UPDATE,e)},winUpdate:function(e){U(n.WIN_UPDATE,e)},updateSettings:function(e){U(n.UPDATE_SETTINGS,e)},errorMessage:function(e){return U(n.ERROR_MESSAGE,e),!!Q.operatorHandlesErrors},navigate:oe,exitGame:function(){var e;if(U(n.EXIT_GAME),!Q.operatorHandlesGameExit){var o=u("homeurl");if(oe(o))return!0;if(null===(e=Q.clientConfig)||void 0===e?void 0:e.buttonEventsIframe)return G("closeGame"),!0;if(void 0===o||""===o)return window.history.length>1&&(window.history.back(),!0)}return!0},showHistory:function(){var e,n,o=u("rchistoryurl");ne(o)||(void 0===(n=o)||""===n||(window.open(n,"_blank"),0))&&(null===(e=Q.clientConfig)||void 0===e?void 0:e.buttonEventsIframe)&&G("showHistory")},goToGame:function(e){return U(n.GOTO_GAME,e),!0},openQuickDeposit:function(){U(n.OPEN_QUICK_DEPOSIT)}}),re=function(e){y(o.ERROR_MESSAGE_DISMISSED)(e)},ae=Object.freeze({__proto__:null,refreshBalance:function(e){y(o.REFRESH_BALANCE)(e)},updateSettings:function(e){y(o.UPDATE_SETTINGS)(e)},togglePaytable:function(e){y(o.PAYTABLE_TOGGLE)(e)},errorMessageDismissed:re,errorMessageDisplayed:function(e){y(o.ERROR_MESSAGE_DISPLAYED)(e)},toggleGameHelp:function(e){y(o.TOGGLE_GAME_HELP)(e)},exitingGame:function(e){y(o.EXITING_GAME)(e)},pauseAutoPlay:function(e){y(o.PAUSE_AUTOPLAY)(e)},lockPlay:function(e){y(o.LOCK_PLAY)(e)},unlockPlay:function(e){y(o.UNLOCK_PLAY)(e)},freeze:function(e){y(o.FREEZE)(e)},unfreeze:function(e){y(o.UNFREEZE)(e)}}),ie=Object.freeze({__proto__:null,onRealityCheckChoiceRequired:function(e){y(o.P2P_RC_CHOICE)(e)}});window.rlxfeim={verifyConfiguration:ee.verifyConfiguration,log:[]},I(new $),q=function(e){e.type===n.ROUND_STARTED?b=!0:e.type===n.ROUND_FINISHED&&(b=!1,H())},C.push(q),y(o._PAUSE_WHEN_IDLE)(x),y(o._RESUME)(Y),y(o._NAVIGATE_GAME)((function(e){void 0!==e.url&&(e.url.toLowerCase().startsWith("http:")||e.url.toLowerCase().startsWith("https:"))&&(window.location.href=e.url)})),m(),e.P2P=ie,e.configure=function(o){var t;t=o.logLevel,E||void 0===t||(d=t),X||!0!==o.handleRgPostMessageAPI||(X=!0,I(new z),I(new K)),function(o){var t;f("Assigning config:",e.LogLevel.INIT,Object.keys(o)),f("Config content:",e.LogLevel.ALL_MESSAGES_AND_PAYLOADS,o);try{if(void 0!==(null===(t=o.loginResponse)||void 0===t?void 0:t.stats.currency)){var r={currencyCode:o.loginResponse.stats.currency};U(n.CONFIGURE,r)}}catch(e){_("Invalid login response")}if(void 0!==o.p2pConfig){r={currencyCode:o.p2pConfig.currency};U(n.CONFIGURE,r)}o.handleFeaturePause&&U(n.CONFIGURE,{handleFeaturePause:o.handleFeaturePause}),Object.assign(Q,o)}(o)},e.debug=ee,e.getConfiguration=function(){return Q},e.on=ae,e.remove=function(e){N(e)},e.send=te,e.showError=function(t){return r(void 0,void 0,void 0,(function(){return a(this,(function(r){return[2,new Promise((function(r,a){if(void 0===Q.showErrorMessageCallback)return f("showErrorMessageCallback is not defined",e.LogLevel.WARN),void a();Q.operatorHandlesErrors?(f("Showing remote error message"),U(n.ERROR_MESSAGE,t),P(o.FREEZE),re((function(){P(o.UNFREEZE),r()}))):(P(o.FREEZE),Promise.resolve(Q.showErrorMessageCallback(t)).then((function(e){P(o.UNFREEZE),r(e)})).catch((function(e){P(o.UNFREEZE),a(e)})))}))]}))}))},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=rlxfeim.min.js.map
